/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/active-x-obfuscator/index.js":
/*!***************************************************!*\
  !*** ./node_modules/active-x-obfuscator/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var ZeParser = (__webpack_require__(/*! zeparser */ \"./node_modules/zeparser/index.js\").ZeParser);\nvar Util     = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nmodule.exports = ActiveXObfuscator;\nfunction ActiveXObfuscator(code) {\n  if (!(this instanceof ActiveXObfuscator)) {\n    var obfuscator = new ActiveXObfuscator(code);\n    obfuscator.execute();\n    return obfuscator.toString();\n  }\n\n  this._parser = ZeParser.createParser(code);\n}\n\nvar OBFUSCATED_ACTIVE_X_OBJECT = ActiveXObfuscator.OBFUSCATED_ACTIVE_X_OBJECT =\n  \"(['Active'].concat('Object').join('X'))\";\nvar OBFUSCATED_ACTIVE_X = ActiveXObfuscator.OBFUSCATED_ACTIVE_X =\n  \"(['Active'].concat('').join('X'))\";\n\nActiveXObfuscator.prototype.execute = function() {\n  this._parser.tokenizer.fixValues();\n  this._obfuscate(this.getAst());\n};\n\nActiveXObfuscator.prototype.getAst = function() {\n  return this._parser.stack;\n};\n\nActiveXObfuscator.prototype.getWhiteTokens = function() {\n  return this._parser.tokenizer.wtree;\n};\n\nActiveXObfuscator.prototype._obfuscate = function(ast) {\n  var self = this;\n\n  ast.forEach(function(node, index) {\n    if (Array.isArray(node)) {\n      self._obfuscate(node);\n      return;\n    }\n\n    switch (node.value) {\n      case 'ActiveXObject':\n        if (!node.isPropertyName) {\n          node.value = 'window[' + OBFUSCATED_ACTIVE_X_OBJECT + ']';\n          break;\n        }\n\n        var dot = ast[index - 1]\n        var whiteTokens = self.getWhiteTokens();\n        whiteTokens[dot.tokposw].value = '';\n\n        node.value = '[' + OBFUSCATED_ACTIVE_X_OBJECT + ']';\n        break;\n      case \"'ActiveXObject'\":\n      case '\"ActiveXObject\"':\n        node.value = OBFUSCATED_ACTIVE_X_OBJECT;\n        break;\n      case \"'ActiveX'\":\n      case '\"ActiveX\"':\n        node.value = OBFUSCATED_ACTIVE_X;\n        break;\n      default:\n        if (!/ActiveX/i.test(node.value)) {\n          break;\n        }\n\n        if (!node.isComment) {\n          throw new Error('Unknown ActiveX occurence in: ' + Util.inspect(node));\n        }\n\n        node.value = node.value.replace(/ActiveX/i, 'Ac...eX');\n    }\n\n  });\n};\n\nActiveXObfuscator.prototype.toString = function() {\n  var whiteTokens = this.getWhiteTokens();\n  return whiteTokens.reduce(function(output, node) {\n    return output += node.value;\n  }, '');\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/active-x-obfuscator/index.js?");

/***/ }),

/***/ "./node_modules/array-flatten/array-flatten.js":
/*!*****************************************************!*\
  !*** ./node_modules/array-flatten/array-flatten.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = flatten\nmodule.exports.from = flattenFrom\nmodule.exports.depth = flattenDepth\nmodule.exports.fromDepth = flattenFromDepth\n\n/**\n * Flatten an array.\n *\n * @param  {Array} array\n * @return {Array}\n */\nfunction flatten (array) {\n  if (!Array.isArray(array)) {\n    throw new TypeError('Expected value to be an array')\n  }\n\n  return flattenFrom(array)\n}\n\n/**\n * Flatten an array-like structure.\n *\n * @param  {Array} array\n * @return {Array}\n */\nfunction flattenFrom (array) {\n  return flattenDown(array, [])\n}\n\n/**\n * Flatten an array-like structure with depth.\n *\n * @param  {Array}  array\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenDepth (array, depth) {\n  if (!Array.isArray(array)) {\n    throw new TypeError('Expected value to be an array')\n  }\n\n  return flattenFromDepth(array, depth)\n}\n\n/**\n * Flatten an array-like structure with depth.\n *\n * @param  {Array}  array\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenFromDepth (array, depth) {\n  if (typeof depth !== 'number') {\n    throw new TypeError('Expected the depth to be a number')\n  }\n\n  return flattenDownDepth(array, [], depth)\n}\n\n/**\n * Flatten an array indefinitely.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenDown (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenDown(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenDownDepth (array, result, depth) {\n  depth--\n\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > -1 && Array.isArray(value)) {\n      flattenDownDepth(value, result, depth)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/array-flatten/array-flatten.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar bonjour = __webpack_require__(/*! bonjour */ \"./node_modules/bonjour/index.js\")({\n  interval: 1000\n});\nvar DeviceDiscovery = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(DeviceDiscovery, _EventEmitter);\n  function DeviceDiscovery(options) {\n    var _this;\n    _classCallCheck(this, DeviceDiscovery);\n    _this = _callSuper(this, DeviceDiscovery);\n    _this.devices = [];\n    _this.changed = true;\n    _this.deviceTimeoutThreshold = options.deviceTimeoutThreshold || 3000;\n    _this.lastUpEventTime = null;\n    _this.serviceType = options.serviceType || \"adb-tls-connect\";\n    _this.intervals = [];\n    _this.setupIntervals();\n    _this.startBonjourDiscovery();\n    return _this;\n  }\n  _createClass(DeviceDiscovery, [{\n    key: \"startBonjourDiscovery\",\n    value: function startBonjourDiscovery() {\n      var _this2 = this;\n      try {\n        this.browser = bonjour.find({\n          type: this.serviceType\n        });\n        this.browser.on(\"up\", function (service) {\n          _this2.lastUpEventTime = Date.now();\n          _this2.updateDevices(service);\n        });\n        this.browser.on(\"down\", function (service) {\n          console.log(\"\".concat(_this2.serviceType, \" server went down:\"), service);\n          _this2.removeDisconnectedDevice(service);\n        });\n      } catch (error) {\n        this.emitError(\"Error starting Bonjour discovery: \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"updateDevices\",\n    value: function updateDevices(service) {\n      try {\n        var existingDeviceIndex = this.devices.findIndex(function (device) {\n          return device.fqdn === service.fqdn;\n        });\n        if (existingDeviceIndex !== -1) {\n          this.devices[existingDeviceIndex] = this.createDeviceObject(service);\n        } else {\n          this.devices.push(this.createDeviceObject(service));\n          this.changed = true;\n        }\n        this.sendDevicesEvent(DeviceDiscovery.SERVICEUP);\n      } catch (error) {\n        this.emitError(\"Error updating devices: \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"removeDisconnectedDevice\",\n    value: function removeDisconnectedDevice(service) {\n      try {\n        this.devices = this.devices.filter(function (device) {\n          var _service$referer;\n          return device.address !== (service === null || service === void 0 || (_service$referer = service.referer) === null || _service$referer === void 0 ? void 0 : _service$referer.address);\n        });\n        this.sendDevicesEvent(DeviceDiscovery.SERVICEDOWN);\n      } catch (error) {\n        this.emitError(\"Error removing disconnected device: \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"createDeviceObject\",\n    value: function createDeviceObject(service) {\n      return _objectSpread(_objectSpread({}, service), {}, {\n        lastUpdateTime: this.lastUpEventTime\n      });\n    }\n  }, {\n    key: \"checkDeviceTimeouts\",\n    value: function checkDeviceTimeouts() {\n      var _this3 = this;\n      try {\n        var currentTime = Date.now();\n\n        // Filter out devices that haven't been updated within the threshold\n        this.devices = this.devices.filter(function (device) {\n          var isNotTimeout = currentTime - device.lastUpdateTime <= _this3.deviceTimeoutThreshold;\n          _this3.changed = _this3.changed || !isNotTimeout;\n          return isNotTimeout;\n        });\n        this.sendDevicesEvent(DeviceDiscovery.SERVICEDOWN);\n      } catch (error) {\n        this.emitError(\"Error checking device timeouts: \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"sendDevicesEvent\",\n    value: function sendDevicesEvent(type) {\n      if (this.changed) {\n        this.emit(DeviceDiscovery.EVENTNAME, {\n          type: type,\n          devices: this.devices\n        });\n        this.changed = false;\n      }\n    }\n  }, {\n    key: \"clearAndRestartBonjourDiscovery\",\n    value: function clearAndRestartBonjourDiscovery() {\n      try {\n        if (this.browser) {\n          this.browser.stop();\n        }\n        this.startBonjourDiscovery();\n      } catch (error) {\n        this.emitError(\"Error clearing and restarting Bonjour discovery: \".concat(error.message));\n      }\n    }\n  }, {\n    key: \"emitError\",\n    value: function emitError(errorMessage) {\n      this.emit(\"Device Discovery Error\", errorMessage);\n    }\n  }, {\n    key: \"setupIntervals\",\n    value: function setupIntervals() {\n      var _this4 = this;\n      this.intervals.push(setInterval(function () {\n        return _this4.clearAndRestartBonjourDiscovery();\n      }, 100));\n      this.intervals.push(setInterval(function () {\n        return _this4.checkDeviceTimeouts();\n      }, 100));\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      // Clear all intervals\n      this.intervals.forEach(function (intervalId) {\n        return clearInterval(intervalId);\n      });\n    }\n  }]);\n  return DeviceDiscovery;\n}(EventEmitter);\n_defineProperty(DeviceDiscovery, \"SERVICEUP\", \"Service Up\");\n_defineProperty(DeviceDiscovery, \"SERVICEDOWN\", \"Service Down\");\n_defineProperty(DeviceDiscovery, \"EVENTNAME\", \"Update\");\nmodule.exports = DeviceDiscovery;\n\n//# sourceURL=webpack://multicast-device-discovery/./src/index.js?");

/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/bonjour/index.js":
/*!***************************************!*\
  !*** ./node_modules/bonjour/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Registry = __webpack_require__(/*! ./lib/registry */ \"./node_modules/bonjour/lib/registry.js\")\nvar Server = __webpack_require__(/*! ./lib/mdns-server */ \"./node_modules/bonjour/lib/mdns-server.js\")\nvar Browser = __webpack_require__(/*! ./lib/browser */ \"./node_modules/bonjour/lib/browser.js\")\n\nmodule.exports = Bonjour\n\nfunction Bonjour (opts) {\n  if (!(this instanceof Bonjour)) return new Bonjour(opts)\n  this._server = new Server(opts)\n  this._registry = new Registry(this._server)\n}\n\nBonjour.prototype.publish = function (opts) {\n  return this._registry.publish(opts)\n}\n\nBonjour.prototype.unpublishAll = function (cb) {\n  this._registry.unpublishAll(cb)\n}\n\nBonjour.prototype.find = function (opts, onup) {\n  return new Browser(this._server.mdns, opts, onup)\n}\n\nBonjour.prototype.findOne = function (opts, cb) {\n  var browser = new Browser(this._server.mdns, opts)\n  browser.once('up', function (service) {\n    browser.stop()\n    if (cb) cb(service)\n  })\n  return browser\n}\n\nBonjour.prototype.destroy = function () {\n  this._registry.destroy()\n  this._server.mdns.destroy()\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/index.js?");

/***/ }),

/***/ "./node_modules/bonjour/lib/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/bonjour/lib/browser.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\")\nvar EventEmitter = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter)\nvar serviceName = __webpack_require__(/*! multicast-dns-service-types */ \"./node_modules/multicast-dns-service-types/index.js\")\nvar dnsEqual = __webpack_require__(/*! dns-equal */ \"./node_modules/dns-equal/index.js\")\nvar dnsTxt = __webpack_require__(/*! dns-txt */ \"./node_modules/dns-txt/index.js\")\n\nvar TLD = '.local'\nvar WILDCARD = '_services._dns-sd._udp' + TLD\n\nmodule.exports = Browser\n\nutil.inherits(Browser, EventEmitter)\n\n/**\n * Start a browser\n *\n * The browser listens for services by querying for PTR records of a given\n * type, protocol and domain, e.g. _http._tcp.local.\n *\n * If no type is given, a wild card search is performed.\n *\n * An internal list of online services is kept which starts out empty. When\n * ever a new service is discovered, it's added to the list and an \"up\" event\n * is emitted with that service. When it's discovered that the service is no\n * longer available, it is removed from the list and a \"down\" event is emitted\n * with that service.\n */\nfunction Browser (mdns, opts, onup) {\n  if (typeof opts === 'function') return new Browser(mdns, null, opts)\n\n  EventEmitter.call(this)\n\n  this._mdns = mdns\n  this._onresponse = null\n  this._serviceMap = {}\n  this._txt = dnsTxt(opts.txt)\n\n  if (!opts || !opts.type) {\n    this._name = WILDCARD\n    this._wildcard = true\n  } else {\n    this._name = serviceName.stringify(opts.type, opts.protocol || 'tcp') + TLD\n    if (opts.name) this._name = opts.name + '.' + this._name\n    this._wildcard = false\n  }\n\n  this.services = []\n\n  if (onup) this.on('up', onup)\n\n  this.start()\n}\n\nBrowser.prototype.start = function () {\n  if (this._onresponse) return\n\n  var self = this\n\n  // List of names for the browser to listen for. In a normal search this will\n  // be the primary name stored on the browser. In case of a wildcard search\n  // the names will be determined at runtime as responses come in.\n  var nameMap = {}\n  if (!this._wildcard) nameMap[this._name] = true\n\n  this._onresponse = function (packet, rinfo) {\n    if (self._wildcard) {\n      packet.answers.forEach(function (answer) {\n        if (answer.type !== 'PTR' || answer.name !== self._name || answer.name in nameMap) return\n        nameMap[answer.data] = true\n        self._mdns.query(answer.data, 'PTR')\n      })\n    }\n\n    Object.keys(nameMap).forEach(function (name) {\n      // unregister all services shutting down\n      goodbyes(name, packet).forEach(self._removeService.bind(self))\n\n      // register all new services\n      var matches = buildServicesFor(name, packet, self._txt, rinfo)\n      if (matches.length === 0) return\n\n      matches.forEach(function (service) {\n        if (self._serviceMap[service.fqdn]) return // ignore already registered services\n        self._addService(service)\n      })\n    })\n  }\n\n  this._mdns.on('response', this._onresponse)\n  this.update()\n}\n\nBrowser.prototype.stop = function () {\n  if (!this._onresponse) return\n\n  this._mdns.removeListener('response', this._onresponse)\n  this._onresponse = null\n}\n\nBrowser.prototype.update = function () {\n  this._mdns.query(this._name, 'PTR')\n}\n\nBrowser.prototype._addService = function (service) {\n  this.services.push(service)\n  this._serviceMap[service.fqdn] = true\n  this.emit('up', service)\n}\n\nBrowser.prototype._removeService = function (fqdn) {\n  var service, index\n  this.services.some(function (s, i) {\n    if (dnsEqual(s.fqdn, fqdn)) {\n      service = s\n      index = i\n      return true\n    }\n  })\n  if (!service) return\n  this.services.splice(index, 1)\n  delete this._serviceMap[fqdn]\n  this.emit('down', service)\n}\n\n// PTR records with a TTL of 0 is considered a \"goodbye\" announcement. I.e. a\n// DNS response broadcasted when a service shuts down in order to let the\n// network know that the service is no longer going to be available.\n//\n// For more info see:\n// https://tools.ietf.org/html/rfc6762#section-8.4\n//\n// This function returns an array of all resource records considered a goodbye\n// record\nfunction goodbyes (name, packet) {\n  return packet.answers.concat(packet.additionals)\n    .filter(function (rr) {\n      return rr.type === 'PTR' && rr.ttl === 0 && dnsEqual(rr.name, name)\n    })\n    .map(function (rr) {\n      return rr.data\n    })\n}\n\nfunction buildServicesFor (name, packet, txt, referer) {\n  var records = packet.answers.concat(packet.additionals).filter(function (rr) {\n    return rr.ttl > 0 // ignore goodbye messages\n  })\n\n  return records\n    .filter(function (rr) {\n      return rr.type === 'PTR' && dnsEqual(rr.name, name)\n    })\n    .map(function (ptr) {\n      var service = {\n        addresses: []\n      }\n\n      records\n        .filter(function (rr) {\n          return (rr.type === 'SRV' || rr.type === 'TXT') && dnsEqual(rr.name, ptr.data)\n        })\n        .forEach(function (rr) {\n          if (rr.type === 'SRV') {\n            var parts = rr.name.split('.')\n            var name = parts[0]\n            var types = serviceName.parse(parts.slice(1, -1).join('.'))\n            service.name = name\n            service.fqdn = rr.name\n            service.host = rr.data.target\n            service.referer = referer\n            service.port = rr.data.port\n            service.type = types.name\n            service.protocol = types.protocol\n            service.subtypes = types.subtypes\n          } else if (rr.type === 'TXT') {\n            service.rawTxt = rr.data\n            service.txt = txt.decode(rr.data)\n          }\n        })\n\n      if (!service.name) return\n\n      records\n        .filter(function (rr) {\n          return (rr.type === 'A' || rr.type === 'AAAA') && dnsEqual(rr.name, service.host)\n        })\n        .forEach(function (rr) {\n          service.addresses.push(rr.data)\n        })\n\n      return service\n    })\n    .filter(function (rr) {\n      return !!rr\n    })\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/lib/browser.js?");

/***/ }),

/***/ "./node_modules/bonjour/lib/mdns-server.js":
/*!*************************************************!*\
  !*** ./node_modules/bonjour/lib/mdns-server.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar multicastdns = __webpack_require__(/*! multicast-dns */ \"./node_modules/bonjour/node_modules/multicast-dns/index.js\")\nvar dnsEqual = __webpack_require__(/*! dns-equal */ \"./node_modules/dns-equal/index.js\")\nvar flatten = __webpack_require__(/*! array-flatten */ \"./node_modules/array-flatten/array-flatten.js\")\nvar deepEqual = __webpack_require__(/*! deep-equal */ \"./node_modules/deep-equal/index.js\")\n\nmodule.exports = Server\n\nfunction Server (opts) {\n  this.mdns = multicastdns(opts)\n  this.mdns.setMaxListeners(0)\n  this.registry = {}\n  this.mdns.on('query', this._respondToQuery.bind(this))\n}\n\nServer.prototype.register = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(register)\n  else register(records)\n\n  function register (record) {\n    var subRegistry = self.registry[record.type]\n    if (!subRegistry) subRegistry = self.registry[record.type] = []\n    else if (subRegistry.some(isDuplicateRecord(record))) return\n    subRegistry.push(record)\n  }\n}\n\nServer.prototype.unregister = function (records) {\n  var self = this\n\n  if (Array.isArray(records)) records.forEach(unregister)\n  else unregister(records)\n\n  function unregister (record) {\n    var type = record.type\n    if (!(type in self.registry)) return\n    self.registry[type] = self.registry[type].filter(function (r) {\n      return r.name !== record.name\n    })\n  }\n}\n\nServer.prototype._respondToQuery = function (query) {\n  var self = this\n  query.questions.forEach(function (question) {\n    var type = question.type\n    var name = question.name\n\n    // generate the answers section\n    var answers = type === 'ANY'\n      ? flatten.depth(Object.keys(self.registry).map(self._recordsFor.bind(self, name)), 1)\n      : self._recordsFor(name, type)\n\n    if (answers.length === 0) return\n\n    // generate the additionals section\n    var additionals = []\n    if (type !== 'ANY') {\n      answers.forEach(function (answer) {\n        if (answer.type !== 'PTR') return\n        additionals = additionals\n          .concat(self._recordsFor(answer.data, 'SRV'))\n          .concat(self._recordsFor(answer.data, 'TXT'))\n      })\n\n      // to populate the A and AAAA records, we need to get a set of unique\n      // targets from the SRV record\n      additionals\n        .filter(function (record) {\n          return record.type === 'SRV'\n        })\n        .map(function (record) {\n          return record.data.target\n        })\n        .filter(unique())\n        .forEach(function (target) {\n          additionals = additionals\n            .concat(self._recordsFor(target, 'A'))\n            .concat(self._recordsFor(target, 'AAAA'))\n        })\n    }\n\n    self.mdns.respond({ answers: answers, additionals: additionals }, function (err) {\n      if (err) throw err // TODO: Handle this (if no callback is given, the error will be ignored)\n    })\n  })\n}\n\nServer.prototype._recordsFor = function (name, type) {\n  if (!(type in this.registry)) return []\n\n  return this.registry[type].filter(function (record) {\n    var _name = ~name.indexOf('.') ? record.name : record.name.split('.')[0]\n    return dnsEqual(_name, name)\n  })\n}\n\nfunction isDuplicateRecord (a) {\n  return function (b) {\n    return a.type === b.type &&\n      a.name === b.name &&\n      deepEqual(a.data, b.data)\n  }\n}\n\nfunction unique () {\n  var set = []\n  return function (obj) {\n    if (~set.indexOf(obj)) return false\n    set.push(obj)\n    return true\n  }\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/lib/mdns-server.js?");

/***/ }),

/***/ "./node_modules/bonjour/lib/registry.js":
/*!**********************************************!*\
  !*** ./node_modules/bonjour/lib/registry.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar dnsEqual = __webpack_require__(/*! dns-equal */ \"./node_modules/dns-equal/index.js\")\nvar flatten = __webpack_require__(/*! array-flatten */ \"./node_modules/array-flatten/array-flatten.js\")\nvar Service = __webpack_require__(/*! ./service */ \"./node_modules/bonjour/lib/service.js\")\n\nvar REANNOUNCE_MAX_MS = 60 * 60 * 1000\nvar REANNOUNCE_FACTOR = 3\n\nmodule.exports = Registry\n\nfunction Registry (server) {\n  this._server = server\n  this._services = []\n}\n\nRegistry.prototype.publish = function (opts) {\n  var service = new Service(opts)\n  service.start = start.bind(service, this)\n  service.stop = stop.bind(service, this)\n  service.start({ probe: opts.probe !== false })\n  return service\n}\n\nRegistry.prototype.unpublishAll = function (cb) {\n  teardown(this._server, this._services, cb)\n  this._services = []\n}\n\nRegistry.prototype.destroy = function () {\n  this._services.forEach(function (service) {\n    service._destroyed = true\n  })\n}\n\nfunction start (registry, opts) {\n  if (this._activated) return\n  this._activated = true\n\n  registry._services.push(this)\n\n  if (opts.probe) {\n    var service = this\n    probe(registry._server.mdns, this, function (exists) {\n      if (exists) {\n        service.stop()\n        service.emit('error', new Error('Service name is already in use on the network'))\n        return\n      }\n      announce(registry._server, service)\n    })\n  } else {\n    announce(registry._server, this)\n  }\n}\n\nfunction stop (registry, cb) {\n  if (!this._activated) return // TODO: What about the callback?\n\n  teardown(registry._server, this, cb)\n\n  var index = registry._services.indexOf(this)\n  if (index !== -1) registry._services.splice(index, 1)\n}\n\n/**\n * Check if a service name is already in use on the network.\n *\n * Used before announcing the new service.\n *\n * To guard against race conditions where multiple services are started\n * simultaneously on the network, wait a random amount of time (between\n * 0 and 250 ms) before probing.\n *\n * TODO: Add support for Simultaneous Probe Tiebreaking:\n * https://tools.ietf.org/html/rfc6762#section-8.2\n */\nfunction probe (mdns, service, cb) {\n  var sent = false\n  var retries = 0\n  var timer\n\n  mdns.on('response', onresponse)\n  setTimeout(send, Math.random() * 250)\n\n  function send () {\n    // abort if the service have or is being stopped in the meantime\n    if (!service._activated || service._destroyed) return\n\n    mdns.query(service.fqdn, 'ANY', function () {\n      // This function will optionally be called with an error object. We'll\n      // just silently ignore it and retry as we normally would\n      sent = true\n      timer = setTimeout(++retries < 3 ? send : done, 250)\n      timer.unref()\n    })\n  }\n\n  function onresponse (packet) {\n    // Apparently conflicting Multicast DNS responses received *before*\n    // the first probe packet is sent MUST be silently ignored (see\n    // discussion of stale probe packets in RFC 6762 Section 8.2,\n    // \"Simultaneous Probe Tiebreaking\" at\n    // https://tools.ietf.org/html/rfc6762#section-8.2\n    if (!sent) return\n\n    if (packet.answers.some(matchRR) || packet.additionals.some(matchRR)) done(true)\n  }\n\n  function matchRR (rr) {\n    return dnsEqual(rr.name, service.fqdn)\n  }\n\n  function done (exists) {\n    mdns.removeListener('response', onresponse)\n    clearTimeout(timer)\n    cb(!!exists)\n  }\n}\n\n/**\n * Initial service announcement\n *\n * Used to announce new services when they are first registered.\n *\n * Broadcasts right away, then after 3 seconds, 9 seconds, 27 seconds,\n * and so on, up to a maximum interval of one hour.\n */\nfunction announce (server, service) {\n  var delay = 1000\n  var packet = service._records()\n\n  server.register(packet)\n\n  ;(function broadcast () {\n    // abort if the service have or is being stopped in the meantime\n    if (!service._activated || service._destroyed) return\n\n    server.mdns.respond(packet, function () {\n      // This function will optionally be called with an error object. We'll\n      // just silently ignore it and retry as we normally would\n      if (!service.published) {\n        service._activated = true\n        service.published = true\n        service.emit('up')\n      }\n      delay = delay * REANNOUNCE_FACTOR\n      if (delay < REANNOUNCE_MAX_MS && !service._destroyed) {\n        setTimeout(broadcast, delay).unref()\n      }\n    })\n  })()\n}\n\n/**\n * Stop the given services\n *\n * Besides removing a service from the mDNS registry, a \"goodbye\"\n * message is sent for each service to let the network know about the\n * shutdown.\n */\nfunction teardown (server, services, cb) {\n  if (!Array.isArray(services)) services = [services]\n\n  services = services.filter(function (service) {\n    return service._activated // ignore services not currently starting or started\n  })\n\n  var records = flatten.depth(services.map(function (service) {\n    service._activated = false\n    var records = service._records()\n    records.forEach(function (record) {\n      record.ttl = 0 // prepare goodbye message\n    })\n    return records\n  }), 1)\n\n  if (records.length === 0) return cb && cb()\n\n  server.unregister(records)\n\n  // send goodbye message\n  server.mdns.respond(records, function () {\n    services.forEach(function (service) {\n      service.published = false\n    })\n    if (cb) cb.apply(null, arguments)\n  })\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/lib/registry.js?");

/***/ }),

/***/ "./node_modules/bonjour/lib/service.js":
/*!*********************************************!*\
  !*** ./node_modules/bonjour/lib/service.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar os = __webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\")\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\")\nvar EventEmitter = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter)\nvar serviceName = __webpack_require__(/*! multicast-dns-service-types */ \"./node_modules/multicast-dns-service-types/index.js\")\nvar txt = __webpack_require__(/*! dns-txt */ \"./node_modules/dns-txt/index.js\")()\n\nvar TLD = '.local'\n\nmodule.exports = Service\n\nutil.inherits(Service, EventEmitter)\n\nfunction Service (opts) {\n  if (!opts.name) throw new Error('Required name not given')\n  if (!opts.type) throw new Error('Required type not given')\n  if (!opts.port) throw new Error('Required port not given')\n\n  this.name = opts.name\n  this.protocol = opts.protocol || 'tcp'\n  this.type = serviceName.stringify(opts.type, this.protocol)\n  this.host = opts.host || os.hostname()\n  this.port = opts.port\n  this.fqdn = this.name + '.' + this.type + TLD\n  this.subtypes = opts.subtypes || null\n  this.txt = opts.txt || null\n  this.published = false\n\n  this._activated = false // indicates intent - true: starting/started, false: stopping/stopped\n}\n\nService.prototype._records = function () {\n  var records = [rr_ptr(this), rr_srv(this), rr_txt(this)]\n\n  var self = this\n  var interfaces = os.networkInterfaces()\n  Object.keys(interfaces).forEach(function (name) {\n    interfaces[name].forEach(function (addr) {\n      if (addr.internal) return\n      if (addr.family === 'IPv4') {\n        records.push(rr_a(self, addr.address))\n      } else {\n        records.push(rr_aaaa(self, addr.address))\n      }\n    })\n  })\n\n  return records\n}\n\nfunction rr_ptr (service) {\n  return {\n    name: service.type + TLD,\n    type: 'PTR',\n    ttl: 28800,\n    data: service.fqdn\n  }\n}\n\nfunction rr_srv (service) {\n  return {\n    name: service.fqdn,\n    type: 'SRV',\n    ttl: 120,\n    data: {\n      port: service.port,\n      target: service.host\n    }\n  }\n}\n\nfunction rr_txt (service) {\n  return {\n    name: service.fqdn,\n    type: 'TXT',\n    ttl: 4500,\n    data: txt.encode(service.txt)\n  }\n}\n\nfunction rr_a (service, ip) {\n  return {\n    name: service.host,\n    type: 'A',\n    ttl: 120,\n    data: ip\n  }\n}\n\nfunction rr_aaaa (service, ip) {\n  return {\n    name: service.host,\n    type: 'AAAA',\n    ttl: 120,\n    data: ip\n  }\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/lib/service.js?");

/***/ }),

/***/ "./node_modules/bonjour/node_modules/dns-packet/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/bonjour/node_modules/dns-packet/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var types = __webpack_require__(/*! ./types */ \"./node_modules/bonjour/node_modules/dns-packet/types.js\")\nvar rcodes = __webpack_require__(/*! ./rcodes */ \"./node_modules/bonjour/node_modules/dns-packet/rcodes.js\")\nvar opcodes = __webpack_require__(/*! ./opcodes */ \"./node_modules/bonjour/node_modules/dns-packet/opcodes.js\")\nvar ip = __webpack_require__(/*! ip */ \"./node_modules/ip/lib/ip.js\")\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nvar QUERY_FLAG = 0\nvar RESPONSE_FLAG = 1 << 15\nvar FLUSH_MASK = 1 << 15\nvar NOT_FLUSH_MASK = ~FLUSH_MASK\nvar QU_MASK = 1 << 15\nvar NOT_QU_MASK = ~QU_MASK\n\nvar name = exports.txt = exports.name = {}\n\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.alloc(name.encodingLength(str))\n  if (!offset) offset = 0\n  var oldOffset = offset\n\n  // strip leading and trailing .\n  var n = str.replace(/^\\.|\\.$/gm, '')\n  if (n.length) {\n    var list = n.split('.')\n\n    for (var i = 0; i < list.length; i++) {\n      var len = buf.write(list[i], offset + 1)\n      buf[offset] = len\n      offset += len + 1\n    }\n  }\n\n  buf[offset++] = 0\n\n  name.encode.bytes = offset - oldOffset\n  return buf\n}\n\nname.encode.bytes = 0\n\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var list = []\n  var oldOffset = offset\n  var len = buf[offset++]\n\n  if (len === 0) {\n    name.decode.bytes = 1\n    return '.'\n  }\n  if (len >= 0xc0) {\n    var res = name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000)\n    name.decode.bytes = 2\n    return res\n  }\n\n  while (len) {\n    if (len >= 0xc0) {\n      list.push(name.decode(buf, buf.readUInt16BE(offset - 1) - 0xc000))\n      offset++\n      break\n    }\n\n    list.push(buf.toString('utf-8', offset, offset + len))\n    offset += len\n    len = buf[offset++]\n  }\n\n  name.decode.bytes = offset - oldOffset\n  return list.join('.')\n}\n\nname.decode.bytes = 0\n\nname.encodingLength = function (n) {\n  if (n === '.' || n === '..') return 1\n  return Buffer.byteLength(n.replace(/^\\.|\\.$/gm, '')) + 2\n}\n\nvar string = {}\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.alloc(string.encodingLength(s))\n  if (!offset) offset = 0\n\n  var len = buf.write(s, offset + 1)\n  buf[offset] = len\n  string.encode.bytes = len + 1\n  return buf\n}\n\nstring.encode.bytes = 0\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf[offset]\n  var s = buf.toString('utf-8', offset + 1, offset + 1 + len)\n  string.decode.bytes = len + 1\n  return s\n}\n\nstring.decode.bytes = 0\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1\n}\n\nvar header = {}\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h)\n  if (!offset) offset = 0\n\n  var flags = (h.flags || 0) & 32767\n  var type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n  buf.writeUInt16BE(h.id || 0, offset)\n  buf.writeUInt16BE(flags | type, offset + 2)\n  buf.writeUInt16BE(h.questions.length, offset + 4)\n  buf.writeUInt16BE(h.answers.length, offset + 6)\n  buf.writeUInt16BE(h.authorities.length, offset + 8)\n  buf.writeUInt16BE(h.additionals.length, offset + 10)\n\n  return buf\n}\n\nheader.encode.bytes = 12\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  if (buf.length < 12) throw new Error('Header must be 12 bytes')\n  var flags = buf.readUInt16BE(offset + 2)\n\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: ((flags >> 15) & 0x1) === 1,\n    opcode: opcodes.toString((flags >> 11) & 0xf),\n    flag_auth: ((flags >> 10) & 0x1) === 1,\n    flag_trunc: ((flags >> 9) & 0x1) === 1,\n    flag_rd: ((flags >> 8) & 0x1) === 1,\n    flag_ra: ((flags >> 7) & 0x1) === 1,\n    flag_z: ((flags >> 6) & 0x1) === 1,\n    flag_ad: ((flags >> 5) & 0x1) === 1,\n    flag_cd: ((flags >> 4) & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  }\n}\n\nheader.decode.bytes = 12\n\nheader.encodingLength = function () {\n  return 12\n}\n\nvar runknown = exports.unknown = {}\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(runknown.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.length, offset)\n  data.copy(buf, offset + 2)\n\n  runknown.encode.bytes = data.length + 2\n  return buf\n}\n\nrunknown.encode.bytes = 0\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var data = buf.slice(offset + 2, offset + 2 + len)\n  runknown.decode.bytes = len + 2\n  return data\n}\n\nrunknown.decode.bytes = 0\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2\n}\n\nvar rns = exports.ns = {}\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rns.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rns.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrns.encode.bytes = 0\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  var dd = name.decode(buf, offset + 2)\n\n  rns.decode.bytes = len + 2\n  return dd\n}\n\nrns.decode.bytes = 0\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsoa = exports.soa = {}\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsoa.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  name.encode(data.mname, buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.rname, buf, offset)\n  offset += name.encode.bytes\n  buf.writeUInt32BE(data.serial || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.refresh || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.retry || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.expire || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.minimum || 0, offset)\n  offset += 4\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rsoa.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrsoa.encode.bytes = 0\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.mname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.rname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.serial = buf.readUInt32BE(offset)\n  offset += 4\n  data.refresh = buf.readUInt32BE(offset)\n  offset += 4\n  data.retry = buf.readUInt32BE(offset)\n  offset += 4\n  data.expire = buf.readUInt32BE(offset)\n  offset += 4\n  data.minimum = buf.readUInt32BE(offset)\n  offset += 4\n\n  rsoa.decode.bytes = offset - oldOffset\n  return data\n}\n\nrsoa.decode.bytes = 0\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n}\n\nvar rtxt = exports.txt = exports[\"null\"] = {}\nvar rnull = rtxt\n\nrtxt.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rtxt.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (typeof data === 'string') data = Buffer.from(data)\n  if (!data) data = Buffer.alloc(0)\n\n  var oldOffset = offset\n  offset += 2\n\n  var len = data.length\n  data.copy(buf, offset, 0, len)\n  offset += len\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rtxt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrtxt.encode.bytes = 0\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  var oldOffset = offset\n  var len = buf.readUInt16BE(offset)\n\n  offset += 2\n\n  var data = buf.slice(offset, offset + len)\n  offset += len\n\n  rtxt.decode.bytes = offset - oldOffset\n  return data\n}\n\nrtxt.decode.bytes = 0\n\nrtxt.encodingLength = function (data) {\n  if (!data) return 2\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2\n}\n\nvar rhinfo = exports.hinfo = {}\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rhinfo.encodingLength(data))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  offset += 2\n  string.encode(data.cpu, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.os, buf, offset)\n  offset += string.encode.bytes\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rhinfo.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrhinfo.encode.bytes = 0\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  var data = {}\n  offset += 2\n  data.cpu = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.os = string.decode(buf, offset)\n  offset += string.decode.bytes\n  rhinfo.decode.bytes = offset - oldOffset\n  return data\n}\n\nrhinfo.decode.bytes = 0\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n}\n\nvar rptr = exports.ptr = {}\nvar rcname = exports.cname = rptr\nvar rdname = exports.dname = rptr\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rptr.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rptr.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrptr.encode.bytes = 0\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var data = name.decode(buf, offset + 2)\n  rptr.decode.bytes = name.decode.bytes + 2\n  return data\n}\n\nrptr.decode.bytes = 0\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nvar rsrv = exports.srv = {}\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsrv.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.priority || 0, offset + 2)\n  buf.writeUInt16BE(data.weight || 0, offset + 4)\n  buf.writeUInt16BE(data.port || 0, offset + 6)\n  name.encode(data.target, buf, offset + 8)\n\n  var len = name.encode.bytes + 6\n  buf.writeUInt16BE(len, offset)\n\n  rsrv.encode.bytes = len + 2\n  return buf\n}\n\nrsrv.encode.bytes = 0\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n\n  var data = {}\n  data.priority = buf.readUInt16BE(offset + 2)\n  data.weight = buf.readUInt16BE(offset + 4)\n  data.port = buf.readUInt16BE(offset + 6)\n  data.target = name.decode(buf, offset + 8)\n\n  rsrv.decode.bytes = len + 2\n  return data\n}\n\nrsrv.decode.bytes = 0\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target)\n}\n\nvar rcaa = exports.caa = {}\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nrcaa.encode = function (data, buf, offset) {\n  var len = rcaa.encodingLength(data)\n\n  if (!buf) buf = Buffer.alloc(rcaa.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL\n  }\n\n  buf.writeUInt16BE(len - 2, offset)\n  offset += 2\n  buf.writeUInt8(data.flags || 0, offset)\n  offset += 1\n  string.encode(data.tag, buf, offset)\n  offset += string.encode.bytes\n  buf.write(data.value, offset)\n  offset += Buffer.byteLength(data.value)\n\n  rcaa.encode.bytes = len\n  return buf\n}\n\nrcaa.encode.bytes = 0\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var len = buf.readUInt16BE(offset)\n  offset += 2\n\n  var oldOffset = offset\n  var data = {}\n  data.flags = buf.readUInt8(offset)\n  offset += 1\n  data.tag = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.value = buf.toString('utf-8', offset, oldOffset + len)\n\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n  rcaa.decode.bytes = len + 2\n\n  return data\n}\n\nrcaa.decode.bytes = 0\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n}\n\nvar ra = exports.a = {}\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ra.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(4, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  ra.encode.bytes = 6\n  return buf\n}\n\nra.encode.bytes = 0\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 4)\n  ra.decode.bytes = 6\n  return host\n}\n\nra.decode.bytes = 0\n\nra.encodingLength = function () {\n  return 6\n}\n\nvar raaaa = exports.aaaa = {}\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(raaaa.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(16, offset)\n  offset += 2\n  ip.toBuffer(host, buf, offset)\n  raaaa.encode.bytes = 18\n  return buf\n}\n\nraaaa.encode.bytes = 0\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  var host = ip.toString(buf, offset, 16)\n  raaaa.decode.bytes = 18\n  return host\n}\n\nraaaa.decode.bytes = 0\n\nraaaa.encodingLength = function () {\n  return 18\n}\n\nvar renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rcname\n    case 'DNAME': return rdname\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n  }\n  return runknown\n}\n\nvar answer = exports.answer = {}\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.alloc(answer.encodingLength(a))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(a.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(a.type), offset)\n\n  var klass = a.class === undefined ? 1 : a.class\n  if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n  buf.writeUInt16BE(klass, offset + 2)\n\n  buf.writeUInt32BE(a.ttl || 0, offset + 4)\n\n  var enc = renc(a.type)\n  enc.encode(a.data, buf, offset + 8)\n  offset += 8 + enc.encode.bytes\n\n  answer.encode.bytes = offset - oldOffset\n  return buf\n}\n\nanswer.encode.bytes = 0\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var a = {}\n  var oldOffset = offset\n\n  a.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n  a.type = types.toString(buf.readUInt16BE(offset))\n  a.class = buf.readUInt16BE(offset + 2)\n  a.ttl = buf.readUInt32BE(offset + 4)\n\n  a.flush = !!(a.class & FLUSH_MASK)\n  if (a.flush) a.class &= NOT_FLUSH_MASK\n\n  var enc = renc(a.type)\n  a.data = enc.decode(buf, offset + 8)\n  offset += 8 + enc.decode.bytes\n\n  answer.decode.bytes = offset - oldOffset\n  return a\n}\n\nanswer.decode.bytes = 0\n\nanswer.encodingLength = function (a) {\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(a.data)\n}\n\nvar question = exports.question = {}\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.alloc(question.encodingLength(q))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  name.encode(q.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(q.type), offset)\n  offset += 2\n\n  buf.writeUInt16BE(q.class === undefined ? 1 : q.class, offset)\n  offset += 2\n\n  question.encode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.encode.bytes = 0\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var q = {}\n\n  q.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  q.type = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  q.class = buf.readUInt16BE(offset)\n  offset += 2\n\n  var qu = !!(q.class & QU_MASK)\n  if (qu) q.class &= NOT_QU_MASK\n\n  question.decode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.decode.bytes = 0\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4\n}\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10\nexports.TRUNCATED_RESPONSE = 1 << 9\nexports.RECURSION_DESIRED = 1 << 8\nexports.RECURSION_AVAILABLE = 1 << 7\nexports.AUTHENTIC_DATA = 1 << 5\nexports.CHECKING_DISABLED = 1 << 4\n\nexports.encode = function (result, buf, offset) {\n  var allocing = !buf\n  if (allocing) buf = Buffer.alloc(exports.encodingLength(result))\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n\n  if (!result.questions) result.questions = []\n  if (!result.answers) result.answers = []\n  if (!result.authorities) result.authorities = []\n  if (!result.additionals) result.additionals = []\n\n  header.encode(result, buf, offset)\n  offset += header.encode.bytes\n\n  offset = encodeList(result.questions, question, buf, offset)\n  offset = encodeList(result.answers, answer, buf, offset)\n  offset = encodeList(result.authorities, answer, buf, offset)\n  offset = encodeList(result.additionals, answer, buf, offset)\n\n  exports.encode.bytes = offset - oldOffset\n\n  // just a quick sanity check\n  if (allocing && exports.encode.bytes !== buf.length) {\n    return buf.slice(0, exports.encode.bytes)\n  }\n\n  return buf\n}\n\nexports.encode.bytes = 0\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  var oldOffset = offset\n  var result = header.decode(buf, offset)\n  offset += header.decode.bytes\n\n  offset = decodeList(result.questions, question, buf, offset)\n  offset = decodeList(result.answers, answer, buf, offset)\n  offset = decodeList(result.authorities, answer, buf, offset)\n  offset = decodeList(result.additionals, answer, buf, offset)\n\n  exports.decode.bytes = offset - oldOffset\n\n  return result\n}\n\nexports.decode.bytes = 0\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) +\n    encodingLengthList(result.questions || [], question) +\n    encodingLengthList(result.answers || [], answer) +\n    encodingLengthList(result.authorities || [], answer) +\n    encodingLengthList(result.additionals || [], answer)\n}\n\nfunction encodingLengthList (list, enc) {\n  var len = 0\n  for (var i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nfunction encodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nfunction decodeList (list, enc, buf, offset) {\n  for (var i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/node_modules/dns-packet/index.js?");

/***/ }),

/***/ "./node_modules/bonjour/node_modules/dns-packet/opcodes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bonjour/node_modules/dns-packet/opcodes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*\n * Traditional DNS header OPCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-5\n */\n\nexports.toString = function (opcode) {\n  switch (opcode) {\n    case 0: return 'QUERY'\n    case 1: return 'IQUERY'\n    case 2: return 'STATUS'\n    case 3: return 'OPCODE_3'\n    case 4: return 'NOTIFY'\n    case 5: return 'UPDATE'\n    case 6: return 'OPCODE_6'\n    case 7: return 'OPCODE_7'\n    case 8: return 'OPCODE_8'\n    case 9: return 'OPCODE_9'\n    case 10: return 'OPCODE_10'\n    case 11: return 'OPCODE_11'\n    case 12: return 'OPCODE_12'\n    case 13: return 'OPCODE_13'\n    case 14: return 'OPCODE_14'\n    case 15: return 'OPCODE_15'\n  }\n  return 'OPCODE_' + opcode\n}\n\nexports.toOpcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'QUERY': return 0\n    case 'IQUERY': return 1\n    case 'STATUS': return 2\n    case 'OPCODE_3': return 3\n    case 'NOTIFY': return 4\n    case 'UPDATE': return 5\n    case 'OPCODE_6': return 6\n    case 'OPCODE_7': return 7\n    case 'OPCODE_8': return 8\n    case 'OPCODE_9': return 9\n    case 'OPCODE_10': return 10\n    case 'OPCODE_11': return 11\n    case 'OPCODE_12': return 12\n    case 'OPCODE_13': return 13\n    case 'OPCODE_14': return 14\n    case 'OPCODE_15': return 15\n  }\n  return 0\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/node_modules/dns-packet/opcodes.js?");

/***/ }),

/***/ "./node_modules/bonjour/node_modules/dns-packet/rcodes.js":
/*!****************************************************************!*\
  !*** ./node_modules/bonjour/node_modules/dns-packet/rcodes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*\n * Traditional DNS header RCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml\n */\n\nexports.toString = function (rcode) {\n  switch (rcode) {\n    case 0: return 'NOERROR'\n    case 1: return 'FORMERR'\n    case 2: return 'SERVFAIL'\n    case 3: return 'NXDOMAIN'\n    case 4: return 'NOTIMP'\n    case 5: return 'REFUSED'\n    case 6: return 'YXDOMAIN'\n    case 7: return 'YXRRSET'\n    case 8: return 'NXRRSET'\n    case 9: return 'NOTAUTH'\n    case 10: return 'NOTZONE'\n    case 11: return 'RCODE_11'\n    case 12: return 'RCODE_12'\n    case 13: return 'RCODE_13'\n    case 14: return 'RCODE_14'\n    case 15: return 'RCODE_15'\n  }\n  return 'RCODE_' + rcode\n}\n\nexports.toRcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'NOERROR': return 0\n    case 'FORMERR': return 1\n    case 'SERVFAIL': return 2\n    case 'NXDOMAIN': return 3\n    case 'NOTIMP': return 4\n    case 'REFUSED': return 5\n    case 'YXDOMAIN': return 6\n    case 'YXRRSET': return 7\n    case 'NXRRSET': return 8\n    case 'NOTAUTH': return 9\n    case 'NOTZONE': return 10\n    case 'RCODE_11': return 11\n    case 'RCODE_12': return 12\n    case 'RCODE_13': return 13\n    case 'RCODE_14': return 14\n    case 'RCODE_15': return 15\n  }\n  return 0\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/node_modules/dns-packet/rcodes.js?");

/***/ }),

/***/ "./node_modules/bonjour/node_modules/dns-packet/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/bonjour/node_modules/dns-packet/types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.toString = function (type) {\n  switch (type) {\n    case 1: return 'A'\n    case 10: return 'NULL'\n    case 28: return 'AAAA'\n    case 18: return 'AFSDB'\n    case 42: return 'APL'\n    case 257: return 'CAA'\n    case 60: return 'CDNSKEY'\n    case 59: return 'CDS'\n    case 37: return 'CERT'\n    case 5: return 'CNAME'\n    case 49: return 'DHCID'\n    case 32769: return 'DLV'\n    case 39: return 'DNAME'\n    case 48: return 'DNSKEY'\n    case 43: return 'DS'\n    case 55: return 'HIP'\n    case 13: return 'HINFO'\n    case 45: return 'IPSECKEY'\n    case 25: return 'KEY'\n    case 36: return 'KX'\n    case 29: return 'LOC'\n    case 15: return 'MX'\n    case 35: return 'NAPTR'\n    case 2: return 'NS'\n    case 47: return 'NSEC'\n    case 50: return 'NSEC3'\n    case 51: return 'NSEC3PARAM'\n    case 12: return 'PTR'\n    case 46: return 'RRSIG'\n    case 17: return 'RP'\n    case 24: return 'SIG'\n    case 6: return 'SOA'\n    case 99: return 'SPF'\n    case 33: return 'SRV'\n    case 44: return 'SSHFP'\n    case 32768: return 'TA'\n    case 249: return 'TKEY'\n    case 52: return 'TLSA'\n    case 250: return 'TSIG'\n    case 16: return 'TXT'\n    case 252: return 'AXFR'\n    case 251: return 'IXFR'\n    case 41: return 'OPT'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + type\n}\n\nexports.toType = function (name) {\n  switch (name.toUpperCase()) {\n    case 'A': return 1\n    case 'NULL': return 10\n    case 'AAAA': return 28\n    case 'AFSDB': return 18\n    case 'APL': return 42\n    case 'CAA': return 257\n    case 'CDNSKEY': return 60\n    case 'CDS': return 59\n    case 'CERT': return 37\n    case 'CNAME': return 5\n    case 'DHCID': return 49\n    case 'DLV': return 32769\n    case 'DNAME': return 39\n    case 'DNSKEY': return 48\n    case 'DS': return 43\n    case 'HIP': return 55\n    case 'HINFO': return 13\n    case 'IPSECKEY': return 45\n    case 'KEY': return 25\n    case 'KX': return 36\n    case 'LOC': return 29\n    case 'MX': return 15\n    case 'NAPTR': return 35\n    case 'NS': return 2\n    case 'NSEC': return 47\n    case 'NSEC3': return 50\n    case 'NSEC3PARAM': return 51\n    case 'PTR': return 12\n    case 'RRSIG': return 46\n    case 'RP': return 17\n    case 'SIG': return 24\n    case 'SOA': return 6\n    case 'SPF': return 99\n    case 'SRV': return 33\n    case 'SSHFP': return 44\n    case 'TA': return 32768\n    case 'TKEY': return 249\n    case 'TLSA': return 52\n    case 'TSIG': return 250\n    case 'TXT': return 16\n    case 'AXFR': return 252\n    case 'IXFR': return 251\n    case 'OPT': return 41\n    case 'ANY': return 255\n    case '*': return 255\n  }\n  return 0\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/node_modules/dns-packet/types.js?");

/***/ }),

/***/ "./node_modules/bonjour/node_modules/multicast-dns/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/bonjour/node_modules/multicast-dns/index.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var packet = __webpack_require__(/*! dns-packet */ \"./node_modules/bonjour/node_modules/dns-packet/index.js\")\nvar dgram = __webpack_require__(/*! dgram */ \"./node_modules/dgram-browserify/index.js\")\nvar thunky = __webpack_require__(/*! thunky */ \"./node_modules/thunky/index.js\")\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\")\nvar os = __webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\")\n\nvar noop = function () {}\n\nmodule.exports = function (opts) {\n  if (!opts) opts = {}\n\n  var that = new events.EventEmitter()\n  var port = typeof opts.port === 'number' ? opts.port : 5353\n  var type = opts.type || 'udp4'\n  var ip = opts.ip || opts.host || (type === 'udp4' ? '224.0.0.251' : null)\n  var me = {address: ip, port: port}\n  var memberships = {}\n  var destroyed = false\n  var interval = null\n\n  if (type === 'udp6' && (!ip || !opts.interface)) {\n    throw new Error('For IPv6 multicast you must specify `ip` and `interface`')\n  }\n\n  var socket = opts.socket || dgram.createSocket({\n    type: type,\n    reuseAddr: opts.reuseAddr !== false,\n    toString: function () {\n      return type\n    }\n  })\n\n  socket.on('error', function (err) {\n    if (err.code === 'EACCES' || err.code === 'EADDRINUSE') that.emit('error', err)\n    else that.emit('warning', err)\n  })\n\n  socket.on('message', function (message, rinfo) {\n    try {\n      message = packet.decode(message)\n    } catch (err) {\n      that.emit('warning', err)\n      return\n    }\n\n    that.emit('packet', message, rinfo)\n\n    if (message.type === 'query') that.emit('query', message, rinfo)\n    if (message.type === 'response') that.emit('response', message, rinfo)\n  })\n\n  socket.on('listening', function () {\n    if (!port) port = me.port = socket.address().port\n    if (opts.multicast !== false) {\n      that.update()\n      interval = setInterval(that.update, 5000)\n      socket.setMulticastTTL(opts.ttl || 255)\n      socket.setMulticastLoopback(opts.loopback !== false)\n    }\n  })\n\n  var bind = thunky(function (cb) {\n    if (!port) return cb(null)\n    socket.once('error', cb)\n    socket.bind(port, opts.interface, function () {\n      socket.removeListener('error', cb)\n      cb(null)\n    })\n  })\n\n  bind(function (err) {\n    if (err) return that.emit('error', err)\n    that.emit('ready')\n  })\n\n  that.send = function (value, rinfo, cb) {\n    if (typeof rinfo === 'function') return that.send(value, null, rinfo)\n    if (!cb) cb = noop\n    if (!rinfo) rinfo = me\n\n    bind(onbind)\n\n    function onbind (err) {\n      if (destroyed) return cb()\n      if (err) return cb(err)\n      var message = packet.encode(value)\n      socket.send(message, 0, message.length, rinfo.port, rinfo.address || rinfo.host, cb)\n    }\n  }\n\n  that.response =\n  that.respond = function (res, rinfo, cb) {\n    if (Array.isArray(res)) res = {answers: res}\n\n    res.type = 'response'\n    res.flags = (res.flags || 0) | packet.AUTHORITATIVE_ANSWER\n    that.send(res, rinfo, cb)\n  }\n\n  that.query = function (q, type, rinfo, cb) {\n    if (typeof type === 'function') return that.query(q, null, null, type)\n    if (typeof type === 'object' && type && type.port) return that.query(q, null, type, rinfo)\n    if (typeof rinfo === 'function') return that.query(q, type, null, rinfo)\n    if (!cb) cb = noop\n\n    if (typeof q === 'string') q = [{name: q, type: type || 'ANY'}]\n    if (Array.isArray(q)) q = {type: 'query', questions: q}\n\n    q.type = 'query'\n    that.send(q, rinfo, cb)\n  }\n\n  that.destroy = function (cb) {\n    if (!cb) cb = noop\n    if (destroyed) return process.nextTick(cb)\n    destroyed = true\n    clearInterval(interval)\n    socket.once('close', cb)\n    socket.close()\n  }\n\n  that.update = function () {\n    var ifaces = opts.interface ? [].concat(opts.interface) : allInterfaces()\n    var updated = false\n\n    for (var i = 0; i < ifaces.length; i++) {\n      var addr = ifaces[i]\n\n      if (memberships[addr]) continue\n      memberships[addr] = true\n      updated = true\n\n      try {\n        socket.addMembership(ip, addr)\n      } catch (err) {\n        that.emit('warning', err)\n      }\n    }\n\n    if (!updated || !socket.setMulticastInterface) return\n    socket.setMulticastInterface(opts.interface || defaultInterface())\n  }\n\n  return that\n}\n\nfunction defaultInterface () {\n  var networks = os.networkInterfaces()\n  var names = Object.keys(networks)\n\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]]\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j]\n      if (iface.family === 'IPv4' && !iface.internal) return iface.address\n    }\n  }\n\n  return '127.0.0.1'\n}\n\nfunction allInterfaces () {\n  var networks = os.networkInterfaces()\n  var names = Object.keys(networks)\n  var res = []\n\n  for (var i = 0; i < names.length; i++) {\n    var net = networks[names[i]]\n    for (var j = 0; j < net.length; j++) {\n      var iface = net[j]\n      if (iface.family === 'IPv4') {\n        res.push(iface.address)\n        // could only addMembership once per interface (https://nodejs.org/api/dgram.html#dgram_socket_addmembership_multicastaddress_multicastinterface)\n        break\n      }\n    }\n  }\n\n  return res\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/bonjour/node_modules/multicast-dns/index.js?");

/***/ }),

/***/ "./node_modules/buffer-indexof/index.js":
/*!**********************************************!*\
  !*** ./node_modules/buffer-indexof/index.js ***!
  \**********************************************/
/***/ ((module) => {

eval("module.exports = function bufferIndexOf(buff, search, offset, encoding){\n  if (!Buffer.isBuffer(buff)) {\n    throw TypeError('buffer is not a buffer');\n  }\n\n  // allow optional offset when providing an encoding\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset;\n    offset = undefined;\n  }\n\n  if (typeof search === 'string') {\n    search = new Buffer(search, encoding || 'utf8');\n  } else if (typeof search === 'number' && !isNaN(search)) {\n    search = new Buffer([search])\n  } else if (!Buffer.isBuffer(search)) {\n    throw TypeError('search is not a bufferable object');\n  }\n\n  if (search.length === 0) {\n    return -1;\n  }\n\n  if (offset === undefined || (typeof offset === 'number' && isNaN(offset))) {\n    offset = 0;\n  } else if (typeof offset !== 'number') {\n    throw TypeError('offset is not a number');\n  }\n\n  if (offset < 0) {\n    offset = buff.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0;\n  }\n\n  var m = 0;\n  var s = -1;\n\n  for (var i = offset; i < buff.length ; ++i) {\n    if(buff[i] != search[m]){\n      s = -1;\n      // <-- go back\n      // match abc to aabc\n      // 'aabc'\n      // 'aab'\n      //    ^ no match\n      // a'abc'\n      //   ^ set index here now and look at these again.\n      //   'abc' yay!\n      i -= m-1\n      m = 0;\n    }\n\n    if(buff[i] == search[m]) {\n      if(s == -1) {\n        s = i;\n      }\n      ++m;\n      if(m == search.length) {\n        break;\n      }\n    }\n  }\n\n  if (s > -1 && buff.length - s < search.length) {\n    return -1;\n  }\n  return s;\n}\n\n\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/buffer-indexof/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nconst base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nconst ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/builtin-status-codes/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/builtin-status-codes/browser.js ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/builtin-status-codes/browser.js?");

/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar callBind = __webpack_require__(/*! ./ */ \"./node_modules/call-bind/index.js\");\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/call-bind/callBound.js?");

/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\nvar setFunctionLength = __webpack_require__(/*! set-function-length */ \"./node_modules/set-function-length/index.js\");\n\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/call-bind/index.js?");

/***/ }),

/***/ "./node_modules/deep-equal/index.js":
/*!******************************************!*\
  !*** ./node_modules/deep-equal/index.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var objectKeys = __webpack_require__(/*! object-keys */ \"./node_modules/object-keys/index.js\");\nvar isArguments = __webpack_require__(/*! is-arguments */ \"./node_modules/is-arguments/index.js\");\nvar is = __webpack_require__(/*! object-is */ \"./node_modules/object-is/index.js\");\nvar isRegex = __webpack_require__(/*! is-regex */ \"./node_modules/is-regex/index.js\");\nvar flags = __webpack_require__(/*! regexp.prototype.flags */ \"./node_modules/regexp.prototype.flags/index.js\");\nvar isDate = __webpack_require__(/*! is-date-object */ \"./node_modules/is-date-object/index.js\");\n\nvar getTime = Date.prototype.getTime;\n\nfunction deepEqual(actual, expected, options) {\n  var opts = options || {};\n\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (opts.strict ? is(actual, expected) : actual === expected) {\n    return true;\n  }\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.\n  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {\n    return opts.strict ? is(actual, expected) : actual == expected;\n  }\n\n  /*\n   * 7.4. For all other Object pairs, including Array objects, equivalence is\n   * determined by having the same number of owned properties (as verified\n   * with Object.prototype.hasOwnProperty.call), the same set of keys\n   * (although not necessarily the same order), equivalent values for every\n   * corresponding key, and an identical 'prototype' property. Note: this\n   * accounts for both named and indexed properties on Arrays.\n   */\n  // eslint-disable-next-line no-use-before-define\n  return objEquiv(actual, expected, opts);\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer(x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {\n    return false;\n  }\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') {\n    return false;\n  }\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  /* eslint max-statements: [2, 50] */\n  var i, key;\n  if (typeof a !== typeof b) { return false; }\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) { return false; }\n\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) { return false; }\n\n  if (isArguments(a) !== isArguments(b)) { return false; }\n\n  var aIsRegex = isRegex(a);\n  var bIsRegex = isRegex(b);\n  if (aIsRegex !== bIsRegex) { return false; }\n  if (aIsRegex || bIsRegex) {\n    return a.source === b.source && flags(a) === flags(b);\n  }\n\n  if (isDate(a) && isDate(b)) {\n    return getTime.call(a) === getTime.call(b);\n  }\n\n  var aIsBuffer = isBuffer(a);\n  var bIsBuffer = isBuffer(b);\n  if (aIsBuffer !== bIsBuffer) { return false; }\n  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here\n    if (a.length !== b.length) { return false; }\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) { return false; }\n    }\n    return true;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  try {\n    var ka = objectKeys(a);\n    var kb = objectKeys(b);\n  } catch (e) { // happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates hasOwnProperty)\n  if (ka.length !== kb.length) { return false; }\n\n  // the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  // ~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) { return false; }\n  }\n  // equivalent values for every corresponding key, and ~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) { return false; }\n  }\n\n  return true;\n}\n\nmodule.exports = deepEqual;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/deep-equal/index.js?");

/***/ }),

/***/ "./node_modules/define-data-property/index.js":
/*!****************************************************!*\
  !*** ./node_modules/define-data-property/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasPropertyDescriptors = __webpack_require__(/*! has-property-descriptors */ \"./node_modules/has-property-descriptors/index.js\")();\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $defineProperty = hasPropertyDescriptors && GetIntrinsic('%Object.defineProperty%', true);\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"./node_modules/es-errors/syntax.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\n\nvar gopd = __webpack_require__(/*! gopd */ \"./node_modules/gopd/index.js\");\n\n/** @type {(obj: Record<PropertyKey, unknown>, property: PropertyKey, value: unknown, nonEnumerable?: boolean | null, nonWritable?: boolean | null, nonConfigurable?: boolean | null, loose?: boolean) => void} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/define-data-property/index.js?");

/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar keys = __webpack_require__(/*! object-keys */ \"./node_modules/object-keys/index.js\");\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = __webpack_require__(/*! define-data-property */ \"./node_modules/define-data-property/index.js\");\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = __webpack_require__(/*! has-property-descriptors */ \"./node_modules/has-property-descriptors/index.js\")();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/define-properties/index.js?");

/***/ }),

/***/ "./node_modules/dgram-browserify/index.js":
/*!************************************************!*\
  !*** ./node_modules/dgram-browserify/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! simudp */ \"./node_modules/simudp/lib/simudp.js\");\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/dgram-browserify/index.js?");

/***/ }),

/***/ "./node_modules/dns-equal/index.js":
/*!*****************************************!*\
  !*** ./node_modules/dns-equal/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar r = /[A-Z]/g\n\nmodule.exports = function (a, b) {\n  a = a.replace(r, replacer)\n  b = b.replace(r, replacer)\n  return a === b\n}\n\nfunction replacer (m) {\n  return m.toLowerCase()\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/dns-equal/index.js?");

/***/ }),

/***/ "./node_modules/dns-txt/index.js":
/*!***************************************!*\
  !*** ./node_modules/dns-txt/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bindexOf = __webpack_require__(/*! buffer-indexof */ \"./node_modules/buffer-indexof/index.js\")\n\nvar equalSign = new Buffer('=')\n\nmodule.exports = function (opts) {\n  var binary = opts ? opts.binary : false\n  var that = {}\n\n  that.encode = function (data, buf, offset) {\n    if (!data) data = {}\n    if (!offset) offset = 0\n    if (!buf) buf = new Buffer(that.encodingLength(data) + offset)\n\n    var oldOffset = offset\n    var keys = Object.keys(data)\n\n    if (keys.length === 0) {\n      buf[offset] = 0\n      offset++\n    }\n\n    keys.forEach(function (key) {\n      var val = data[key]\n      var oldOffset = offset\n      offset++\n\n      if (val === true) {\n        offset += buf.write(key, offset)\n      } else if (Buffer.isBuffer(val)) {\n        offset += buf.write(key + '=', offset)\n        var len = val.length\n        val.copy(buf, offset, 0, len)\n        offset += len\n      } else {\n        offset += buf.write(key + '=' + val, offset)\n      }\n\n      buf[oldOffset] = offset - oldOffset - 1\n    })\n\n    that.encode.bytes = offset - oldOffset\n    return buf\n  }\n\n  that.decode = function (buf, offset, len) {\n    if (!offset) offset = 0\n    if (!Number.isFinite(len)) len = buf.length\n    var data = {}\n    var oldOffset = offset\n\n    while (offset < len) {\n      var b = decodeBlock(buf, offset)\n      var i = bindexOf(b, equalSign)\n      offset += decodeBlock.bytes\n\n      if (b.length === 0) continue // ignore: most likely a single zero byte\n      if (i === -1) data[b.toString().toLowerCase()] = true\n      else if (i === 0) continue // ignore: invalid key-length\n      else {\n        var key = b.slice(0, i).toString().toLowerCase()\n        if (key in data) continue // ignore: overwriting not allowed\n        data[key] = binary ? b.slice(i + 1) : b.slice(i + 1).toString()\n      }\n    }\n\n    that.decode.bytes = offset - oldOffset\n    return data\n  }\n\n  that.encodingLength = function (data) {\n    if (!data) return 1 // 1 byte (single empty byte)\n    var keys = Object.keys(data)\n    if (keys.length === 0) return 1 // 1 byte (single empty byte)\n    return keys.reduce(function (total, key) {\n      var val = data[key]\n      total += Buffer.byteLength(key) + 1 // +1 byte to store field length\n      if (Buffer.isBuffer(val)) total += val.length + 1 // +1 byte to fit equal sign\n      else if (val !== true) total += Buffer.byteLength(String(val)) + 1 // +1 byte to fit equal sign\n      return total\n    }, 0)\n  }\n\n  return that\n}\n\nfunction decodeBlock (buf, offset) {\n  var len = buf[offset]\n  var to = offset + 1 + len\n  var b = buf.slice(offset + 1, to > buf.length ? buf.length : to)\n  decodeBlock.bytes = len + 1\n  return b\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/dns-txt/index.js?");

/***/ }),

/***/ "./node_modules/es-errors/eval.js":
/*!****************************************!*\
  !*** ./node_modules/es-errors/eval.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/eval.js?");

/***/ }),

/***/ "./node_modules/es-errors/index.js":
/*!*****************************************!*\
  !*** ./node_modules/es-errors/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('.')} */\nmodule.exports = Error;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/index.js?");

/***/ }),

/***/ "./node_modules/es-errors/range.js":
/*!*****************************************!*\
  !*** ./node_modules/es-errors/range.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/range.js?");

/***/ }),

/***/ "./node_modules/es-errors/ref.js":
/*!***************************************!*\
  !*** ./node_modules/es-errors/ref.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/ref.js?");

/***/ }),

/***/ "./node_modules/es-errors/syntax.js":
/*!******************************************!*\
  !*** ./node_modules/es-errors/syntax.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/syntax.js?");

/***/ }),

/***/ "./node_modules/es-errors/type.js":
/*!****************************************!*\
  !*** ./node_modules/es-errors/type.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/type.js?");

/***/ }),

/***/ "./node_modules/es-errors/uri.js":
/*!***************************************!*\
  !*** ./node_modules/es-errors/uri.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/es-errors/uri.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/events/events.js?");

/***/ }),

/***/ "./node_modules/for-each/index.js":
/*!****************************************!*\
  !*** ./node_modules/for-each/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isCallable = __webpack_require__(/*! is-callable */ \"./node_modules/is-callable/index.js\");\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/for-each/index.js?");

/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/function-bind/implementation.js?");

/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/function-bind/implementation.js\");\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/function-bind/index.js?");

/***/ }),

/***/ "./node_modules/functions-have-names/index.js":
/*!****************************************************!*\
  !*** ./node_modules/functions-have-names/index.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar functionsHaveNames = function functionsHaveNames() {\n\treturn typeof function f() {}.name === 'string';\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\nif (gOPD) {\n\ttry {\n\t\tgOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\tgOPD = null;\n\t}\n}\n\nfunctionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {\n\tif (!functionsHaveNames() || !gOPD) {\n\t\treturn false;\n\t}\n\tvar desc = gOPD(function () {}, 'name');\n\treturn !!desc && !!desc.configurable;\n};\n\nvar $bind = Function.prototype.bind;\n\nfunctionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {\n\treturn functionsHaveNames() && typeof $bind === 'function' && function f() {}.bind().name !== '';\n};\n\nmodule.exports = functionsHaveNames;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/functions-have-names/index.js?");

/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar undefined;\n\nvar $Error = __webpack_require__(/*! es-errors */ \"./node_modules/es-errors/index.js\");\nvar $EvalError = __webpack_require__(/*! es-errors/eval */ \"./node_modules/es-errors/eval.js\");\nvar $RangeError = __webpack_require__(/*! es-errors/range */ \"./node_modules/es-errors/range.js\");\nvar $ReferenceError = __webpack_require__(/*! es-errors/ref */ \"./node_modules/es-errors/ref.js\");\nvar $SyntaxError = __webpack_require__(/*! es-errors/syntax */ \"./node_modules/es-errors/syntax.js\");\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\nvar $URIError = __webpack_require__(/*! es-errors/uri */ \"./node_modules/es-errors/uri.js\");\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\nvar hasProto = __webpack_require__(/*! has-proto */ \"./node_modules/has-proto/index.js\")();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar hasOwn = __webpack_require__(/*! hasown */ \"./node_modules/hasown/index.js\");\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/get-intrinsic/index.js?");

/***/ }),

/***/ "./node_modules/gopd/index.js":
/*!************************************!*\
  !*** ./node_modules/gopd/index.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/gopd/index.js?");

/***/ }),

/***/ "./node_modules/has-property-descriptors/index.js":
/*!********************************************************!*\
  !*** ./node_modules/has-property-descriptors/index.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\tif ($defineProperty) {\n\t\ttry {\n\t\t\t$defineProperty({}, 'a', { value: 1 });\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// IE 8 has a broken defineProperty\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn false;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!hasPropertyDescriptors()) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/has-property-descriptors/index.js?");

/***/ }),

/***/ "./node_modules/has-proto/index.js":
/*!*****************************************!*\
  !*** ./node_modules/has-proto/index.js ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar test = {\n\tfoo: {}\n};\n\nvar $Object = Object;\n\nmodule.exports = function hasProto() {\n\treturn { __proto__: test }.foo === test.foo && !({ __proto__: null } instanceof $Object);\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/has-proto/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/has-symbols/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/has-tostringtag/shams.js":
/*!***********************************************!*\
  !*** ./node_modules/has-tostringtag/shams.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasSymbols = __webpack_require__(/*! has-symbols/shams */ \"./node_modules/has-symbols/shams.js\");\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/has-tostringtag/shams.js?");

/***/ }),

/***/ "./node_modules/hasown/index.js":
/*!**************************************!*\
  !*** ./node_modules/hasown/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\n/** @type {(o: {}, p: PropertyKey) => p is keyof o} */\nmodule.exports = bind.call(call, $hasOwn);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/hasown/index.js?");

/***/ }),

/***/ "./node_modules/https-browserify/index.js":
/*!************************************************!*\
  !*** ./node_modules/https-browserify/index.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar https = module.exports\n\nfor (var key in http) {\n  if (http.hasOwnProperty(key)) https[key] = http[key]\n}\n\nhttps.request = function (params, cb) {\n  params = validateParams(params)\n  return http.request.call(this, params, cb)\n}\n\nhttps.get = function (params, cb) {\n  params = validateParams(params)\n  return http.get.call(this, params, cb)\n}\n\nfunction validateParams (params) {\n  if (typeof params === 'string') {\n    params = url.parse(params)\n  }\n  if (!params.protocol) {\n    params.protocol = 'https:'\n  }\n  if (params.protocol !== 'https:') {\n    throw new Error('Protocol \"' + params.protocol + '\" not supported. Expected \"https:\"')\n  }\n  return params\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/https-browserify/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/ip/lib/ip.js":
/*!***********************************!*\
  !*** ./node_modules/ip/lib/ip.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ip = exports;\nvar { Buffer } = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\nvar os = __webpack_require__(/*! os */ \"./node_modules/os-browserify/browser.js\");\n\nip.toBuffer = function (ip, buff, offset) {\n  offset = ~~offset;\n\n  var result;\n\n  if (this.isV4Format(ip)) {\n    result = buff || new Buffer(offset + 4);\n    ip.split(/\\./g).map((byte) => {\n      result[offset++] = parseInt(byte, 10) & 0xff;\n    });\n  } else if (this.isV6Format(ip)) {\n    var sections = ip.split(':', 8);\n\n    var i;\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = this.isV4Format(sections[i]);\n      var v4Buffer;\n\n      if (isv4) {\n        v4Buffer = this.toBuffer(sections[i]);\n        sections[i] = v4Buffer.slice(0, 2).toString('hex');\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'));\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0');\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0');\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      var argv = [i, 1];\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0');\n      }\n      sections.splice.apply(sections, argv);\n    }\n\n    result = buff || new Buffer(offset + 16);\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16);\n      result[offset++] = (word >> 8) & 0xff;\n      result[offset++] = word & 0xff;\n    }\n  }\n\n  if (!result) {\n    throw Error(`Invalid ip address: ${ip}`);\n  }\n\n  return result;\n};\n\nip.toString = function (buff, offset, length) {\n  offset = ~~offset;\n  length = length || (buff.length - offset);\n\n  var result = [];\n  var i;\n  if (length === 4) {\n    // IPv4\n    for (i = 0; i < length; i++) {\n      result.push(buff[offset + i]);\n    }\n    result = result.join('.');\n  } else if (length === 16) {\n    // IPv6\n    for (i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16));\n    }\n    result = result.join(':');\n    result = result.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3');\n    result = result.replace(/:{3,4}/, '::');\n  }\n\n  return result;\n};\n\nvar ipv4Regex = /^(\\d{1,3}\\.){3,3}\\d{1,3}$/;\nvar ipv6Regex = /^(::)?(((\\d{1,3}\\.){3}(\\d{1,3}){1})?([0-9a-f]){0,4}:{0,2}){1,8}(::)?$/i;\n\nip.isV4Format = function (ip) {\n  return ipv4Regex.test(ip);\n};\n\nip.isV6Format = function (ip) {\n  return ipv6Regex.test(ip);\n};\n\nfunction _normalizeFamily(family) {\n  if (family === 4) {\n    return 'ipv4';\n  }\n  if (family === 6) {\n    return 'ipv6';\n  }\n  return family ? family.toLowerCase() : 'ipv4';\n}\n\nip.fromPrefixLen = function (prefixlen, family) {\n  if (prefixlen > 32) {\n    family = 'ipv6';\n  } else {\n    family = _normalizeFamily(family);\n  }\n\n  var len = 4;\n  if (family === 'ipv6') {\n    len = 16;\n  }\n  var buff = new Buffer(len);\n\n  for (var i = 0, n = buff.length; i < n; ++i) {\n    var bits = 8;\n    if (prefixlen < 8) {\n      bits = prefixlen;\n    }\n    prefixlen -= bits;\n\n    buff[i] = ~(0xff >> bits) & 0xff;\n  }\n\n  return ip.toString(buff);\n};\n\nip.mask = function (addr, mask) {\n  addr = ip.toBuffer(addr);\n  mask = ip.toBuffer(mask);\n\n  var result = new Buffer(Math.max(addr.length, mask.length));\n\n  // Same protocol - do bitwise and\n  var i;\n  if (addr.length === mask.length) {\n    for (i = 0; i < addr.length; i++) {\n      result[i] = addr[i] & mask[i];\n    }\n  } else if (mask.length === 4) {\n    // IPv6 address and IPv4 mask\n    // (Mask low bits)\n    for (i = 0; i < mask.length; i++) {\n      result[i] = addr[addr.length - 4 + i] & mask[i];\n    }\n  } else {\n    // IPv6 mask and IPv4 addr\n    for (i = 0; i < result.length - 6; i++) {\n      result[i] = 0;\n    }\n\n    // ::ffff:ipv4\n    result[10] = 0xff;\n    result[11] = 0xff;\n    for (i = 0; i < addr.length; i++) {\n      result[i + 12] = addr[i] & mask[i + 12];\n    }\n    i += 12;\n  }\n  for (; i < result.length; i++) {\n    result[i] = 0;\n  }\n\n  return ip.toString(result);\n};\n\nip.cidr = function (cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.mask(addr, mask);\n};\n\nip.subnet = function (addr, mask) {\n  var networkAddress = ip.toLong(ip.mask(addr, mask));\n\n  // Calculate the mask's length.\n  var maskBuffer = ip.toBuffer(mask);\n  var maskLength = 0;\n\n  for (var i = 0; i < maskBuffer.length; i++) {\n    if (maskBuffer[i] === 0xff) {\n      maskLength += 8;\n    } else {\n      var octet = maskBuffer[i] & 0xff;\n      while (octet) {\n        octet = (octet << 1) & 0xff;\n        maskLength++;\n      }\n    }\n  }\n\n  var numberOfAddresses = Math.pow(2, 32 - maskLength);\n\n  return {\n    networkAddress: ip.fromLong(networkAddress),\n    firstAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress)\n      : ip.fromLong(networkAddress + 1),\n    lastAddress: numberOfAddresses <= 2\n      ? ip.fromLong(networkAddress + numberOfAddresses - 1)\n      : ip.fromLong(networkAddress + numberOfAddresses - 2),\n    broadcastAddress: ip.fromLong(networkAddress + numberOfAddresses - 1),\n    subnetMask: mask,\n    subnetMaskLength: maskLength,\n    numHosts: numberOfAddresses <= 2\n      ? numberOfAddresses : numberOfAddresses - 2,\n    length: numberOfAddresses,\n    contains(other) {\n      return networkAddress === ip.toLong(ip.mask(other, mask));\n    },\n  };\n};\n\nip.cidrSubnet = function (cidrString) {\n  var cidrParts = cidrString.split('/');\n\n  var addr = cidrParts[0];\n  if (cidrParts.length !== 2) {\n    throw new Error(`invalid CIDR subnet: ${addr}`);\n  }\n\n  var mask = ip.fromPrefixLen(parseInt(cidrParts[1], 10));\n\n  return ip.subnet(addr, mask);\n};\n\nip.not = function (addr) {\n  var buff = ip.toBuffer(addr);\n  for (var i = 0; i < buff.length; i++) {\n    buff[i] = 0xff ^ buff[i];\n  }\n  return ip.toString(buff);\n};\n\nip.or = function (a, b) {\n  var i;\n\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // same protocol\n  if (a.length === b.length) {\n    for (i = 0; i < a.length; ++i) {\n      a[i] |= b[i];\n    }\n    return ip.toString(a);\n\n  // mixed protocols\n  }\n  var buff = a;\n  var other = b;\n  if (b.length > a.length) {\n    buff = b;\n    other = a;\n  }\n\n  var offset = buff.length - other.length;\n  for (i = offset; i < buff.length; ++i) {\n    buff[i] |= other[i - offset];\n  }\n\n  return ip.toString(buff);\n};\n\nip.isEqual = function (a, b) {\n  var i;\n\n  a = ip.toBuffer(a);\n  b = ip.toBuffer(b);\n\n  // Same protocol\n  if (a.length === b.length) {\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n\n  // Swap\n  if (b.length === 4) {\n    var t = b;\n    b = a;\n    a = t;\n  }\n\n  // a - IPv4, b - IPv6\n  for (i = 0; i < 10; i++) {\n    if (b[i] !== 0) return false;\n  }\n\n  var word = b.readUInt16BE(10);\n  if (word !== 0 && word !== 0xffff) return false;\n\n  for (i = 0; i < 4; i++) {\n    if (a[i] !== b[i + 12]) return false;\n  }\n\n  return true;\n};\n\nip.isPrivate = function (addr) {\n  return /^(::f{4}:)?10\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n    .test(addr)\n    || /^(::f{4}:)?192\\.168\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?172\\.(1[6-9]|2\\d|30|31)\\.([0-9]{1,3})\\.([0-9]{1,3})$/i\n      .test(addr)\n    || /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^(::f{4}:)?169\\.254\\.([0-9]{1,3})\\.([0-9]{1,3})$/i.test(addr)\n    || /^f[cd][0-9a-f]{2}:/i.test(addr)\n    || /^fe80:/i.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.isPublic = function (addr) {\n  return !ip.isPrivate(addr);\n};\n\nip.isLoopback = function (addr) {\n  return /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/\n    .test(addr)\n    || /^fe80::1$/.test(addr)\n    || /^::1$/.test(addr)\n    || /^::$/.test(addr);\n};\n\nip.loopback = function (family) {\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  if (family !== 'ipv4' && family !== 'ipv6') {\n    throw new Error('family must be ipv4 or ipv6');\n  }\n\n  return family === 'ipv4' ? '127.0.0.1' : 'fe80::1';\n};\n\n//\n// ### function address (name, family)\n// #### @name {string|'public'|'private'} **Optional** Name or security\n//      of the network interface.\n// #### @family {ipv4|ipv6} **Optional** IP family of the address (defaults\n//      to ipv4).\n//\n// Returns the address for the network interface on the current system with\n// the specified `name`:\n//   * String: First `family` address of the interface.\n//             If not found see `undefined`.\n//   * 'public': the first public ip address of family.\n//   * 'private': the first private ip address of family.\n//   * undefined: First address with `ipv4` or loopback address `127.0.0.1`.\n//\nip.address = function (name, family) {\n  var interfaces = os.networkInterfaces();\n\n  //\n  // Default to `ipv4`\n  //\n  family = _normalizeFamily(family);\n\n  //\n  // If a specific network interface has been named,\n  // return the address.\n  //\n  if (name && name !== 'private' && name !== 'public') {\n    var res = interfaces[name].filter((details) => {\n      var itemFamily = _normalizeFamily(details.family);\n      return itemFamily === family;\n    });\n    if (res.length === 0) {\n      return undefined;\n    }\n    return res[0].address;\n  }\n\n  var all = Object.keys(interfaces).map((nic) => {\n    //\n    // Note: name will only be `public` or `private`\n    // when this is called.\n    //\n    var addresses = interfaces[nic].filter((details) => {\n      details.family = _normalizeFamily(details.family);\n      if (details.family !== family || ip.isLoopback(details.address)) {\n        return false;\n      } if (!name) {\n        return true;\n      }\n\n      return name === 'public' ? ip.isPrivate(details.address)\n        : ip.isPublic(details.address);\n    });\n\n    return addresses.length ? addresses[0].address : undefined;\n  }).filter(Boolean);\n\n  return !all.length ? ip.loopback(family) : all[0];\n};\n\nip.toLong = function (ip) {\n  var ipl = 0;\n  ip.split('.').forEach((octet) => {\n    ipl <<= 8;\n    ipl += parseInt(octet);\n  });\n  return (ipl >>> 0);\n};\n\nip.fromLong = function (ipl) {\n  return (`${ipl >>> 24}.${\n    ipl >> 16 & 255}.${\n    ipl >> 8 & 255}.${\n    ipl & 255}`);\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/ip/lib/ip.js?");

/***/ }),

/***/ "./node_modules/is-arguments/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-arguments/index.js?");

/***/ }),

/***/ "./node_modules/is-callable/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-callable/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-callable/index.js?");

/***/ }),

/***/ "./node_modules/is-date-object/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-date-object/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateGetDayCall(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-date-object/index.js?");

/***/ }),

/***/ "./node_modules/is-generator-function/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/is-generator-function/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-generator-function/index.js?");

/***/ }),

/***/ "./node_modules/is-regex/index.js":
/*!****************************************!*\
  !*** ./node_modules/is-regex/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\nvar has;\nvar $exec;\nvar isRegexMarker;\nvar badStringifier;\n\nif (hasToStringTag) {\n\thas = callBound('Object.prototype.hasOwnProperty');\n\t$exec = callBound('RegExp.prototype.exec');\n\tisRegexMarker = {};\n\n\tvar throwRegexMarker = function () {\n\t\tthrow isRegexMarker;\n\t};\n\tbadStringifier = {\n\t\ttoString: throwRegexMarker,\n\t\tvalueOf: throwRegexMarker\n\t};\n\n\tif (typeof Symbol.toPrimitive === 'symbol') {\n\t\tbadStringifier[Symbol.toPrimitive] = throwRegexMarker;\n\t}\n}\n\nvar $toString = callBound('Object.prototype.toString');\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar regexClass = '[object RegExp]';\n\nmodule.exports = hasToStringTag\n\t// eslint-disable-next-line consistent-return\n\t? function isRegex(value) {\n\t\tif (!value || typeof value !== 'object') {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar descriptor = gOPD(value, 'lastIndex');\n\t\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\t\tif (!hasLastIndexDataProperty) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\t$exec(value, badStringifier);\n\t\t} catch (e) {\n\t\t\treturn e === isRegexMarker;\n\t\t}\n\t}\n\t: function isRegex(value) {\n\t\t// In older browsers, typeof regex incorrectly returns 'function'\n\t\tif (!value || (typeof value !== 'object' && typeof value !== 'function')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $toString(value) === regexClass;\n\t};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-regex/index.js?");

/***/ }),

/***/ "./node_modules/is-typed-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-typed-array/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"./node_modules/which-typed-array/index.js\");\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/is-typed-array/index.js?");

/***/ }),

/***/ "./node_modules/multicast-dns-service-types/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/multicast-dns-service-types/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var prefix = function (name) {\n  return '_' + name\n}\n\nvar defined = function (name) {\n  return name\n}\n\nexports.stringify = function (data) {\n  if (typeof data === 'object' && data && data.name) return exports.stringify(data.name, data.protocol, data.subtypes)\n  return Array.prototype.concat.apply([], arguments).filter(defined).map(prefix).join('.')\n}\n\nexports.parse = function (str) {\n  var parts = str.split('.')\n\n  for (var i = 0; i < parts.length; i++) {\n    if (parts[i][0] !== '_') continue\n    parts[i] = parts[i].slice(1)\n  }\n\n  return {\n    name: parts.shift(),\n    protocol: parts.shift() || null,\n    subtypes: parts\n  }\n}\n\nexports.tcp = function (name) {\n  return exports.stringify(name, 'tcp', Array.prototype.concat.apply([], Array.prototype.slice.call(arguments, 1)))\n}\n\nexports.udp = function (name) {\n  return exports.stringify(name, 'udp', Array.prototype.concat.apply([], Array.prototype.slice.call(arguments, 1)))\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/multicast-dns-service-types/index.js?");

/***/ }),

/***/ "./node_modules/object-inspect/index.js":
/*!**********************************************!*\
  !*** ./node_modules/object-inspect/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = __webpack_require__(/*! ./util.inspect */ \"?4f7e\");\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (obj === __webpack_require__.g) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-inspect/index.js?");

/***/ }),

/***/ "./node_modules/object-is/implementation.js":
/*!**************************************************!*\
  !*** ./node_modules/object-is/implementation.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-is/implementation.js?");

/***/ }),

/***/ "./node_modules/object-is/index.js":
/*!*****************************************!*\
  !*** ./node_modules/object-is/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\nvar callBind = __webpack_require__(/*! call-bind */ \"./node_modules/call-bind/index.js\");\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/object-is/implementation.js\");\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/object-is/polyfill.js\");\nvar shim = __webpack_require__(/*! ./shim */ \"./node_modules/object-is/shim.js\");\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-is/index.js?");

/***/ }),

/***/ "./node_modules/object-is/polyfill.js":
/*!********************************************!*\
  !*** ./node_modules/object-is/polyfill.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/object-is/implementation.js\");\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-is/polyfill.js?");

/***/ }),

/***/ "./node_modules/object-is/shim.js":
/*!****************************************!*\
  !*** ./node_modules/object-is/shim.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/object-is/polyfill.js\");\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-is/shim.js?");

/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\"); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-keys/implementation.js?");

/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar slice = Array.prototype.slice;\nvar isArgs = __webpack_require__(/*! ./isArguments */ \"./node_modules/object-keys/isArguments.js\");\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ \"./node_modules/object-keys/implementation.js\");\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-keys/index.js?");

/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/object-keys/isArguments.js?");

/***/ }),

/***/ "./node_modules/os-browserify/browser.js":
/*!***********************************************!*\
  !*** ./node_modules/os-browserify/browser.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/os-browserify/browser.js?");

/***/ }),

/***/ "./node_modules/punycode/punycode.js":
/*!*******************************************!*\
  !*** ./node_modules/punycode/punycode.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports =  true && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule =  true && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(this));\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/punycode/punycode.js?");

/***/ }),

/***/ "./node_modules/qs/lib/formats.js":
/*!****************************************!*\
  !*** ./node_modules/qs/lib/formats.js ***!
  \****************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/qs/lib/formats.js?");

/***/ }),

/***/ "./node_modules/qs/lib/index.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/index.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar stringify = __webpack_require__(/*! ./stringify */ \"./node_modules/qs/lib/stringify.js\");\nvar parse = __webpack_require__(/*! ./parse */ \"./node_modules/qs/lib/parse.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/qs/lib/index.js?");

/***/ }),

/***/ "./node_modules/qs/lib/parse.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/parse.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/qs/lib/parse.js?");

/***/ }),

/***/ "./node_modules/qs/lib/stringify.js":
/*!******************************************!*\
  !*** ./node_modules/qs/lib/stringify.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar getSideChannel = __webpack_require__(/*! side-channel */ \"./node_modules/side-channel/index.js\");\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/qs/lib/utils.js\");\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/qs/lib/stringify.js?");

/***/ }),

/***/ "./node_modules/qs/lib/utils.js":
/*!**************************************!*\
  !*** ./node_modules/qs/lib/utils.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/qs/lib/formats.js\");\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/qs/lib/utils.js?");

/***/ }),

/***/ "./node_modules/regexp.prototype.flags/implementation.js":
/*!***************************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/implementation.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar setFunctionName = __webpack_require__(/*! set-function-name */ \"./node_modules/set-function-name/index.js\");\n\nvar $Object = Object;\nvar $TypeError = TypeError;\n\nmodule.exports = setFunctionName(function flags() {\n\tif (this != null && this !== $Object(this)) {\n\t\tthrow new $TypeError('RegExp.prototype.flags getter called on non-object');\n\t}\n\tvar result = '';\n\tif (this.hasIndices) {\n\t\tresult += 'd';\n\t}\n\tif (this.global) {\n\t\tresult += 'g';\n\t}\n\tif (this.ignoreCase) {\n\t\tresult += 'i';\n\t}\n\tif (this.multiline) {\n\t\tresult += 'm';\n\t}\n\tif (this.dotAll) {\n\t\tresult += 's';\n\t}\n\tif (this.unicode) {\n\t\tresult += 'u';\n\t}\n\tif (this.unicodeSets) {\n\t\tresult += 'v';\n\t}\n\tif (this.sticky) {\n\t\tresult += 'y';\n\t}\n\treturn result;\n}, 'get flags', true);\n\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/regexp.prototype.flags/implementation.js?");

/***/ }),

/***/ "./node_modules/regexp.prototype.flags/index.js":
/*!******************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar define = __webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\");\nvar callBind = __webpack_require__(/*! call-bind */ \"./node_modules/call-bind/index.js\");\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/regexp.prototype.flags/implementation.js\");\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/regexp.prototype.flags/polyfill.js\");\nvar shim = __webpack_require__(/*! ./shim */ \"./node_modules/regexp.prototype.flags/shim.js\");\n\nvar flagsBound = callBind(getPolyfill());\n\ndefine(flagsBound, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = flagsBound;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/regexp.prototype.flags/index.js?");

/***/ }),

/***/ "./node_modules/regexp.prototype.flags/polyfill.js":
/*!*********************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/polyfill.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/regexp.prototype.flags/implementation.js\");\n\nvar supportsDescriptors = (__webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\").supportsDescriptors);\nvar $gOPD = Object.getOwnPropertyDescriptor;\n\nmodule.exports = function getPolyfill() {\n\tif (supportsDescriptors && (/a/mig).flags === 'gim') {\n\t\tvar descriptor = $gOPD(RegExp.prototype, 'flags');\n\t\tif (\n\t\t\tdescriptor\n\t\t\t&& typeof descriptor.get === 'function'\n\t\t\t&& typeof RegExp.prototype.dotAll === 'boolean'\n\t\t\t&& typeof RegExp.prototype.hasIndices === 'boolean'\n\t\t) {\n\t\t\t/* eslint getter-return: 0 */\n\t\t\tvar calls = '';\n\t\t\tvar o = {};\n\t\t\tObject.defineProperty(o, 'hasIndices', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'd';\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.defineProperty(o, 'sticky', {\n\t\t\t\tget: function () {\n\t\t\t\t\tcalls += 'y';\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (calls === 'dy') {\n\t\t\t\treturn descriptor.get;\n\t\t\t}\n\t\t}\n\t}\n\treturn implementation;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/regexp.prototype.flags/polyfill.js?");

/***/ }),

/***/ "./node_modules/regexp.prototype.flags/shim.js":
/*!*****************************************************!*\
  !*** ./node_modules/regexp.prototype.flags/shim.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar supportsDescriptors = (__webpack_require__(/*! define-properties */ \"./node_modules/define-properties/index.js\").supportsDescriptors);\nvar getPolyfill = __webpack_require__(/*! ./polyfill */ \"./node_modules/regexp.prototype.flags/polyfill.js\");\nvar gOPD = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar TypeErr = TypeError;\nvar getProto = Object.getPrototypeOf;\nvar regex = /a/;\n\nmodule.exports = function shimFlags() {\n\tif (!supportsDescriptors || !getProto) {\n\t\tthrow new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');\n\t}\n\tvar polyfill = getPolyfill();\n\tvar proto = getProto(regex);\n\tvar descriptor = gOPD(proto, 'flags');\n\tif (!descriptor || descriptor.get !== polyfill) {\n\t\tdefineProperty(proto, 'flags', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tget: polyfill\n\t\t});\n\t}\n\treturn polyfill;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/regexp.prototype.flags/shim.js?");

/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/safe-buffer/index.js?");

/***/ }),

/***/ "./node_modules/set-function-length/index.js":
/*!***************************************************!*\
  !*** ./node_modules/set-function-length/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\nvar define = __webpack_require__(/*! define-data-property */ \"./node_modules/define-data-property/index.js\");\nvar hasDescriptors = __webpack_require__(/*! has-property-descriptors */ \"./node_modules/has-property-descriptors/index.js\")();\nvar gOPD = __webpack_require__(/*! gopd */ \"./node_modules/gopd/index.js\");\n\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @typedef {(...args: unknown[]) => unknown} Func */\n\n/** @type {<T extends Func = Func>(fn: T, length: number, loose?: boolean) => T} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/set-function-length/index.js?");

/***/ }),

/***/ "./node_modules/set-function-name/index.js":
/*!*************************************************!*\
  !*** ./node_modules/set-function-name/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar define = __webpack_require__(/*! define-data-property */ \"./node_modules/define-data-property/index.js\");\nvar hasDescriptors = __webpack_require__(/*! has-property-descriptors */ \"./node_modules/has-property-descriptors/index.js\")();\nvar functionsHaveConfigurableNames = (__webpack_require__(/*! functions-have-names */ \"./node_modules/functions-have-names/index.js\").functionsHaveConfigurableNames)();\n\nvar $TypeError = TypeError;\n\nmodule.exports = function setFunctionName(fn, name) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\tif (!loose || functionsHaveConfigurableNames) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(fn, 'name', name, true, true);\n\t\t} else {\n\t\t\tdefine(fn, 'name', name);\n\t\t}\n\t}\n\treturn fn;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/set-function-name/index.js?");

/***/ }),

/***/ "./node_modules/side-channel/index.js":
/*!********************************************!*\
  !*** ./node_modules/side-channel/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\nvar inspect = __webpack_require__(/*! object-inspect */ \"./node_modules/object-inspect/index.js\");\n\nvar $TypeError = __webpack_require__(/*! es-errors/type */ \"./node_modules/es-errors/type.js\");\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/side-channel/index.js?");

/***/ }),

/***/ "./node_modules/simudp/lib/simudp.js":
/*!*******************************************!*\
  !*** ./node_modules/simudp/lib/simudp.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var util   = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar io     = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/lib/io.js\");\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\n\nfunction Socket(type, listener, host, io_options) {\n  events.EventEmitter.call(this);\n\n  //init state variables\n  this._listening = false;\n  this._binding   = false;\n\n  //type of socket 'udp4', 'udp6', 'unix_socket'\n  this.type = type || 'udp4';\n\n  //listener\n  if (typeof listener === 'function')\n    this.on('message', listener);\n\n  //args swap\n  if(typeof listener === 'string') {\n    host = listener;\n    io_options = host;\n  }\n\n  io_options = io_options || {};\n\n  //alows muliple socket on one browser\n  io_options['force new connection'] = true;\n\n  //use sio manespaceing\n  host = (host || '') + '/simudp';\n\n  //connect socket.io\n  this.sio = io.connect(host, io_options);\n}\nutil.inherits(Socket, events.EventEmitter);\n\nexports.Socket = Socket;\nexports.createSocket = function(type, listener) {\n  return new Socket(type, listener);\n};\n\n\nSocket.prototype.bind = function(port, address) {\n  var self = this;\n\n  if(this._listening)\n    throw new Error('already listening');\n\n  if(this._binding)\n    throw new Error('already binding');\n  \n  this._binding = true;\n\n  this.sio.emit('bind', {\n    type    : this.type,\n    port    : port,\n    address : address\n  });\n\n  this.sio.on('listening', function(address) {\n    //set address\n    self._address = address;\n\n    self._binding = false;\n    self._listening = true;\n\n    self.emit('listening');\n    \n    //proxy incoming messages\n    self.sio.on('dgram-message', function(message) {\n      self.emit('message',\n        new Buffer(message.msg, 'ascii'),\n        message.rinfo);\n    });\n\n    //proxy error\n    self.sio.on('error', function(error) {\n      self.emit('error', error);\n    });\n\n    //disconnection\n    self.sio.on('disconnect', function() {\n      self.emit('close');\n      self.removeAllListeners();\n    });\n  });\n};\n\nSocket.prototype.send = function(buffer, offset, length, port, address, callback) {\n  var self = this;\n\n  //we are not listening : bind and then send when listening\n  if(!this._listening) {\n    if(!this._binding)\n      this.bind();\n\n    var _args = arguments;\n    this.once('listening', function() {\n      self.send.apply(self, _args);\n    });\n    return;\n  }\n\n  //accept buffer as string\n  buffer = (typeof buffer === 'string') ? new Buffer(buffer) : buffer;\n\n  //emit directly exception if any\n  if (offset >= buffer.length)\n    throw new Error('Offset into buffer too large');\n  if (offset + length > buffer.length)\n    throw new Error('Offset + length beyond buffer length');\n\n  //send it on wire\n  this.sio.emit('dgram-message', {\n    buffer  : buffer.toString('ascii'),\n    offset  : offset,\n    length  : length,\n    port    : port,\n    address : address\n  });\n\n  if(callback)\n    callback.call(null);\n};\n\n\nSocket.prototype.close = function() {\n  this.sio.disconnect();\n  this.emit('close');\n  this.removeAllListeners();\n};\n\n\nSocket.prototype.address = function() {\n  if(! this._address)\n    throw new Error('not binded');\n\n  return this._address;\n};\n\n\n// not implemented methods\n\nSocket.prototype.setBroadcast = function(arg) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setTTL = function(arg) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setMulticastTTL = function(arg) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.addMembership = function(multicastAddress, nterfaceAddress) {\n  throw new Error('not implemented');\n};\n\nSocket.prototype.dropMembership = function(multicastAddress, interfaceAddress) {\n  throw new Error('not implemented');\n};\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/simudp/lib/simudp.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/bin/builder.js":
/*!******************************************************!*\
  !*** ./node_modules/socket.io-client/bin/builder.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var __dirname = \"/\";\n/* module decorator */ module = __webpack_require__.nmd(module);\n/*!\n * socket.io-node\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar fs = __webpack_require__(/*! fs */ \"?067d\")\n  , socket = __webpack_require__(/*! ../lib/io */ \"./node_modules/socket.io-client/lib/io.js\")\n  , uglify = __webpack_require__(/*! uglify-js */ \"./node_modules/uglify-js/uglify-js.js\")\n  , activeXObfuscator = __webpack_require__(/*! active-x-obfuscator */ \"./node_modules/active-x-obfuscator/index.js\");\n\n/**\n * License headers.\n *\n * @api private\n */\n\nvar template = '/*! Socket.IO.%ext% build:' + socket.version + ', %type%. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\\n'\n  , development = template.replace('%type%', 'development').replace('%ext%', 'js')\n  , production = template.replace('%type%', 'production').replace('%ext%', 'min.js');\n\n/**\n * If statements, these allows you to create serveride & client side compatible\n * code using specially designed `if` statements that remove serverside\n * designed code from the source files\n *\n * @api private\n */\n\nvar starttagIF = '// if node'\n  , endtagIF = '// end node';\n\n/**\n * The modules that are required to create a base build of Socket.IO.\n *\n * @const\n * @type {Array}\n * @api private\n */\n\nvar base = [\n    'io.js'\n  , 'util.js'\n  , 'events.js'\n  , 'json.js'\n  , 'parser.js'\n  , 'transport.js'\n  , 'socket.js'\n  , 'namespace.js'\n  ];\n\n/**\n * The available transports for Socket.IO. These are mapped as:\n * \n *   - `key` the name of the transport\n *   - `value` the dependencies for the transport\n *\n * @const\n * @type {Object}\n * @api public\n */\n\nvar baseTransports = {\n    'websocket': ['transports/websocket.js']\n  , 'flashsocket': [\n        'transports/websocket.js'\n      , 'transports/flashsocket.js'\n      , 'vendor/web-socket-js/swfobject.js'\n      , 'vendor/web-socket-js/web_socket.js'\n    ] \n  , 'htmlfile': ['transports/xhr.js', 'transports/htmlfile.js']\n  /* FIXME: re-enable me once we have multi-part support\n  , 'xhr-multipart': ['transports/xhr.js', 'transports/xhr-multipart.js'] */\n  , 'xhr-polling': ['transports/xhr.js', 'transports/xhr-polling.js']\n  , 'jsonp-polling': [\n        'transports/xhr.js'\n      , 'transports/xhr-polling.js'\n      , 'transports/jsonp-polling.js'\n    ]\n};\n\n/**\n * Wrappers for client-side usage.\n * This enables usage in top-level browser window, client-side CommonJS systems and AMD loaders.\n * If doing a node build for server-side client, this wrapper is NOT included.\n * @api private\n */\nvar wrapperPre = \"\\nvar io = ('undefined' === typeof module ? {} : module.exports);\\n(function() {\\n\";\n\nvar wrapperPost = \"\\nif (typeof define === \\\"function\\\" && define.amd) {\" +\n                  \"\\n  define([], function () { return io; });\" +\n                  \"\\n}\\n})();\";\n\n\n/**\n * Builds a custom Socket.IO distribution based on the transports that you\n * need. You can configure the build to create development build or production\n * build (minified).\n *\n * @param {Array} transports The transports that needs to be bundled.\n * @param {Object} [options] Options to configure the building process.\n * @param {Function} callback Last argument should always be the callback\n * @callback {String|Boolean} err An optional argument, if it exists than an error\n *    occurred during the build process.\n * @callback {String} result The result of the build process.\n * @api public\n */\n\nvar builder = module.exports = function () {\n  var transports, options, callback, error = null\n    , args = Array.prototype.slice.call(arguments, 0)\n    , settings = {\n        minify: true\n      , node: false\n      , custom: []\n      };\n\n  // Fancy pancy argument support this makes any pattern possible mainly\n  // because we require only one of each type\n  args.forEach(function (arg) {\n    var type = Object.prototype.toString.call(arg)\n        .replace(/\\[object\\s(\\w+)\\]/gi , '$1' ).toLowerCase();\n\n    switch (type) {\n      case 'array':\n        return transports = arg;\n      case 'object':\n        return options = arg;\n      case 'function':\n        return callback = arg;\n    }\n  });\n\n  // Add defaults\n  options = options || {};\n  transports = transports || Object.keys(baseTransports);\n\n  // Merge the data\n  for(var option in options) {\n    settings[option] = options[option];\n  }\n\n  // Start creating a dependencies chain with all the required files for the\n  // custom Socket.IO bundle.\n  var files = [];\n  base.forEach(function (file) {\n    files.push(__dirname + '/../lib/' + file);\n  });\n\n  transports.forEach(function (transport) {\n    var dependencies = baseTransports[transport];\n    if (!dependencies) {\n      error = 'Unsupported transport `' + transport + '` supplied as argument.';\n      return;\n    }\n\n    // Add the files to the files list, but only if they are not added before\n    dependencies.forEach(function (file) {\n      var path = __dirname + '/../lib/' + file;\n      if (!~files.indexOf(path)) files.push(path);\n    })\n  });\n\n  // check to see if the files tree compilation generated any errors.\n  if (error) return callback(error);\n\n  var results = {};\n  files.forEach(function (file) {\n    fs.readFile(file, function (err, content) {\n      if (err) error = err;\n      results[file] = content;\n\n      // check if we are done yet, or not.. Just by checking the size of the result\n      // object.\n      if (Object.keys(results).length !== files.length) return;\n\n      // we are done, did we error?\n      if (error) return callback(error);\n\n      // start with the license header\n      var code = development\n        , ignore = 0;\n\n      // pre-wrapper for non-server-side builds\n      if (!settings.node) code += wrapperPre;\n\n      // concatenate the file contents in order\n      files.forEach(function (file) {\n        code += results[file];\n      });\n\n      // check if we need to add custom code\n      if (settings.custom.length) {\n        settings.custom.forEach(function (content) {\n          code += content;\n        });\n      }\n\n      // post-wrapper for non-server-side builds\n      if (!settings.node) {\n          code += wrapperPost;\n      }\n\n      code = activeXObfuscator(code);\n\n      // Search for conditional code blocks that need to be removed as they\n      // where designed for a server side env. but only if we don't want to\n      // make this build node compatible.\n      if (!settings.node) {\n        code = code.split('\\n').filter(function (line) {\n          // check if there are tags in here\n          var start = line.indexOf(starttagIF) >= 0\n            , end = line.indexOf(endtagIF) >= 0\n            , ret = ignore;\n\n          // ignore the current line\n          if (start) {\n            ignore++;\n            ret = ignore;\n          }\n\n          // stop ignoring the next line\n          if (end) {\n            ignore--;\n          }\n\n          return ret == 0;\n        }).join('\\n');\n      }\n\n      // check if we need to process it any further\n      if (settings.minify) {\n        var ast = uglify.parser.parse(code);\n        ast = uglify.uglify.ast_mangle(ast);\n        ast = uglify.uglify.ast_squeeze(ast);\n\n        code = production + uglify.uglify.gen_code(ast, { ascii_only: true });\n      }\n\n      callback(error, code);\n    })\n  })\n};\n\n/**\n * Builder version is also the current client version\n * this way we don't have to do another include for the\n * clients version number and we can just include the builder.\n *\n * @type {String}\n * @api public\n */\n \nbuilder.version = socket.version;\n\n/**\n * A list of all build in transport types.\n *\n * @type {Object}\n * @api public\n */\n \nbuilder.transports = baseTransports;\n\n/**\n * Command line support, this allows us to generate builds without having\n * to load it as module.\n */\n \nif (!module.parent){\n  // the first 2 are `node` and the path to this file, we don't need them\n  var args = process.argv.slice(2);\n\n  // build a development build\n  builder(args.length ? args : false, { minify:false }, function (err, content) {\n    if (err) return console.error(err);\n\n    fs.write(\n        fs.openSync(__dirname + '/../dist/socket.io.js', 'w')\n      , content\n      , 0\n      , 'utf8'\n    );\n    console.log('Successfully generated the development build: socket.io.js');\n  });\n\n  // and build a production build\n  builder(args.length ? args : false, function (err, content) {\n    if (err) return console.error(err);\n \n    fs.write(\n        fs.openSync(__dirname + '/../dist/socket.io.min.js', 'w')\n      , content\n      , 0\n      , 'utf8'\n    );\n    console.log('Successfully generated the production build: socket.io.min.js');\n  });\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/bin/builder.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/events.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/events.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.EventEmitter = EventEmitter;\n\n  /**\n   * Event emitter constructor.\n   *\n   * @api public.\n   */\n\n  function EventEmitter () {};\n\n  /**\n   * Adds a listener\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.on = function (name, fn) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = fn;\n    } else if (io.util.isArray(this.$events[name])) {\n      this.$events[name].push(fn);\n    } else {\n      this.$events[name] = [this.$events[name], fn];\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  /**\n   * Adds a volatile listener.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.once = function (name, fn) {\n    var self = this;\n\n    function on () {\n      self.removeListener(name, on);\n      fn.apply(this, arguments);\n    };\n\n    on.listener = fn;\n    this.on(name, on);\n\n    return this;\n  };\n\n  /**\n   * Removes a listener.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.removeListener = function (name, fn) {\n    if (this.$events && this.$events[name]) {\n      var list = this.$events[name];\n\n      if (io.util.isArray(list)) {\n        var pos = -1;\n\n        for (var i = 0, l = list.length; i < l; i++) {\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\n            pos = i;\n            break;\n          }\n        }\n\n        if (pos < 0) {\n          return this;\n        }\n\n        list.splice(pos, 1);\n\n        if (!list.length) {\n          delete this.$events[name];\n        }\n      } else if (list === fn || (list.listener && list.listener === fn)) {\n        delete this.$events[name];\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Removes all listeners for an event.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.removeAllListeners = function (name) {\n    if (name === undefined) {\n      this.$events = {};\n      return this;\n    }\n\n    if (this.$events && this.$events[name]) {\n      this.$events[name] = null;\n    }\n\n    return this;\n  };\n\n  /**\n   * Gets all listeners for a certain event.\n   *\n   * @api publci\n   */\n\n  EventEmitter.prototype.listeners = function (name) {\n    if (!this.$events) {\n      this.$events = {};\n    }\n\n    if (!this.$events[name]) {\n      this.$events[name] = [];\n    }\n\n    if (!io.util.isArray(this.$events[name])) {\n      this.$events[name] = [this.$events[name]];\n    }\n\n    return this.$events[name];\n  };\n\n  /**\n   * Emits an event.\n   *\n   * @api public\n   */\n\n  EventEmitter.prototype.emit = function (name) {\n    if (!this.$events) {\n      return false;\n    }\n\n    var handler = this.$events[name];\n\n    if (!handler) {\n      return false;\n    }\n\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    if ('function' == typeof handler) {\n      handler.apply(this, args);\n    } else if (io.util.isArray(handler)) {\n      var listeners = handler.slice();\n\n      for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i].apply(this, args);\n      }\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/events.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/io.js":
/*!*************************************************!*\
  !*** ./node_modules/socket.io-client/lib/io.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __dirname = \"/\";\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, global) {\n\n  /**\n   * IO namespace.\n   *\n   * @namespace\n   */\n\n  var io = exports;\n\n  /**\n   * Socket.IO version\n   *\n   * @api public\n   */\n\n  io.version = '0.9.17';\n\n  /**\n   * Protocol implemented.\n   *\n   * @api public\n   */\n\n  io.protocol = 1;\n\n  /**\n   * Available transports, these will be populated with the available transports\n   *\n   * @api public\n   */\n\n  io.transports = [];\n\n  /**\n   * Keep track of jsonp callbacks.\n   *\n   * @api private\n   */\n\n  io.j = [];\n\n  /**\n   * Keep track of our io.Sockets\n   *\n   * @api private\n   */\n  io.sockets = {};\n\n  // if node\n\n  /**\n   * Expose constructors if in Node\n   */\n\n  if (true) {\n\n    /**\n     * Expose utils\n     *\n     * @api private\n     */\n\n    io.util = (__webpack_require__(/*! ./util */ \"./node_modules/socket.io-client/lib/util.js\").util);\n\n    /**\n     * Expose JSON.\n     *\n     * @api private\n     */\n\n    io.JSON = (__webpack_require__(/*! ./json */ \"./node_modules/socket.io-client/lib/json.js\").JSON);\n\n    /**\n     * Expose parser.\n     *\n     * @api private\n     */\n\n    io.parser = (__webpack_require__(/*! ./parser */ \"./node_modules/socket.io-client/lib/parser.js\").parser);\n\n    /**\n     * Expose EventEmitter\n     *\n     * @api private\n     */\n\n    io.EventEmitter = (__webpack_require__(/*! ./events */ \"./node_modules/socket.io-client/lib/events.js\").EventEmitter);\n\n    /**\n     * Expose SocketNamespace\n     *\n     * @api private\n     */\n\n     io.SocketNamespace = (__webpack_require__(/*! ./namespace */ \"./node_modules/socket.io-client/lib/namespace.js\").SocketNamespace);\n\n    /**\n     * Expose Transport\n     *\n     * @api public\n     */\n\n    io.Transport = (__webpack_require__(/*! ./transport */ \"./node_modules/socket.io-client/lib/transport.js\").Transport);\n\n    /**\n     * Default enabled transports\n     *\n     * @api public\n     */\n\n    io.transports = ['websocket', 'xhr-polling'];\n\n    /**\n     * Expose all transports\n     *\n     * @api public\n     */\n\n    io.Transport.XHR = (__webpack_require__(/*! ./transports/xhr */ \"./node_modules/socket.io-client/lib/transports/xhr.js\").XHR);\n\n    io.transports.forEach(function (t) {\n      io.Transport[t] = __webpack_require__(\"./node_modules/socket.io-client/lib/transports sync recursive ^\\\\.\\\\/.*$\")(\"./\" + t)[t];\n    });\n\n    /**\n     * Expose Socket\n     *\n     * @api public\n     */\n\n    io.Socket = (__webpack_require__(/*! ./socket */ \"./node_modules/socket.io-client/lib/socket.js\").Socket);\n\n    /**\n     * Location of `dist/` directory.\n     *\n     * @api private\n     */\n\n    io.dist = __dirname + '/../dist';\n\n    /**\n     * Expose our build system which can generate\n     * socket.io files on the fly with different transports\n     *\n     * @api private\n     */\n\n    io.builder = __webpack_require__(/*! ../bin/builder */ \"./node_modules/socket.io-client/bin/builder.js\");\n\n  }\n  // end node\n\n  /**\n   * Manages connections to hosts.\n   *\n   * @param {String} uri\n   * @Param {Boolean} force creation of new socket (defaults to false)\n   * @api public\n   */\n\n  io.connect = function (host, details) {\n    var uri = io.util.parseUri(host)\n      , uuri\n      , socket;\n\n    if (global && global.location) {\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\n      uri.host = uri.host || (global.document\n        ? global.document.domain : global.location.hostname);\n      uri.port = uri.port || global.location.port;\n    }\n\n    uuri = io.util.uniqueUri(uri);\n\n    var options = {\n        host: uri.host\n      , secure: 'https' == uri.protocol\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\n      , query: uri.query || ''\n    };\n\n    io.util.merge(options, details);\n\n    if (options['force new connection'] || !io.sockets[uuri]) {\n      socket = new io.Socket(options);\n    }\n\n    if (!options['force new connection'] && socket) {\n      io.sockets[uuri] = socket;\n    }\n\n    socket = socket || io.sockets[uuri];\n\n    // if path is different from '' or /\n    return socket.of(uri.path.length > 1 ? uri.path : '');\n  };\n\n})( true ? module.exports : (0), this);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/io.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/json.js":
/*!***************************************************!*\
  !*** ./node_modules/socket.io-client/lib/json.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n/**\n * Based on JSON2 (http://www.JSON.org/js.html).\n */\n\n(function (exports, nativeJSON) {\n  \"use strict\";\n\n  // use native JSON if it's available\n  if (nativeJSON && nativeJSON.parse){\n    return exports.JSON = {\n      parse: nativeJSON.parse\n    , stringify: nativeJSON.stringify\n    };\n  }\n\n  var JSON = exports.JSON = {};\n\n  function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? '0' + n : n;\n  }\n\n  function date(d, key) {\n    return isFinite(d.valueOf()) ?\n        d.getUTCFullYear()     + '-' +\n        f(d.getUTCMonth() + 1) + '-' +\n        f(d.getUTCDate())      + 'T' +\n        f(d.getUTCHours())     + ':' +\n        f(d.getUTCMinutes())   + ':' +\n        f(d.getUTCSeconds())   + 'Z' : null;\n  };\n\n  var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n          '\\b': '\\\\b',\n          '\\t': '\\\\t',\n          '\\n': '\\\\n',\n          '\\f': '\\\\f',\n          '\\r': '\\\\r',\n          '\"' : '\\\\\"',\n          '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n  function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n          var c = meta[a];\n          return typeof c === 'string' ? c :\n              '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n  }\n\n\n  function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n          k,          // The member key.\n          v,          // The member value.\n          length,\n          mind = gap,\n          partial,\n          value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value instanceof Date) {\n          value = date(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n          value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n      case 'string':\n          return quote(value);\n\n      case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n      case 'boolean':\n      case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n      case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n              return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n              length = value.length;\n              for (i = 0; i < length; i += 1) {\n                  partial[i] = str(i, value) || 'null';\n              }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n              v = partial.length === 0 ? '[]' : gap ?\n                  '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                  '[' + partial.join(',') + ']';\n              gap = mind;\n              return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n              length = rep.length;\n              for (i = 0; i < length; i += 1) {\n                  if (typeof rep[i] === 'string') {\n                      k = rep[i];\n                      v = str(k, value);\n                      if (v) {\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                      }\n                  }\n              }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n              for (k in value) {\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\n                      v = str(k, value);\n                      if (v) {\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                      }\n                  }\n              }\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0 ? '{}' : gap ?\n              '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n              '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n  }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n  JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n          for (i = 0; i < space; i += 1) {\n              indent += ' ';\n          }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n          indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n              (typeof replacer !== 'object' ||\n              typeof replacer.length !== 'number')) {\n          throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n  };\n\n// If the JSON object does not yet have a parse method, give it one.\n\n  JSON.parse = function (text, reviver) {\n  // The parse method takes a text and an optional reviver function, and returns\n  // a JavaScript value if the text is a valid JSON text.\n\n      var j;\n\n      function walk(holder, key) {\n\n  // The walk method is used to recursively walk the resulting structure so\n  // that modifications can be made.\n\n          var k, v, value = holder[key];\n          if (value && typeof value === 'object') {\n              for (k in value) {\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\n                      v = walk(value, k);\n                      if (v !== undefined) {\n                          value[k] = v;\n                      } else {\n                          delete value[k];\n                      }\n                  }\n              }\n          }\n          return reviver.call(holder, key, value);\n      }\n\n\n  // Parsing happens in four stages. In the first stage, we replace certain\n  // Unicode characters with escape sequences. JavaScript handles many characters\n  // incorrectly, either silently deleting them, or treating them as line endings.\n\n      text = String(text);\n      cx.lastIndex = 0;\n      if (cx.test(text)) {\n          text = text.replace(cx, function (a) {\n              return '\\\\u' +\n                  ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n          });\n      }\n\n  // In the second stage, we run the text against regular expressions that look\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\n  // because they can cause invocation, and '=' because it can cause mutation.\n  // But just to be safe, we want to reject all unexpected forms.\n\n  // We split the second stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n      if (/^[\\],:{}\\s]*$/\n              .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\n                  .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\n                  .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n\n  // In the third stage we use the eval function to compile the text into a\n  // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\n  // in JavaScript: it can begin a block or an object literal. We wrap the text\n  // in parens to eliminate the ambiguity.\n\n          j = eval('(' + text + ')');\n\n  // In the optional fourth stage, we recursively walk the new structure, passing\n  // each name/value pair to a reviver function for possible transformation.\n\n          return typeof reviver === 'function' ?\n              walk({'': j}, '') : j;\n      }\n\n  // If the text is not JSON parseable, then a SyntaxError is thrown.\n\n      throw new SyntaxError('JSON.parse');\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , typeof JSON !== 'undefined' ? JSON : undefined\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/json.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/namespace.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/lib/namespace.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.SocketNamespace = SocketNamespace;\n\n  /**\n   * Socket namespace constructor.\n   *\n   * @constructor\n   * @api public\n   */\n\n  function SocketNamespace (socket, name) {\n    this.socket = socket;\n    this.name = name || '';\n    this.flags = {};\n    this.json = new Flag(this, 'json');\n    this.ackPackets = 0;\n    this.acks = {};\n  };\n\n  /**\n   * Apply EventEmitter mixin.\n   */\n\n  io.util.mixin(SocketNamespace, io.EventEmitter);\n\n  /**\n   * Copies emit since we override it\n   *\n   * @api private\n   */\n\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\n\n  /**\n   * Creates a new namespace, by proxying the request to the socket. This\n   * allows us to use the synax as we do on the server.\n   *\n   * @api public\n   */\n\n  SocketNamespace.prototype.of = function () {\n    return this.socket.of.apply(this.socket, arguments);\n  };\n\n  /**\n   * Sends a packet.\n   *\n   * @api private\n   */\n\n  SocketNamespace.prototype.packet = function (packet) {\n    packet.endpoint = this.name;\n    this.socket.packet(packet);\n    this.flags = {};\n    return this;\n  };\n\n  /**\n   * Sends a message\n   *\n   * @api public\n   */\n\n  SocketNamespace.prototype.send = function (data, fn) {\n    var packet = {\n        type: this.flags.json ? 'json' : 'message'\n      , data: data\n    };\n\n    if ('function' == typeof fn) {\n      packet.id = ++this.ackPackets;\n      packet.ack = true;\n      this.acks[packet.id] = fn;\n    }\n\n    return this.packet(packet);\n  };\n\n  /**\n   * Emits an event\n   *\n   * @api public\n   */\n  \n  SocketNamespace.prototype.emit = function (name) {\n    var args = Array.prototype.slice.call(arguments, 1)\n      , lastArg = args[args.length - 1]\n      , packet = {\n            type: 'event'\n          , name: name\n        };\n\n    if ('function' == typeof lastArg) {\n      packet.id = ++this.ackPackets;\n      packet.ack = 'data';\n      this.acks[packet.id] = lastArg;\n      args = args.slice(0, args.length - 1);\n    }\n\n    packet.args = args;\n\n    return this.packet(packet);\n  };\n\n  /**\n   * Disconnects the namespace\n   *\n   * @api private\n   */\n\n  SocketNamespace.prototype.disconnect = function () {\n    if (this.name === '') {\n      this.socket.disconnect();\n    } else {\n      this.packet({ type: 'disconnect' });\n      this.$emit('disconnect');\n    }\n\n    return this;\n  };\n\n  /**\n   * Handles a packet\n   *\n   * @api private\n   */\n\n  SocketNamespace.prototype.onPacket = function (packet) {\n    var self = this;\n\n    function ack () {\n      self.packet({\n          type: 'ack'\n        , args: io.util.toArray(arguments)\n        , ackId: packet.id\n      });\n    };\n\n    switch (packet.type) {\n      case 'connect':\n        this.$emit('connect');\n        break;\n\n      case 'disconnect':\n        if (this.name === '') {\n          this.socket.onDisconnect(packet.reason || 'booted');\n        } else {\n          this.$emit('disconnect', packet.reason);\n        }\n        break;\n\n      case 'message':\n      case 'json':\n        var params = ['message', packet.data];\n\n        if (packet.ack == 'data') {\n          params.push(ack);\n        } else if (packet.ack) {\n          this.packet({ type: 'ack', ackId: packet.id });\n        }\n\n        this.$emit.apply(this, params);\n        break;\n\n      case 'event':\n        var params = [packet.name].concat(packet.args);\n\n        if (packet.ack == 'data')\n          params.push(ack);\n\n        this.$emit.apply(this, params);\n        break;\n\n      case 'ack':\n        if (this.acks[packet.ackId]) {\n          this.acks[packet.ackId].apply(this, packet.args);\n          delete this.acks[packet.ackId];\n        }\n        break;\n\n      case 'error':\n        if (packet.advice){\n          this.socket.onError(packet);\n        } else {\n          if (packet.reason == 'unauthorized') {\n            this.$emit('connect_failed', packet.reason);\n          } else {\n            this.$emit('error', packet.reason);\n          }\n        }\n        break;\n    }\n  };\n\n  /**\n   * Flag interface.\n   *\n   * @api private\n   */\n\n  function Flag (nsp, name) {\n    this.namespace = nsp;\n    this.name = name;\n  };\n\n  /**\n   * Send a message\n   *\n   * @api public\n   */\n\n  Flag.prototype.send = function () {\n    this.namespace.flags[this.name] = true;\n    this.namespace.send.apply(this.namespace, arguments);\n  };\n\n  /**\n   * Emit an event\n   *\n   * @api public\n   */\n\n  Flag.prototype.emit = function () {\n    this.namespace.flags[this.name] = true;\n    this.namespace.emit.apply(this.namespace, arguments);\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/namespace.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/parser.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/parser.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Parser namespace.\n   *\n   * @namespace\n   */\n\n  var parser = exports.parser = {};\n\n  /**\n   * Packet types.\n   */\n\n  var packets = parser.packets = [\n      'disconnect'\n    , 'connect'\n    , 'heartbeat'\n    , 'message'\n    , 'json'\n    , 'event'\n    , 'ack'\n    , 'error'\n    , 'noop'\n  ];\n\n  /**\n   * Errors reasons.\n   */\n\n  var reasons = parser.reasons = [\n      'transport not supported'\n    , 'client not handshaken'\n    , 'unauthorized'\n  ];\n\n  /**\n   * Errors advice.\n   */\n\n  var advice = parser.advice = [\n      'reconnect'\n  ];\n\n  /**\n   * Shortcuts.\n   */\n\n  var JSON = io.JSON\n    , indexOf = io.util.indexOf;\n\n  /**\n   * Encodes a packet.\n   *\n   * @api private\n   */\n\n  parser.encodePacket = function (packet) {\n    var type = indexOf(packets, packet.type)\n      , id = packet.id || ''\n      , endpoint = packet.endpoint || ''\n      , ack = packet.ack\n      , data = null;\n\n    switch (packet.type) {\n      case 'error':\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\n\n        if (reason !== '' || adv !== '')\n          data = reason + (adv !== '' ? ('+' + adv) : '');\n\n        break;\n\n      case 'message':\n        if (packet.data !== '')\n          data = packet.data;\n        break;\n\n      case 'event':\n        var ev = { name: packet.name };\n\n        if (packet.args && packet.args.length) {\n          ev.args = packet.args;\n        }\n\n        data = JSON.stringify(ev);\n        break;\n\n      case 'json':\n        data = JSON.stringify(packet.data);\n        break;\n\n      case 'connect':\n        if (packet.qs)\n          data = packet.qs;\n        break;\n\n      case 'ack':\n        data = packet.ackId\n          + (packet.args && packet.args.length\n              ? '+' + JSON.stringify(packet.args) : '');\n        break;\n    }\n\n    // construct packet with required fragments\n    var encoded = [\n        type\n      , id + (ack == 'data' ? '+' : '')\n      , endpoint\n    ];\n\n    // data fragment is optional\n    if (data !== null && data !== undefined)\n      encoded.push(data);\n\n    return encoded.join(':');\n  };\n\n  /**\n   * Encodes multiple messages (payload).\n   *\n   * @param {Array} messages\n   * @api private\n   */\n\n  parser.encodePayload = function (packets) {\n    var decoded = '';\n\n    if (packets.length == 1)\n      return packets[0];\n\n    for (var i = 0, l = packets.length; i < l; i++) {\n      var packet = packets[i];\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\n    }\n\n    return decoded;\n  };\n\n  /**\n   * Decodes a packet\n   *\n   * @api private\n   */\n\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\n\n  parser.decodePacket = function (data) {\n    var pieces = data.match(regexp);\n\n    if (!pieces) return {};\n\n    var id = pieces[2] || ''\n      , data = pieces[5] || ''\n      , packet = {\n            type: packets[pieces[1]]\n          , endpoint: pieces[4] || ''\n        };\n\n    // whether we need to acknowledge the packet\n    if (id) {\n      packet.id = id;\n      if (pieces[3])\n        packet.ack = 'data';\n      else\n        packet.ack = true;\n    }\n\n    // handle different packet types\n    switch (packet.type) {\n      case 'error':\n        var pieces = data.split('+');\n        packet.reason = reasons[pieces[0]] || '';\n        packet.advice = advice[pieces[1]] || '';\n        break;\n\n      case 'message':\n        packet.data = data || '';\n        break;\n\n      case 'event':\n        try {\n          var opts = JSON.parse(data);\n          packet.name = opts.name;\n          packet.args = opts.args;\n        } catch (e) { }\n\n        packet.args = packet.args || [];\n        break;\n\n      case 'json':\n        try {\n          packet.data = JSON.parse(data);\n        } catch (e) { }\n        break;\n\n      case 'connect':\n        packet.qs = data || '';\n        break;\n\n      case 'ack':\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\n        if (pieces) {\n          packet.ackId = pieces[1];\n          packet.args = [];\n\n          if (pieces[3]) {\n            try {\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\n            } catch (e) { }\n          }\n        }\n        break;\n\n      case 'disconnect':\n      case 'heartbeat':\n        break;\n    };\n\n    return packet;\n  };\n\n  /**\n   * Decodes data payload. Detects multiple messages\n   *\n   * @return {Array} messages\n   * @api public\n   */\n\n  parser.decodePayload = function (data) {\n    // IE doesn't like data[i] for unicode chars, charAt works fine\n    if (data.charAt(0) == '\\ufffd') {\n      var ret = [];\n\n      for (var i = 1, length = ''; i < data.length; i++) {\n        if (data.charAt(i) == '\\ufffd') {\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\n          i += Number(length) + 1;\n          length = '';\n        } else {\n          length += data.charAt(i);\n        }\n      }\n\n      return ret;\n    } else {\n      return [parser.decodePacket(data)];\n    }\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/parser.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/socket.js":
/*!*****************************************************!*\
  !*** ./node_modules/socket.io-client/lib/socket.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.Socket = Socket;\n\n  /**\n   * Create a new `Socket.IO client` which can establish a persistent\n   * connection with a Socket.IO enabled server.\n   *\n   * @api public\n   */\n\n  function Socket (options) {\n    this.options = {\n        port: 80\n      , secure: false\n      , document: 'document' in global ? document : false\n      , resource: 'socket.io'\n      , transports: io.transports\n      , 'connect timeout': 10000\n      , 'try multiple transports': true\n      , 'reconnect': true\n      , 'reconnection delay': 500\n      , 'reconnection limit': Infinity\n      , 'reopen delay': 3000\n      , 'max reconnection attempts': 10\n      , 'sync disconnect on unload': false\n      , 'auto connect': true\n      , 'flash policy port': 10843\n      , 'manualFlush': false\n    };\n\n    io.util.merge(this.options, options);\n\n    this.connected = false;\n    this.open = false;\n    this.connecting = false;\n    this.reconnecting = false;\n    this.namespaces = {};\n    this.buffer = [];\n    this.doBuffer = false;\n\n    if (this.options['sync disconnect on unload'] &&\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\n      var self = this;\n      io.util.on(global, 'beforeunload', function () {\n        self.disconnectSync();\n      }, false);\n    }\n\n    if (this.options['auto connect']) {\n      this.connect();\n    }\n};\n\n  /**\n   * Apply EventEmitter mixin.\n   */\n\n  io.util.mixin(Socket, io.EventEmitter);\n\n  /**\n   * Returns a namespace listener/emitter for this socket\n   *\n   * @api public\n   */\n\n  Socket.prototype.of = function (name) {\n    if (!this.namespaces[name]) {\n      this.namespaces[name] = new io.SocketNamespace(this, name);\n\n      if (name !== '') {\n        this.namespaces[name].packet({ type: 'connect' });\n      }\n    }\n\n    return this.namespaces[name];\n  };\n\n  /**\n   * Emits the given event to the Socket and all namespaces\n   *\n   * @api private\n   */\n\n  Socket.prototype.publish = function () {\n    this.emit.apply(this, arguments);\n\n    var nsp;\n\n    for (var i in this.namespaces) {\n      if (this.namespaces.hasOwnProperty(i)) {\n        nsp = this.of(i);\n        nsp.$emit.apply(nsp, arguments);\n      }\n    }\n  };\n\n  /**\n   * Performs the handshake\n   *\n   * @api private\n   */\n\n  function empty () { };\n\n  Socket.prototype.handshake = function (fn) {\n    var self = this\n      , options = this.options;\n\n    function complete (data) {\n      if (data instanceof Error) {\n        self.connecting = false;\n        self.onError(data.message);\n      } else {\n        fn.apply(null, data.split(':'));\n      }\n    };\n\n    var url = [\n          'http' + (options.secure ? 's' : '') + ':/'\n        , options.host + ':' + options.port\n        , options.resource\n        , io.protocol\n        , io.util.query(this.options.query, 't=' + +new Date)\n      ].join('/');\n\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\n      var insertAt = document.getElementsByTagName('script')[0]\n        , script = document.createElement('script');\n\n      script.src = url + '&jsonp=' + io.j.length;\n      insertAt.parentNode.insertBefore(script, insertAt);\n\n      io.j.push(function (data) {\n        complete(data);\n        script.parentNode.removeChild(script);\n      });\n    } else {\n      var xhr = io.util.request();\n\n      xhr.open('GET', url, true);\n      if (this.isXDomain()) {\n        xhr.withCredentials = true;\n      }\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          xhr.onreadystatechange = empty;\n\n          if (xhr.status == 200) {\n            complete(xhr.responseText);\n          } else if (xhr.status == 403) {\n            self.onError(xhr.responseText);\n          } else {\n            self.connecting = false;            \n            !self.reconnecting && self.onError(xhr.responseText);\n          }\n        }\n      };\n      xhr.send(null);\n    }\n  };\n\n  /**\n   * Find an available transport based on the options supplied in the constructor.\n   *\n   * @api private\n   */\n\n  Socket.prototype.getTransport = function (override) {\n    var transports = override || this.transports, match;\n\n    for (var i = 0, transport; transport = transports[i]; i++) {\n      if (io.Transport[transport]\n        && io.Transport[transport].check(this)\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck(this))) {\n        return new io.Transport[transport](this, this.sessionid);\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Connects to the server.\n   *\n   * @param {Function} [fn] Callback.\n   * @returns {io.Socket}\n   * @api public\n   */\n\n  Socket.prototype.connect = function (fn) {\n    if (this.connecting) {\n      return this;\n    }\n\n    var self = this;\n    self.connecting = true;\n    \n    this.handshake(function (sid, heartbeat, close, transports) {\n      self.sessionid = sid;\n      self.closeTimeout = close * 1000;\n      self.heartbeatTimeout = heartbeat * 1000;\n      if(!self.transports)\n          self.transports = self.origTransports = (transports ? io.util.intersect(\n              transports.split(',')\n            , self.options.transports\n          ) : self.options.transports);\n\n      self.setHeartbeatTimeout();\n\n      function connect (transports){\n        if (self.transport) self.transport.clearTimeouts();\n\n        self.transport = self.getTransport(transports);\n        if (!self.transport) return self.publish('connect_failed');\n\n        // once the transport is ready\n        self.transport.ready(self, function () {\n          self.connecting = true;\n          self.publish('connecting', self.transport.name);\n          self.transport.open();\n\n          if (self.options['connect timeout']) {\n            self.connectTimeoutTimer = setTimeout(function () {\n              if (!self.connected) {\n                self.connecting = false;\n\n                if (self.options['try multiple transports']) {\n                  var remaining = self.transports;\n\n                  while (remaining.length > 0 && remaining.splice(0,1)[0] !=\n                         self.transport.name) {}\n\n                    if (remaining.length){\n                      connect(remaining);\n                    } else {\n                      self.publish('connect_failed');\n                    }\n                }\n              }\n            }, self.options['connect timeout']);\n          }\n        });\n      }\n\n      connect(self.transports);\n\n      self.once('connect', function (){\n        clearTimeout(self.connectTimeoutTimer);\n\n        fn && typeof fn == 'function' && fn();\n      });\n    });\n\n    return this;\n  };\n\n  /**\n   * Clears and sets a new heartbeat timeout using the value given by the\n   * server during the handshake.\n   *\n   * @api private\n   */\n\n  Socket.prototype.setHeartbeatTimeout = function () {\n    clearTimeout(this.heartbeatTimeoutTimer);\n    if(this.transport && !this.transport.heartbeats()) return;\n\n    var self = this;\n    this.heartbeatTimeoutTimer = setTimeout(function () {\n      self.transport.onClose();\n    }, this.heartbeatTimeout);\n  };\n\n  /**\n   * Sends a message.\n   *\n   * @param {Object} data packet.\n   * @returns {io.Socket}\n   * @api public\n   */\n\n  Socket.prototype.packet = function (data) {\n    if (this.connected && !this.doBuffer) {\n      this.transport.packet(data);\n    } else {\n      this.buffer.push(data);\n    }\n\n    return this;\n  };\n\n  /**\n   * Sets buffer state\n   *\n   * @api private\n   */\n\n  Socket.prototype.setBuffer = function (v) {\n    this.doBuffer = v;\n\n    if (!v && this.connected && this.buffer.length) {\n      if (!this.options['manualFlush']) {\n        this.flushBuffer();\n      }\n    }\n  };\n\n  /**\n   * Flushes the buffer data over the wire.\n   * To be invoked manually when 'manualFlush' is set to true.\n   *\n   * @api public\n   */\n\n  Socket.prototype.flushBuffer = function() {\n    this.transport.payload(this.buffer);\n    this.buffer = [];\n  };\n  \n\n  /**\n   * Disconnect the established connect.\n   *\n   * @returns {io.Socket}\n   * @api public\n   */\n\n  Socket.prototype.disconnect = function () {\n    if (this.connected || this.connecting) {\n      if (this.open) {\n        this.of('').packet({ type: 'disconnect' });\n      }\n\n      // handle disconnection immediately\n      this.onDisconnect('booted');\n    }\n\n    return this;\n  };\n\n  /**\n   * Disconnects the socket with a sync XHR.\n   *\n   * @api private\n   */\n\n  Socket.prototype.disconnectSync = function () {\n    // ensure disconnection\n    var xhr = io.util.request();\n    var uri = [\n        'http' + (this.options.secure ? 's' : '') + ':/'\n      , this.options.host + ':' + this.options.port\n      , this.options.resource\n      , io.protocol\n      , ''\n      , this.sessionid\n    ].join('/') + '/?disconnect=1';\n\n    xhr.open('GET', uri, false);\n    xhr.send(null);\n\n    // handle disconnection immediately\n    this.onDisconnect('booted');\n  };\n\n  /**\n   * Check if we need to use cross domain enabled transports. Cross domain would\n   * be a different port or different domain name.\n   *\n   * @returns {Boolean}\n   * @api private\n   */\n\n  Socket.prototype.isXDomain = function () {\n    // if node\n    return false;\n    // end node\n\n    var port = global.location.port ||\n      ('https:' == global.location.protocol ? 443 : 80);\n\n    return this.options.host !== global.location.hostname \n      || this.options.port != port;\n  };\n\n  /**\n   * Called upon handshake.\n   *\n   * @api private\n   */\n\n  Socket.prototype.onConnect = function () {\n    if (!this.connected) {\n      this.connected = true;\n      this.connecting = false;\n      if (!this.doBuffer) {\n        // make sure to flush the buffer\n        this.setBuffer(false);\n      }\n      this.emit('connect');\n    }\n  };\n\n  /**\n   * Called when the transport opens\n   *\n   * @api private\n   */\n\n  Socket.prototype.onOpen = function () {\n    this.open = true;\n  };\n\n  /**\n   * Called when the transport closes.\n   *\n   * @api private\n   */\n\n  Socket.prototype.onClose = function () {\n    this.open = false;\n    clearTimeout(this.heartbeatTimeoutTimer);\n  };\n\n  /**\n   * Called when the transport first opens a connection\n   *\n   * @param text\n   */\n\n  Socket.prototype.onPacket = function (packet) {\n    this.of(packet.endpoint).onPacket(packet);\n  };\n\n  /**\n   * Handles an error.\n   *\n   * @api private\n   */\n\n  Socket.prototype.onError = function (err) {\n    if (err && err.advice) {\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\n        this.disconnect();\n        if (this.options.reconnect) {\n          this.reconnect();\n        }\n      }\n    }\n\n    this.publish('error', err && err.reason ? err.reason : err);\n  };\n\n  /**\n   * Called when the transport disconnects.\n   *\n   * @api private\n   */\n\n  Socket.prototype.onDisconnect = function (reason) {\n    var wasConnected = this.connected\n      , wasConnecting = this.connecting;\n\n    this.connected = false;\n    this.connecting = false;\n    this.open = false;\n\n    if (wasConnected || wasConnecting) {\n      this.transport.close();\n      this.transport.clearTimeouts();\n      if (wasConnected) {\n        this.publish('disconnect', reason);\n\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\n          this.reconnect();\n        }\n      }\n    }\n  };\n\n  /**\n   * Called upon reconnection.\n   *\n   * @api private\n   */\n\n  Socket.prototype.reconnect = function () {\n    this.reconnecting = true;\n    this.reconnectionAttempts = 0;\n    this.reconnectionDelay = this.options['reconnection delay'];\n\n    var self = this\n      , maxAttempts = this.options['max reconnection attempts']\n      , tryMultiple = this.options['try multiple transports']\n      , limit = this.options['reconnection limit'];\n\n    function reset () {\n      if (self.connected) {\n        for (var i in self.namespaces) {\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\n              self.namespaces[i].packet({ type: 'connect' });\n          }\n        }\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\n      }\n\n      clearTimeout(self.reconnectionTimer);\n\n      self.removeListener('connect_failed', maybeReconnect);\n      self.removeListener('connect', maybeReconnect);\n\n      self.reconnecting = false;\n\n      delete self.reconnectionAttempts;\n      delete self.reconnectionDelay;\n      delete self.reconnectionTimer;\n      delete self.redoTransports;\n\n      self.options['try multiple transports'] = tryMultiple;\n    };\n\n    function maybeReconnect () {\n      if (!self.reconnecting) {\n        return;\n      }\n\n      if (self.connected) {\n        return reset();\n      };\n\n      if (self.connecting && self.reconnecting) {\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\n      }\n\n      if (self.reconnectionAttempts++ >= maxAttempts) {\n        if (!self.redoTransports) {\n          self.on('connect_failed', maybeReconnect);\n          self.options['try multiple transports'] = true;\n          self.transports = self.origTransports;\n          self.transport = self.getTransport();\n          self.redoTransports = true;\n          self.connect();\n        } else {\n          self.publish('reconnect_failed');\n          reset();\n        }\n      } else {\n        if (self.reconnectionDelay < limit) {\n          self.reconnectionDelay *= 2; // exponential back off\n        }\n\n        self.connect();\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\n      }\n    };\n\n    this.options['try multiple transports'] = false;\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\n\n    this.on('connect', maybeReconnect);\n  };\n\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/socket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transport.js":
/*!********************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transport.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.Transport = Transport;\n\n  /**\n   * This is the transport template for all supported transport methods.\n   *\n   * @constructor\n   * @api public\n   */\n\n  function Transport (socket, sessid) {\n    this.socket = socket;\n    this.sessid = sessid;\n  };\n\n  /**\n   * Apply EventEmitter mixin.\n   */\n\n  io.util.mixin(Transport, io.EventEmitter);\n\n\n  /**\n   * Indicates whether heartbeats is enabled for this transport\n   *\n   * @api private\n   */\n\n  Transport.prototype.heartbeats = function () {\n    return true;\n  };\n\n  /**\n   * Handles the response from the server. When a new response is received\n   * it will automatically update the timeout, decode the message and\n   * forwards the response to the onMessage function for further processing.\n   *\n   * @param {String} data Response from the server.\n   * @api private\n   */\n\n  Transport.prototype.onData = function (data) {\n    this.clearCloseTimeout();\n\n    // If the connection in currently open (or in a reopening state) reset the close\n    // timeout since we have just received data. This check is necessary so\n    // that we don't reset the timeout on an explicitly disconnected connection.\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\n      this.setCloseTimeout();\n    }\n\n    if (data !== '') {\n      // todo: we should only do decodePayload for xhr transports\n      var msgs = io.parser.decodePayload(data);\n\n      if (msgs && msgs.length) {\n        for (var i = 0, l = msgs.length; i < l; i++) {\n          this.onPacket(msgs[i]);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Handles packets.\n   *\n   * @api private\n   */\n\n  Transport.prototype.onPacket = function (packet) {\n    this.socket.setHeartbeatTimeout();\n\n    if (packet.type == 'heartbeat') {\n      return this.onHeartbeat();\n    }\n\n    if (packet.type == 'connect' && packet.endpoint == '') {\n      this.onConnect();\n    }\n\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\n      this.isOpen = false;\n    }\n\n    this.socket.onPacket(packet);\n\n    return this;\n  };\n\n  /**\n   * Sets close timeout\n   *\n   * @api private\n   */\n\n  Transport.prototype.setCloseTimeout = function () {\n    if (!this.closeTimeout) {\n      var self = this;\n\n      this.closeTimeout = setTimeout(function () {\n        self.onDisconnect();\n      }, this.socket.closeTimeout);\n    }\n  };\n\n  /**\n   * Called when transport disconnects.\n   *\n   * @api private\n   */\n\n  Transport.prototype.onDisconnect = function () {\n    if (this.isOpen) this.close();\n    this.clearTimeouts();\n    this.socket.onDisconnect();\n    return this;\n  };\n\n  /**\n   * Called when transport connects\n   *\n   * @api private\n   */\n\n  Transport.prototype.onConnect = function () {\n    this.socket.onConnect();\n    return this;\n  };\n\n  /**\n   * Clears close timeout\n   *\n   * @api private\n   */\n\n  Transport.prototype.clearCloseTimeout = function () {\n    if (this.closeTimeout) {\n      clearTimeout(this.closeTimeout);\n      this.closeTimeout = null;\n    }\n  };\n\n  /**\n   * Clear timeouts\n   *\n   * @api private\n   */\n\n  Transport.prototype.clearTimeouts = function () {\n    this.clearCloseTimeout();\n\n    if (this.reopenTimeout) {\n      clearTimeout(this.reopenTimeout);\n    }\n  };\n\n  /**\n   * Sends a packet\n   *\n   * @param {Object} packet object.\n   * @api private\n   */\n\n  Transport.prototype.packet = function (packet) {\n    this.send(io.parser.encodePacket(packet));\n  };\n\n  /**\n   * Send the received heartbeat message back to server. So the server\n   * knows we are still connected.\n   *\n   * @param {String} heartbeat Heartbeat response from the server.\n   * @api private\n   */\n\n  Transport.prototype.onHeartbeat = function (heartbeat) {\n    this.packet({ type: 'heartbeat' });\n  };\n\n  /**\n   * Called when the transport opens.\n   *\n   * @api private\n   */\n\n  Transport.prototype.onOpen = function () {\n    this.isOpen = true;\n    this.clearCloseTimeout();\n    this.socket.onOpen();\n  };\n\n  /**\n   * Notifies the base when the connection with the Socket.IO server\n   * has been disconnected.\n   *\n   * @api private\n   */\n\n  Transport.prototype.onClose = function () {\n    var self = this;\n\n    /* FIXME: reopen delay causing a infinit loop\n    this.reopenTimeout = setTimeout(function () {\n      self.open();\n    }, this.socket.options['reopen delay']);*/\n\n    this.isOpen = false;\n    this.socket.onClose();\n    this.onDisconnect();\n  };\n\n  /**\n   * Generates a connection url based on the Socket.IO URL Protocol.\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\n   *\n   * @returns {String} Connection url\n   * @api private\n   */\n\n  Transport.prototype.prepareUrl = function () {\n    var options = this.socket.options;\n\n    return this.scheme() + '://'\n      + options.host + ':' + options.port + '/'\n      + options.resource + '/' + io.protocol\n      + '/' + this.name + '/' + this.sessid;\n  };\n\n  /**\n   * Checks if the transport is ready to start a connection.\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n  Transport.prototype.ready = function (socket, fn) {\n    fn.call(this);\n  };\n})(\n    'undefined' != typeof io ? io : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transport.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/flashsocket.js":
/*!*********************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/flashsocket.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.flashsocket = Flashsocket;\n\n  /**\n   * The FlashSocket transport. This is a API wrapper for the HTML5 WebSocket\n   * specification. It uses a .swf file to communicate with the server. If you want\n   * to serve the .swf file from a other server than where the Socket.IO script is\n   * coming from you need to use the insecure version of the .swf. More information\n   * about this can be found on the github page.\n   *\n   * @constructor\n   * @extends {io.Transport.websocket}\n   * @api public\n   */\n\n  function Flashsocket () {\n    io.Transport.websocket.apply(this, arguments);\n  };\n\n  /**\n   * Inherits from Transport.\n   */\n\n  io.util.inherit(Flashsocket, io.Transport.websocket);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  Flashsocket.prototype.name = 'flashsocket';\n\n  /**\n   * Disconnect the established `FlashSocket` connection. This is done by adding a \n   * new task to the FlashSocket. The rest will be handled off by the `WebSocket` \n   * transport.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  Flashsocket.prototype.open = function () {\n    var self = this\n      , args = arguments;\n\n    WebSocket.__addTask(function () {\n      io.Transport.websocket.prototype.open.apply(self, args);\n    });\n    return this;\n  };\n  \n  /**\n   * Sends a message to the Socket.IO server. This is done by adding a new\n   * task to the FlashSocket. The rest will be handled off by the `WebSocket` \n   * transport.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  Flashsocket.prototype.send = function () {\n    var self = this, args = arguments;\n    WebSocket.__addTask(function () {\n      io.Transport.websocket.prototype.send.apply(self, args);\n    });\n    return this;\n  };\n\n  /**\n   * Disconnects the established `FlashSocket` connection.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  Flashsocket.prototype.close = function () {\n    WebSocket.__tasks.length = 0;\n    io.Transport.websocket.prototype.close.call(this);\n    return this;\n  };\n\n  /**\n   * The WebSocket fall back needs to append the flash container to the body\n   * element, so we need to make sure we have access to it. Or defer the call\n   * until we are sure there is a body element.\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n  Flashsocket.prototype.ready = function (socket, fn) {\n    function init () {\n      var options = socket.options\n        , port = options['flash policy port']\n        , path = [\n              'http' + (options.secure ? 's' : '') + ':/'\n            , options.host + ':' + options.port\n            , options.resource\n            , 'static/flashsocket'\n            , 'WebSocketMain' + (socket.isXDomain() ? 'Insecure' : '') + '.swf'\n          ];\n\n      // Only start downloading the swf file when the checked that this browser\n      // actually supports it\n      if (!Flashsocket.loaded) {\n        if (typeof WEB_SOCKET_SWF_LOCATION === 'undefined') {\n          // Set the correct file based on the XDomain settings\n          WEB_SOCKET_SWF_LOCATION = path.join('/');\n        }\n\n        if (port !== 843) {\n          WebSocket.loadFlashPolicyFile('xmlsocket://' + options.host + ':' + port);\n        }\n\n        WebSocket.__initialize();\n        Flashsocket.loaded = true;\n      }\n\n      fn.call(self);\n    }\n\n    var self = this;\n    if (document.body) return init();\n\n    io.util.load(init);\n  };\n\n  /**\n   * Check if the FlashSocket transport is supported as it requires that the Adobe\n   * Flash Player plug-in version `10.0.0` or greater is installed. And also check if\n   * the polyfill is correctly loaded.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  Flashsocket.check = function () {\n    if (\n        typeof WebSocket == 'undefined'\n      || !('__initialize' in WebSocket) || !swfobject\n    ) return false;\n\n    return swfobject.getFlashPlayerVersion().major >= 10;\n  };\n\n  /**\n   * Check if the FlashSocket transport can be used as cross domain / cross origin \n   * transport. Because we can't see which type (secure or insecure) of .swf is used\n   * we will just return true.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  Flashsocket.xdomainCheck = function () {\n    return true;\n  };\n\n  /**\n   * Disable AUTO_INITIALIZATION\n   */\n\n  if (typeof window != 'undefined') {\n    WEB_SOCKET_DISABLE_AUTO_INITIALIZATION = true;\n  }\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('flashsocket');\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/flashsocket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/htmlfile.js":
/*!******************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/htmlfile.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.htmlfile = HTMLFile;\n\n  /**\n   * The HTMLFile transport creates a `forever iframe` based transport\n   * for Internet Explorer. Regular forever iframe implementations will \n   * continuously trigger the browsers buzy indicators. If the forever iframe\n   * is created inside a `htmlfile` these indicators will not be trigged.\n   *\n   * @constructor\n   * @extends {io.Transport.XHR}\n   * @api public\n   */\n\n  function HTMLFile (socket) {\n    io.Transport.XHR.apply(this, arguments);\n  };\n\n  /**\n   * Inherits from XHR transport.\n   */\n\n  io.util.inherit(HTMLFile, io.Transport.XHR);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  HTMLFile.prototype.name = 'htmlfile';\n\n  /**\n   * Creates a new ActiveX `htmlfile` with a forever loading iframe\n   * that can be used to listen to messages. Inside the generated\n   * `htmlfile` a reference will be made to the HTMLFile transport.\n   *\n   * @api private\n   */\n\n  HTMLFile.prototype.get = function () {\n    this.doc = new ActiveXObject('htmlfile');\n    this.doc.open();\n    this.doc.write('<html></html>');\n    this.doc.close();\n    this.doc.parentWindow.s = this;\n\n    var iframeC = this.doc.createElement('div');\n    iframeC.className = 'socketio';\n\n    this.doc.body.appendChild(iframeC);\n    this.iframe = this.doc.createElement('iframe');\n\n    iframeC.appendChild(this.iframe);\n\n    var self = this\n      , query = io.util.query(this.socket.options.query, 't='+ +new Date);\n\n    this.iframe.src = this.prepareUrl() + query;\n\n    io.util.on(window, 'unload', function () {\n      self.destroy();\n    });\n  };\n\n  /**\n   * The Socket.IO server will write script tags inside the forever\n   * iframe, this function will be used as callback for the incoming\n   * information.\n   *\n   * @param {String} data The message\n   * @param {document} doc Reference to the context\n   * @api private\n   */\n\n  HTMLFile.prototype._ = function (data, doc) {\n    // unescape all forward slashes. see GH-1251\n    data = data.replace(/\\\\\\//g, '/');\n    this.onData(data);\n    try {\n      var script = doc.getElementsByTagName('script')[0];\n      script.parentNode.removeChild(script);\n    } catch (e) { }\n  };\n\n  /**\n   * Destroy the established connection, iframe and `htmlfile`.\n   * And calls the `CollectGarbage` function of Internet Explorer\n   * to release the memory.\n   *\n   * @api private\n   */\n\n  HTMLFile.prototype.destroy = function () {\n    if (this.iframe){\n      try {\n        this.iframe.src = 'about:blank';\n      } catch(e){}\n\n      this.doc = null;\n      this.iframe.parentNode.removeChild(this.iframe);\n      this.iframe = null;\n\n      CollectGarbage();\n    }\n  };\n\n  /**\n   * Disconnects the established connection.\n   *\n   * @returns {Transport} Chaining.\n   * @api public\n   */\n\n  HTMLFile.prototype.close = function () {\n    this.destroy();\n    return io.Transport.XHR.prototype.close.call(this);\n  };\n\n  /**\n   * Checks if the browser supports this transport. The browser\n   * must have an `ActiveXObject` implementation.\n   *\n   * @return {Boolean}\n   * @api public\n   */\n\n  HTMLFile.check = function (socket) {\n    if (typeof window != \"undefined\" && 'ActiveXObject' in window){\n      try {\n        var a = new ActiveXObject('htmlfile');\n        return a && io.Transport.XHR.check(socket);\n      } catch(e){}\n    }\n    return false;\n  };\n\n  /**\n   * Check if cross domain requests are supported.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  HTMLFile.xdomainCheck = function () {\n    // we can probably do handling for sub-domains, we should\n    // test that it's cross domain but a subdomain here\n    return false;\n  };\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('htmlfile');\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/htmlfile.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/jsonp-polling.js":
/*!***********************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/jsonp-polling.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n  /**\n   * There is a way to hide the loading indicator in Firefox. If you create and\n   * remove a iframe it will stop showing the current loading indicator.\n   * Unfortunately we can't feature detect that and UA sniffing is evil.\n   *\n   * @api private\n   */\n\n  var indicator = global.document && \"MozAppearance\" in\n    global.document.documentElement.style;\n\n  /**\n   * Expose constructor.\n   */\n\n  exports['jsonp-polling'] = JSONPPolling;\n\n  /**\n   * The JSONP transport creates an persistent connection by dynamically\n   * inserting a script tag in the page. This script tag will receive the\n   * information of the Socket.IO server. When new information is received\n   * it creates a new script tag for the new data stream.\n   *\n   * @constructor\n   * @extends {io.Transport.xhr-polling}\n   * @api public\n   */\n\n  function JSONPPolling (socket) {\n    io.Transport['xhr-polling'].apply(this, arguments);\n\n    this.index = io.j.length;\n\n    var self = this;\n\n    io.j.push(function (msg) {\n      self._(msg);\n    });\n  };\n\n  /**\n   * Inherits from XHR polling transport.\n   */\n\n  io.util.inherit(JSONPPolling, io.Transport['xhr-polling']);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  JSONPPolling.prototype.name = 'jsonp-polling';\n\n  /**\n   * Posts a encoded message to the Socket.IO server using an iframe.\n   * The iframe is used because script tags can create POST based requests.\n   * The iframe is positioned outside of the view so the user does not\n   * notice it's existence.\n   *\n   * @param {String} data A encoded message.\n   * @api private\n   */\n\n  JSONPPolling.prototype.post = function (data) {\n    var self = this\n      , query = io.util.query(\n             this.socket.options.query\n          , 't='+ (+new Date) + '&i=' + this.index\n        );\n\n    if (!this.form) {\n      var form = document.createElement('form')\n        , area = document.createElement('textarea')\n        , id = this.iframeId = 'socketio_iframe_' + this.index\n        , iframe;\n\n      form.className = 'socketio';\n      form.style.position = 'absolute';\n      form.style.top = '0px';\n      form.style.left = '0px';\n      form.style.display = 'none';\n      form.target = id;\n      form.method = 'POST';\n      form.setAttribute('accept-charset', 'utf-8');\n      area.name = 'd';\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.prepareUrl() + query;\n\n    function complete () {\n      initIframe();\n      self.socket.setBuffer(false);\n    };\n\n    function initIframe () {\n      if (self.iframe) {\n        self.form.removeChild(self.iframe);\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        iframe = document.createElement('<iframe name=\"'+ self.iframeId +'\">');\n      } catch (e) {\n        iframe = document.createElement('iframe');\n        iframe.name = self.iframeId;\n      }\n\n      iframe.id = self.iframeId;\n\n      self.form.appendChild(iframe);\n      self.iframe = iframe;\n    };\n\n    initIframe();\n\n    // we temporarily stringify until we figure out how to prevent\n    // browsers from turning `\\n` into `\\r\\n` in form inputs\n    this.area.value = io.JSON.stringify(data);\n\n    try {\n      this.form.submit();\n    } catch(e) {}\n\n    if (this.iframe.attachEvent) {\n      iframe.onreadystatechange = function () {\n        if (self.iframe.readyState == 'complete') {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n\n    this.socket.setBuffer(true);\n  };\n\n  /**\n   * Creates a new JSONP poll that can be used to listen\n   * for messages from the Socket.IO server.\n   *\n   * @api private\n   */\n\n  JSONPPolling.prototype.get = function () {\n    var self = this\n      , script = document.createElement('script')\n      , query = io.util.query(\n             this.socket.options.query\n          , 't='+ (+new Date) + '&i=' + this.index\n        );\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.prepareUrl() + query;\n    script.onerror = function () {\n      self.onClose();\n    };\n\n    var insertAt = document.getElementsByTagName('script')[0];\n    insertAt.parentNode.insertBefore(script, insertAt);\n    this.script = script;\n\n    if (indicator) {\n      setTimeout(function () {\n        var iframe = document.createElement('iframe');\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  };\n\n  /**\n   * Callback function for the incoming message stream from the Socket.IO server.\n   *\n   * @param {String} data The message\n   * @api private\n   */\n\n  JSONPPolling.prototype._ = function (msg) {\n    this.onData(msg);\n    if (this.isOpen) {\n      this.get();\n    }\n    return this;\n  };\n\n  /**\n   * The indicator hack only works after onload\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n  JSONPPolling.prototype.ready = function (socket, fn) {\n    var self = this;\n    if (!indicator) return fn.call(this);\n\n    io.util.load(function () {\n      fn.call(self);\n    });\n  };\n\n  /**\n   * Checks if browser supports this transport.\n   *\n   * @return {Boolean}\n   * @api public\n   */\n\n  JSONPPolling.check = function () {\n    return 'document' in global;\n  };\n\n  /**\n   * Check if cross domain requests are supported\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  JSONPPolling.xdomainCheck = function () {\n    return true;\n  };\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('jsonp-polling');\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/jsonp-polling.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/websocket.js":
/*!*******************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/websocket.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports.websocket = WS;\n\n  /**\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\n   * persistent connection with the Socket.IO server. This transport will also\n   * be inherited by the FlashSocket fallback as it provides a API compatible\n   * polyfill for the WebSockets.\n   *\n   * @constructor\n   * @extends {io.Transport}\n   * @api public\n   */\n\n  function WS (socket) {\n    io.Transport.apply(this, arguments);\n  };\n\n  /**\n   * Inherits from Transport.\n   */\n\n  io.util.inherit(WS, io.Transport);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  WS.prototype.name = 'websocket';\n\n  /**\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\n   * all the appropriate listeners to handle the responses from the server.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  WS.prototype.open = function () {\n    var query = io.util.query(this.socket.options.query)\n      , self = this\n      , Socket\n\n    // if node\n    Socket = __webpack_require__(/*! ws */ \"./node_modules/socket.io-client/node_modules/ws/lib/browser.js\");\n    // end node\n\n    if (!Socket) {\n      Socket = global.MozWebSocket || global.WebSocket;\n    }\n\n    this.websocket = new Socket(this.prepareUrl() + query);\n\n    this.websocket.onopen = function () {\n      self.onOpen();\n      self.socket.setBuffer(false);\n    };\n    this.websocket.onmessage = function (ev) {\n      self.onData(ev.data);\n    };\n    this.websocket.onclose = function () {\n      self.onClose();\n      self.socket.setBuffer(true);\n    };\n    this.websocket.onerror = function (e) {\n      self.onError(e);\n    };\n\n    return this;\n  };\n\n  /**\n   * Send a message to the Socket.IO server. The message will automatically be\n   * encoded in the correct message format.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  // Do to a bug in the current IDevices browser, we need to wrap the send in a \n  // setTimeout, when they resume from sleeping the browser will crash if \n  // we don't allow the browser time to detect the socket has been closed\n  if (io.util.ua.iDevice) {\n    WS.prototype.send = function (data) {\n      var self = this;\n      setTimeout(function() {\n         self.websocket.send(data);\n      },0);\n      return this;\n    };\n  } else {\n    WS.prototype.send = function (data) {\n      this.websocket.send(data);\n      return this;\n    };\n  }\n\n  /**\n   * Payload\n   *\n   * @api private\n   */\n\n  WS.prototype.payload = function (arr) {\n    for (var i = 0, l = arr.length; i < l; i++) {\n      this.packet(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Disconnect the established `WebSocket` connection.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  WS.prototype.close = function () {\n    this.websocket.close();\n    return this;\n  };\n\n  /**\n   * Handle the errors that `WebSocket` might be giving when we\n   * are attempting to connect or send messages.\n   *\n   * @param {Error} e The error.\n   * @api private\n   */\n\n  WS.prototype.onError = function (e) {\n    this.socket.onError(e);\n  };\n\n  /**\n   * Returns the appropriate scheme for the URI generation.\n   *\n   * @api private\n   */\n  WS.prototype.scheme = function () {\n    return this.socket.options.secure ? 'wss' : 'ws';\n  };\n\n  /**\n   * Checks if the browser has support for native `WebSockets` and that\n   * it's not the polyfill created for the FlashSocket transport.\n   *\n   * @return {Boolean}\n   * @api public\n   */\n\n  WS.check = function () {\n    // if node\n    return true;\n    // end node\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\n          || 'MozWebSocket' in global;\n  };\n\n  /**\n   * Check if the `WebSocket` transport support cross domain communications.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  WS.xdomainCheck = function () {\n    return true;\n  };\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('websocket');\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/websocket.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/xhr-polling.js":
/*!*********************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/xhr-polling.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n\n  /**\n   * Expose constructor.\n   */\n\n  exports['xhr-polling'] = XHRPolling;\n\n  /**\n   * The XHR-polling transport uses long polling XHR requests to create a\n   * \"persistent\" connection with the server.\n   *\n   * @constructor\n   * @api public\n   */\n\n  function XHRPolling () {\n    io.Transport.XHR.apply(this, arguments);\n  };\n\n  /**\n   * Inherits from XHR transport.\n   */\n\n  io.util.inherit(XHRPolling, io.Transport.XHR);\n\n  /**\n   * Merge the properties from XHR transport\n   */\n\n  io.util.merge(XHRPolling, io.Transport.XHR);\n\n  /**\n   * Transport name\n   *\n   * @api public\n   */\n\n  XHRPolling.prototype.name = 'xhr-polling';\n\n  /**\n   * Indicates whether heartbeats is enabled for this transport\n   *\n   * @api private\n   */\n\n  XHRPolling.prototype.heartbeats = function () {\n    return false;\n  };\n\n  /** \n   * Establish a connection, for iPhone and Android this will be done once the page\n   * is loaded.\n   *\n   * @returns {Transport} Chaining.\n   * @api public\n   */\n\n  XHRPolling.prototype.open = function () {\n    var self = this;\n\n    io.Transport.XHR.prototype.open.call(self);\n    return false;\n  };\n\n  /**\n   * Starts a XHR request to wait for incoming messages.\n   *\n   * @api private\n   */\n\n  function empty () {};\n\n  XHRPolling.prototype.get = function () {\n    if (!this.isOpen) return;\n\n    var self = this;\n\n    function stateChange () {\n      if (this.readyState == 4) {\n        this.onreadystatechange = empty;\n\n        if (this.status == 200) {\n          self.onData(this.responseText);\n          self.get();\n        } else {\n          self.onClose();\n        }\n      }\n    };\n\n    function onload () {\n      this.onload = empty;\n      this.onerror = empty;\n      self.retryCounter = 1;\n      self.onData(this.responseText);\n      self.get();\n    };\n\n    function onerror () {\n      self.retryCounter ++;\n      if(!self.retryCounter || self.retryCounter > 3) {\n        self.onClose();  \n      } else {\n        self.get();\n      }\n    };\n\n    this.xhr = this.request();\n\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\n      this.xhr.onload = onload;\n      this.xhr.onerror = onerror;\n    } else {\n      this.xhr.onreadystatechange = stateChange;\n    }\n\n    this.xhr.send(null);\n  };\n\n  /**\n   * Handle the unclean close behavior.\n   *\n   * @api private\n   */\n\n  XHRPolling.prototype.onClose = function () {\n    io.Transport.XHR.prototype.onClose.call(this);\n\n    if (this.xhr) {\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\n      try {\n        this.xhr.abort();\n      } catch(e){}\n      this.xhr = null;\n    }\n  };\n\n  /**\n   * Webkit based browsers show a infinit spinner when you start a XHR request\n   * before the browsers onload event is called so we need to defer opening of\n   * the transport until the onload event is called. Wrapping the cb in our\n   * defer method solve this.\n   *\n   * @param {Socket} socket The socket instance that needs a transport\n   * @param {Function} fn The callback\n   * @api private\n   */\n\n  XHRPolling.prototype.ready = function (socket, fn) {\n    var self = this;\n\n    io.util.defer(function () {\n      fn.call(self);\n    });\n  };\n\n  /**\n   * Add the transport to your public io.transports array.\n   *\n   * @api private\n   */\n\n  io.transports.push('xhr-polling');\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/xhr-polling.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports/xhr.js":
/*!*************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/xhr.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n\n/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, io, global) {\n\n  /**\n   * Expose constructor.\n   *\n   * @api public\n   */\n\n  exports.XHR = XHR;\n\n  /**\n   * XHR constructor\n   *\n   * @costructor\n   * @api public\n   */\n\n  function XHR (socket) {\n    if (!socket) return;\n\n    io.Transport.apply(this, arguments);\n    this.sendBuffer = [];\n  };\n\n  /**\n   * Inherits from Transport.\n   */\n\n  io.util.inherit(XHR, io.Transport);\n\n  /**\n   * Establish a connection\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  XHR.prototype.open = function () {\n    this.socket.setBuffer(false);\n    this.onOpen();\n    this.get();\n\n    // we need to make sure the request succeeds since we have no indication\n    // whether the request opened or not until it succeeded.\n    this.setCloseTimeout();\n\n    return this;\n  };\n\n  /**\n   * Check if we need to send data to the Socket.IO server, if we have data in our\n   * buffer we encode it and forward it to the `post` method.\n   *\n   * @api private\n   */\n\n  XHR.prototype.payload = function (payload) {\n    var msgs = [];\n\n    for (var i = 0, l = payload.length; i < l; i++) {\n      msgs.push(io.parser.encodePacket(payload[i]));\n    }\n\n    this.send(io.parser.encodePayload(msgs));\n  };\n\n  /**\n   * Send data to the Socket.IO server.\n   *\n   * @param data The message\n   * @returns {Transport}\n   * @api public\n   */\n\n  XHR.prototype.send = function (data) {\n    this.post(data);\n    return this;\n  };\n\n  /**\n   * Posts a encoded message to the Socket.IO server.\n   *\n   * @param {String} data A encoded message.\n   * @api private\n   */\n\n  function empty () { };\n\n  XHR.prototype.post = function (data) {\n    var self = this;\n    this.socket.setBuffer(true);\n\n    function stateChange () {\n      if (this.readyState == 4) {\n        this.onreadystatechange = empty;\n        self.posting = false;\n\n        if (this.status == 200){\n          self.socket.setBuffer(false);\n        } else {\n          self.onClose();\n        }\n      }\n    }\n\n    function onload () {\n      this.onload = empty;\n      self.socket.setBuffer(false);\n    };\n\n    this.sendXHR = this.request('POST');\n\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\n    } else {\n      this.sendXHR.onreadystatechange = stateChange;\n    }\n\n    this.sendXHR.send(data);\n  };\n\n  /**\n   * Disconnects the established `XHR` connection.\n   *\n   * @returns {Transport}\n   * @api public\n   */\n\n  XHR.prototype.close = function () {\n    this.onClose();\n    return this;\n  };\n\n  /**\n   * Generates a configured XHR request\n   *\n   * @param {String} url The url that needs to be requested.\n   * @param {String} method The method the request should use.\n   * @returns {XMLHttpRequest}\n   * @api private\n   */\n\n  XHR.prototype.request = function (method) {\n    var req = io.util.request(this.socket.isXDomain())\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\n\n    req.open(method || 'GET', this.prepareUrl() + query, true);\n\n    if (method == 'POST') {\n      try {\n        if (req.setRequestHeader) {\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        } else {\n          // XDomainRequest\n          req.contentType = 'text/plain';\n        }\n      } catch (e) {}\n    }\n\n    return req;\n  };\n\n  /**\n   * Returns the scheme to use for the transport URLs.\n   *\n   * @api private\n   */\n\n  XHR.prototype.scheme = function () {\n    return this.socket.options.secure ? 'https' : 'http';\n  };\n\n  /**\n   * Check if the XHR transports are supported\n   *\n   * @param {Boolean} xdomain Check if we support cross domain requests.\n   * @returns {Boolean}\n   * @api public\n   */\n\n  XHR.check = function (socket, xdomain) {\n    try {\n      var request = io.util.request(xdomain),\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\n          isXProtocol = (global.location && socketProtocol != global.location.protocol);\n      if (request && !(usesXDomReq && isXProtocol)) {\n        return true;\n      }\n    } catch(e) {}\n\n    return false;\n  };\n\n  /**\n   * Check if the XHR transport supports cross domain requests.\n   *\n   * @returns {Boolean}\n   * @api public\n   */\n\n  XHR.xdomainCheck = function (socket) {\n    return XHR.check(socket, true);\n  };\n\n})(\n    'undefined' != typeof io ? io.Transport : module.exports\n  , 'undefined' != typeof io ? io : module.parent.exports\n  , this\n);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/xhr.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/transports sync recursive ^\\.\\/.*$":
/*!*********************************************************************!*\
  !*** ./node_modules/socket.io-client/lib/transports/ sync ^\.\/.*$ ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./flashsocket\": \"./node_modules/socket.io-client/lib/transports/flashsocket.js\",\n\t\"./flashsocket.js\": \"./node_modules/socket.io-client/lib/transports/flashsocket.js\",\n\t\"./htmlfile\": \"./node_modules/socket.io-client/lib/transports/htmlfile.js\",\n\t\"./htmlfile.js\": \"./node_modules/socket.io-client/lib/transports/htmlfile.js\",\n\t\"./jsonp-polling\": \"./node_modules/socket.io-client/lib/transports/jsonp-polling.js\",\n\t\"./jsonp-polling.js\": \"./node_modules/socket.io-client/lib/transports/jsonp-polling.js\",\n\t\"./websocket\": \"./node_modules/socket.io-client/lib/transports/websocket.js\",\n\t\"./websocket.js\": \"./node_modules/socket.io-client/lib/transports/websocket.js\",\n\t\"./xhr\": \"./node_modules/socket.io-client/lib/transports/xhr.js\",\n\t\"./xhr-polling\": \"./node_modules/socket.io-client/lib/transports/xhr-polling.js\",\n\t\"./xhr-polling.js\": \"./node_modules/socket.io-client/lib/transports/xhr-polling.js\",\n\t\"./xhr.js\": \"./node_modules/socket.io-client/lib/transports/xhr.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/socket.io-client/lib/transports sync recursive ^\\\\.\\\\/.*$\";\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/transports/_sync_^\\.\\/.*$?");

/***/ }),

/***/ "./node_modules/socket.io-client/lib/util.js":
/*!***************************************************!*\
  !*** ./node_modules/socket.io-client/lib/util.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/**\n * socket.io\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\n * MIT Licensed\n */\n\n(function (exports, global) {\n\n  /**\n   * Utilities namespace.\n   *\n   * @namespace\n   */\n\n  var util = exports.util = {};\n\n  /**\n   * Parses an URI\n   *\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\n   * @api public\n   */\n\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\n               'anchor'];\n\n  util.parseUri = function (str) {\n    var m = re.exec(str || '')\n      , uri = {}\n      , i = 14;\n\n    while (i--) {\n      uri[parts[i]] = m[i] || '';\n    }\n\n    return uri;\n  };\n\n  /**\n   * Produces a unique url that identifies a Socket.IO connection.\n   *\n   * @param {Object} uri\n   * @api public\n   */\n\n  util.uniqueUri = function (uri) {\n    var protocol = uri.protocol\n      , host = uri.host\n      , port = uri.port;\n\n    if ('document' in global) {\n      host = host || document.domain;\n      port = port || (protocol == 'https'\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\n    } else {\n      host = host || 'localhost';\n\n      if (!port && protocol == 'https') {\n        port = 443;\n      }\n    }\n\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\n  };\n\n  /**\n   * Mergest 2 query strings in to once unique query string\n   *\n   * @param {String} base\n   * @param {String} addition\n   * @api public\n   */\n\n  util.query = function (base, addition) {\n    var query = util.chunkQuery(base || '')\n      , components = [];\n\n    util.merge(query, util.chunkQuery(addition || ''));\n    for (var part in query) {\n      if (query.hasOwnProperty(part)) {\n        components.push(part + '=' + query[part]);\n      }\n    }\n\n    return components.length ? '?' + components.join('&') : '';\n  };\n\n  /**\n   * Transforms a querystring in to an object\n   *\n   * @param {String} qs\n   * @api public\n   */\n\n  util.chunkQuery = function (qs) {\n    var query = {}\n      , params = qs.split('&')\n      , i = 0\n      , l = params.length\n      , kv;\n\n    for (; i < l; ++i) {\n      kv = params[i].split('=');\n      if (kv[0]) {\n        query[kv[0]] = kv[1];\n      }\n    }\n\n    return query;\n  };\n\n  /**\n   * Executes the given function when the page is loaded.\n   *\n   *     io.util.load(function () { console.log('page loaded'); });\n   *\n   * @param {Function} fn\n   * @api public\n   */\n\n  var pageLoaded = false;\n\n  util.load = function (fn) {\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\n      return fn();\n    }\n\n    util.on(global, 'load', fn, false);\n  };\n\n  /**\n   * Adds an event.\n   *\n   * @api private\n   */\n\n  util.on = function (element, event, fn, capture) {\n    if (element.attachEvent) {\n      element.attachEvent('on' + event, fn);\n    } else if (element.addEventListener) {\n      element.addEventListener(event, fn, capture);\n    }\n  };\n\n  /**\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\n   *\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\n   * @api private\n   */\n\n  util.request = function (xdomain) {\n    // if node\n    var XMLHttpRequest = (__webpack_require__(/*! xmlhttprequest */ \"./node_modules/xmlhttprequest/lib/XMLHttpRequest.js\").XMLHttpRequest);\n    return new XMLHttpRequest();\n    // end node\n\n    if (xdomain && 'undefined' != typeof XDomainRequest && !util.ua.hasCORS) {\n      return new XDomainRequest();\n    }\n\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\n      return new XMLHttpRequest();\n    }\n\n    if (!xdomain) {\n      try {\n        return new ActiveXObject('Microsoft.XMLHTTP');\n      } catch(e) { }\n    }\n\n    return null;\n  };\n\n  /**\n   * XHR based transport constructor.\n   *\n   * @constructor\n   * @api public\n   */\n\n  /**\n   * Change the internal pageLoaded value.\n   */\n\n  if ('undefined' != typeof window) {\n    util.load(function () {\n      pageLoaded = true;\n    });\n  }\n\n  /**\n   * Defers a function to ensure a spinner is not displayed by the browser\n   *\n   * @param {Function} fn\n   * @api public\n   */\n\n  util.defer = function (fn) {\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\n      return fn();\n    }\n\n    util.load(function () {\n      setTimeout(fn, 100);\n    });\n  };\n\n  /**\n   * Merges two objects.\n   *\n   * @api public\n   */\n\n  util.merge = function merge (target, additional, deep, lastseen) {\n    var seen = lastseen || []\n      , depth = typeof deep == 'undefined' ? 2 : deep\n      , prop;\n\n    for (prop in additional) {\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\n        if (typeof target[prop] !== 'object' || !depth) {\n          target[prop] = additional[prop];\n          seen.push(additional[prop]);\n        } else {\n          util.merge(target[prop], additional[prop], depth - 1, seen);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Merges prototypes from objects\n   *\n   * @api public\n   */\n\n  util.mixin = function (ctor, ctor2) {\n    util.merge(ctor.prototype, ctor2.prototype);\n  };\n\n  /**\n   * Shortcut for prototypical and static inheritance.\n   *\n   * @api private\n   */\n\n  util.inherit = function (ctor, ctor2) {\n    function f() {};\n    f.prototype = ctor2.prototype;\n    ctor.prototype = new f;\n  };\n\n  /**\n   * Checks if the given object is an Array.\n   *\n   *     io.util.isArray([]); // true\n   *     io.util.isArray({}); // false\n   *\n   * @param Object obj\n   * @api public\n   */\n\n  util.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n  };\n\n  /**\n   * Intersects values of two arrays into a third\n   *\n   * @api public\n   */\n\n  util.intersect = function (arr, arr2) {\n    var ret = []\n      , longest = arr.length > arr2.length ? arr : arr2\n      , shortest = arr.length > arr2.length ? arr2 : arr;\n\n    for (var i = 0, l = shortest.length; i < l; i++) {\n      if (~util.indexOf(longest, shortest[i]))\n        ret.push(shortest[i]);\n    }\n\n    return ret;\n  };\n\n  /**\n   * Array indexOf compatibility.\n   *\n   * @see bit.ly/a5Dxa2\n   * @api public\n   */\n\n  util.indexOf = function (arr, o, i) {\n\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0;\n         i < j && arr[i] !== o; i++) {}\n\n    return j <= i ? -1 : i;\n  };\n\n  /**\n   * Converts enumerables to array.\n   *\n   * @api public\n   */\n\n  util.toArray = function (enu) {\n    var arr = [];\n\n    for (var i = 0, l = enu.length; i < l; i++)\n      arr.push(enu[i]);\n\n    return arr;\n  };\n\n  /**\n   * UA / engines detection namespace.\n   *\n   * @namespace\n   */\n\n  util.ua = {};\n\n  /**\n   * Whether the UA supports CORS for XHR.\n   *\n   * @api public\n   */\n\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\n    try {\n      var a = new XMLHttpRequest();\n    } catch (e) {\n      return false;\n    }\n\n    return a.withCredentials != undefined;\n  })();\n\n  /**\n   * Detect webkit.\n   *\n   * @api public\n   */\n\n  util.ua.webkit = 'undefined' != typeof navigator\n    && /webkit/i.test(navigator.userAgent);\n\n   /**\n   * Detect iPad/iPhone/iPod.\n   *\n   * @api public\n   */\n\n  util.ua.iDevice = 'undefined' != typeof navigator\n      && /iPad|iPhone|iPod/i.test(navigator.userAgent);\n\n})('undefined' != typeof io ? io : module.exports, this);\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/lib/util.js?");

/***/ }),

/***/ "./node_modules/socket.io-client/node_modules/ws/lib/browser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/socket.io-client/node_modules/ws/lib/browser.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/socket.io-client/node_modules/ws/lib/browser.js?");

/***/ }),

/***/ "./node_modules/stream-http/index.js":
/*!*******************************************!*\
  !*** ./node_modules/stream-http/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var ClientRequest = __webpack_require__(/*! ./lib/request */ \"./node_modules/stream-http/lib/request.js\")\nvar response = __webpack_require__(/*! ./lib/response */ \"./node_modules/stream-http/lib/response.js\")\nvar extend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\")\nvar statusCodes = __webpack_require__(/*! builtin-status-codes */ \"./node_modules/builtin-status-codes/browser.js\")\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = __webpack_require__.g.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/index.js?");

/***/ }),

/***/ "./node_modules/stream-http/lib/capability.js":
/*!****************************************************!*\
  !*** ./node_modules/stream-http/lib/capability.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.fetch = isFunction(__webpack_require__.g.fetch) && isFunction(__webpack_require__.g.ReadableStream)\n\nexports.writableStream = isFunction(__webpack_require__.g.WritableStream)\n\nexports.abortController = isFunction(__webpack_require__.g.AbortController)\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (__webpack_require__.g.XMLHttpRequest) {\n\t\txhr = new __webpack_require__.g.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', __webpack_require__.g.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || checkTypeSupport('arraybuffer')\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && checkTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/lib/capability.js?");

/***/ }),

/***/ "./node_modules/stream-http/lib/request.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-http/lib/request.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar response = __webpack_require__(/*! ./response */ \"./node_modules/stream-http/lib/response.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\")\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + Buffer.from(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\tself._socketTimeout = null\n\tself._socketTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tif ('timeout' in opts && opts.timeout !== 0) {\n\t\tself.setTimeout(opts.timeout)\n\t}\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n        body = new Blob(self._body, {\n            type: (headersObj['content-type'] || {}).value || ''\n        });\n    }\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = __webpack_require__.g.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\t__webpack_require__.g.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._resetTimers(false)\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself._resetTimers(true)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new __webpack_require__.g.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself._resetTimers(true)\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tself._resetTimers(false)\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress(self._resetTimers.bind(self))\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._resetTimers.bind(self))\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype._resetTimers = function (done) {\n\tvar self = this\n\n\t__webpack_require__.g.clearTimeout(self._socketTimer)\n\tself._socketTimer = null\n\n\tif (done) {\n\t\t__webpack_require__.g.clearTimeout(self._fetchTimer)\n\t\tself._fetchTimer = null\n\t} else if (self._socketTimeout) {\n\t\tself._socketTimer = __webpack_require__.g.setTimeout(function () {\n\t\t\tself.emit('timeout')\n\t\t}, self._socketTimeout)\n\t}\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function (err) {\n\tvar self = this\n\tself._destroyed = true\n\tself._resetTimers(true)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n\n\tif (err)\n\t\tself.emit('error', err)\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.setTimeout = function (timeout, cb) {\n\tvar self = this\n\n\tif (cb)\n\t\tself.once('timeout', cb)\n\n\tself._socketTimeout = timeout\n\tself._resetTimers(false)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/lib/request.js?");

/***/ }),

/***/ "./node_modules/stream-http/lib/response.js":
/*!**************************************************!*\
  !*** ./node_modules/stream-http/lib/response.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var capability = __webpack_require__(/*! ./capability */ \"./node_modules/stream-http/lib/capability.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"./node_modules/stream-http/node_modules/readable-stream/readable-browser.js\")\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, resetTimers) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\tresetTimers(false)\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(Buffer.from(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tresetTimers(true)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tresetTimers(result.done)\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(Buffer.from(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tresetTimers(true)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function (resetTimers) {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text':\n\t\t\tresponse = xhr.responseText\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = Buffer.alloc(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(Buffer.from(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new __webpack_require__.g.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(Buffer.from(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tresetTimers(true)\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tresetTimers(true)\n\t\tself.push(null)\n\t}\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/lib/response.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/errors-browser.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/errors-browser.js ***!
  \*********************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/errors-browser.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = __webpack_require__(/*! ./_stream_readable */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\");\nvar Writable = __webpack_require__(/*! ./_stream_writable */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n\n\nmodule.exports = PassThrough;\nvar Transform = __webpack_require__(/*! ./_stream_transform */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = (__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter);\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = __webpack_require__(/*! util */ \"?aeb7\");\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = __webpack_require__(/*! ./internal/streams/buffer_list */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js\");\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = (__webpack_require__(/*! string_decoder/ */ \"./node_modules/string_decoder/lib/string_decoder.js\").StringDecoder);\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = __webpack_require__(/*! ./internal/streams/async_iterator */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js\");\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = __webpack_require__(/*! ./internal/streams/from */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js\");\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\n\nmodule.exports = Transform;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: __webpack_require__(/*! util-deprecate */ \"./node_modules/util-deprecate/browser.js\")\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = __webpack_require__(/*! ./internal/streams/stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js\");\n/*</replacement>*/\n\nvar Buffer = (__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\").Buffer);\nvar OurUint8Array = (typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js\");\nvar _require = __webpack_require__(/*! ./internal/streams/state */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js\"),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = (__webpack_require__(/*! ../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n__webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\")(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/async_iterator.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\"),\n  Buffer = _require.Buffer;\nvar _require2 = __webpack_require__(/*! util */ \"?0cc0\"),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/buffer_list.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar ERR_STREAM_PREMATURE_CLOSE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes).ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js ***!
  \****************************************************************************************************/
/***/ ((module) => {

eval("module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/from-browser.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = (__webpack_require__(/*! ../../../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes),\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = __webpack_require__(/*! ./end-of-stream */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar ERR_INVALID_OPT_VALUE = (__webpack_require__(/*! ../../../errors */ \"./node_modules/stream-http/node_modules/readable-stream/errors-browser.js\").codes).ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/state.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js?");

/***/ }),

/***/ "./node_modules/stream-http/node_modules/readable-stream/readable-browser.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/stream-http/node_modules/readable-stream/readable-browser.js ***!
  \***********************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js\");\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js\");\nexports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js\");\nexports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js\");\nexports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js\");\nexports.finished = __webpack_require__(/*! ./lib/internal/streams/end-of-stream.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/end-of-stream.js\");\nexports.pipeline = __webpack_require__(/*! ./lib/internal/streams/pipeline.js */ \"./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/pipeline.js\");\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/stream-http/node_modules/readable-stream/readable-browser.js?");

/***/ }),

/***/ "./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer);\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/string_decoder/lib/string_decoder.js?");

/***/ }),

/***/ "./node_modules/thunky/index.js":
/*!**************************************!*\
  !*** ./node_modules/thunky/index.js ***!
  \**************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar nextTick = nextTickArgs\nprocess.nextTick(upgrade, 42) // pass 42 and see if upgrade is called with it\n\nmodule.exports = thunky\n\nfunction thunky (fn) {\n  var state = run\n  return thunk\n\n  function thunk (callback) {\n    state(callback || noop)\n  }\n\n  function run (callback) {\n    var stack = [callback]\n    state = wait\n    fn(done)\n\n    function wait (callback) {\n      stack.push(callback)\n    }\n\n    function done (err) {\n      var args = arguments\n      state = isError(err) ? run : finished\n      while (stack.length) finished(stack.shift())\n\n      function finished (callback) {\n        nextTick(apply, callback, args)\n      }\n    }\n  }\n}\n\nfunction isError (err) { // inlined from util so this works in the browser\n  return Object.prototype.toString.call(err) === '[object Error]'\n}\n\nfunction noop () {}\n\nfunction apply (callback, args) {\n  callback.apply(null, args)\n}\n\nfunction upgrade (val) {\n  if (val === 42) nextTick = process.nextTick\n}\n\nfunction nextTickArgs (fn, a, b) {\n  process.nextTick(function () {\n    fn(a, b)\n  })\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/thunky/index.js?");

/***/ }),

/***/ "./node_modules/uglify-js/lib/parse-js.js":
/*!************************************************!*\
  !*** ./node_modules/uglify-js/lib/parse-js.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n\n  This version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\n\n  This file contains the tokenizer/parser.  It is a port to JavaScript\n  of parse-js [1], a JavaScript parser library written in Common Lisp\n  by Marijn Haverbeke.  Thank you Marijn!\n\n  [1] http://marijn.haverbeke.nl/parse-js/\n\n  Exported functions:\n\n    - tokenizer(code) -- returns a function.  Call the returned\n      function to fetch the next token.\n\n    - parse(code) -- returns an AST of the given JavaScript code.\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n    Based on parse-js (http://marijn.haverbeke.nl/parse-js/).\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n/* -----[ Tokenizer (constants) ]----- */\n\nvar KEYWORDS = array_to_hash([\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"const\",\n        \"continue\",\n        \"debugger\",\n        \"default\",\n        \"delete\",\n        \"do\",\n        \"else\",\n        \"finally\",\n        \"for\",\n        \"function\",\n        \"if\",\n        \"in\",\n        \"instanceof\",\n        \"new\",\n        \"return\",\n        \"switch\",\n        \"throw\",\n        \"try\",\n        \"typeof\",\n        \"var\",\n        \"void\",\n        \"while\",\n        \"with\"\n]);\n\nvar RESERVED_WORDS = array_to_hash([\n        \"abstract\",\n        \"boolean\",\n        \"byte\",\n        \"char\",\n        \"class\",\n        \"double\",\n        \"enum\",\n        \"export\",\n        \"extends\",\n        \"final\",\n        \"float\",\n        \"goto\",\n        \"implements\",\n        \"import\",\n        \"int\",\n        \"interface\",\n        \"long\",\n        \"native\",\n        \"package\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"short\",\n        \"static\",\n        \"super\",\n        \"synchronized\",\n        \"throws\",\n        \"transient\",\n        \"volatile\"\n]);\n\nvar KEYWORDS_BEFORE_EXPRESSION = array_to_hash([\n        \"return\",\n        \"new\",\n        \"delete\",\n        \"throw\",\n        \"else\",\n        \"case\"\n]);\n\nvar KEYWORDS_ATOM = array_to_hash([\n        \"false\",\n        \"null\",\n        \"true\",\n        \"undefined\"\n]);\n\nvar OPERATOR_CHARS = array_to_hash(characters(\"+-*&%=<>!?|~^\"));\n\nvar RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;\nvar RE_OCT_NUMBER = /^0[0-7]+$/;\nvar RE_DEC_NUMBER = /^\\d*\\.?\\d*(?:e[+-]?\\d*(?:\\d\\.?|\\.?\\d)\\d*)?$/i;\n\nvar OPERATORS = array_to_hash([\n        \"in\",\n        \"instanceof\",\n        \"typeof\",\n        \"new\",\n        \"void\",\n        \"delete\",\n        \"++\",\n        \"--\",\n        \"+\",\n        \"-\",\n        \"!\",\n        \"~\",\n        \"&\",\n        \"|\",\n        \"^\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \">>\",\n        \"<<\",\n        \">>>\",\n        \"<\",\n        \">\",\n        \"<=\",\n        \">=\",\n        \"==\",\n        \"===\",\n        \"!=\",\n        \"!==\",\n        \"?\",\n        \"=\",\n        \"+=\",\n        \"-=\",\n        \"/=\",\n        \"*=\",\n        \"%=\",\n        \">>=\",\n        \"<<=\",\n        \">>>=\",\n        \"|=\",\n        \"^=\",\n        \"&=\",\n        \"&&\",\n        \"||\"\n]);\n\nvar WHITESPACE_CHARS = array_to_hash(characters(\" \\u00a0\\n\\r\\t\\f\\u000b\\u200b\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\"));\n\nvar PUNC_BEFORE_EXPRESSION = array_to_hash(characters(\"[{}(,.;:\"));\n\nvar PUNC_CHARS = array_to_hash(characters(\"[]{}(),;:\"));\n\nvar REGEXP_MODIFIERS = array_to_hash(characters(\"gmsiy\"));\n\n/* -----[ Tokenizer ]----- */\n\n// regexps adapted from http://xregexp.com/plugins/#unicode\nvar UNICODE = {\n        letter: new RegExp(\"[\\\\u0041-\\\\u005A\\\\u0061-\\\\u007A\\\\u00AA\\\\u00B5\\\\u00BA\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u0523\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0621-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971\\\\u0972\\\\u097B-\\\\u097F\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C33\\\\u0C35-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D28\\\\u0D2A-\\\\u0D39\\\\u0D3D\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC\\\\u0EDD\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8B\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10D0-\\\\u10FA\\\\u10FC\\\\u1100-\\\\u1159\\\\u115F-\\\\u11A2\\\\u11A8-\\\\u11F9\\\\u1200-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u1676\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u1900-\\\\u191C\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19A9\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u2094\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2183\\\\u2184\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2C6F\\\\u2C71-\\\\u2C7D\\\\u2C80-\\\\u2CE4\\\\u2D00-\\\\u2D25\\\\u2D30-\\\\u2D65\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005\\\\u3006\\\\u3031-\\\\u3035\\\\u303B\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31B7\\\\u31F0-\\\\u31FF\\\\u3400\\\\u4DB5\\\\u4E00\\\\u9FC3\\\\uA000-\\\\uA48C\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA65F\\\\uA662-\\\\uA66E\\\\uA67F-\\\\uA697\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B\\\\uA78C\\\\uA7FB-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAC00\\\\uD7A3\\\\uF900-\\\\uFA2D\\\\uFA30-\\\\uFA6A\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]\"),\n        non_spacing_mark: new RegExp(\"[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0487\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065E\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0900-\\\\u0902\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0955\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EB9\\\\u0EBB\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F90-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1DC0-\\\\u1DE6\\\\u1DFD-\\\\u1DFF\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F\\\\uA67C\\\\uA67D\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8E0-\\\\uA8F1\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE26]\"),\n        space_combining_mark: new RegExp(\"[\\\\u0903\\\\u093E-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E\\\\u0982\\\\u0983\\\\u09BE-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09D7\\\\u0A03\\\\u0A3E-\\\\u0A40\\\\u0A83\\\\u0ABE-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0B02\\\\u0B03\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD7\\\\u0C01-\\\\u0C03\\\\u0C41-\\\\u0C44\\\\u0C82\\\\u0C83\\\\u0CBE\\\\u0CC0-\\\\u0CC4\\\\u0CC7\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0D02\\\\u0D03\\\\u0D3E-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D57\\\\u0D82\\\\u0D83\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0F3E\\\\u0F3F\\\\u0F7F\\\\u102B\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u1056\\\\u1057\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108F\\\\u109A-\\\\u109C\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u19B0-\\\\u19C0\\\\u19C8\\\\u19C9\\\\u1A19-\\\\u1A1B\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1B04\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43\\\\u1B44\\\\u1B82\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1C24-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1CE1\\\\u1CF2\\\\uA823\\\\uA824\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C3\\\\uA952\\\\uA953\\\\uA983\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BD-\\\\uA9C0\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA4D\\\\uAA7B\\\\uABE3\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9\\\\uABEA\\\\uABEC]\"),\n        connector_punctuation: new RegExp(\"[\\\\u005F\\\\u203F\\\\u2040\\\\u2054\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFF3F]\")\n};\n\nfunction is_letter(ch) {\n        return UNICODE.letter.test(ch);\n};\n\nfunction is_digit(ch) {\n        ch = ch.charCodeAt(0);\n        return ch >= 48 && ch <= 57; //XXX: find out if \"UnicodeDigit\" means something else than 0..9\n};\n\nfunction is_alphanumeric_char(ch) {\n        return is_digit(ch) || is_letter(ch);\n};\n\nfunction is_unicode_combining_mark(ch) {\n        return UNICODE.non_spacing_mark.test(ch) || UNICODE.space_combining_mark.test(ch);\n};\n\nfunction is_unicode_connector_punctuation(ch) {\n        return UNICODE.connector_punctuation.test(ch);\n};\n\nfunction is_identifier_start(ch) {\n        return ch == \"$\" || ch == \"_\" || is_letter(ch);\n};\n\nfunction is_identifier_char(ch) {\n        return is_identifier_start(ch)\n                || is_unicode_combining_mark(ch)\n                || is_digit(ch)\n                || is_unicode_connector_punctuation(ch)\n                || ch == \"\\u200c\" // zero-width non-joiner <ZWNJ>\n                || ch == \"\\u200d\" // zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)\n        ;\n};\n\nfunction parse_js_number(num) {\n        if (RE_HEX_NUMBER.test(num)) {\n                return parseInt(num.substr(2), 16);\n        } else if (RE_OCT_NUMBER.test(num)) {\n                return parseInt(num.substr(1), 8);\n        } else if (RE_DEC_NUMBER.test(num)) {\n                return parseFloat(num);\n        }\n};\n\nfunction JS_Parse_Error(message, line, col, pos) {\n        this.message = message;\n        this.line = line + 1;\n        this.col = col + 1;\n        this.pos = pos + 1;\n        this.stack = new Error().stack;\n};\n\nJS_Parse_Error.prototype.toString = function() {\n        return this.message + \" (line: \" + this.line + \", col: \" + this.col + \", pos: \" + this.pos + \")\" + \"\\n\\n\" + this.stack;\n};\n\nfunction js_error(message, line, col, pos) {\n        throw new JS_Parse_Error(message, line, col, pos);\n};\n\nfunction is_token(token, type, val) {\n        return token.type == type && (val == null || token.value == val);\n};\n\nvar EX_EOF = {};\n\nfunction tokenizer($TEXT) {\n\n        var S = {\n                text            : $TEXT.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, \"\\n\").replace(/^\\uFEFF/, ''),\n                pos             : 0,\n                tokpos          : 0,\n                line            : 0,\n                tokline         : 0,\n                col             : 0,\n                tokcol          : 0,\n                newline_before  : false,\n                regex_allowed   : false,\n                comments_before : []\n        };\n\n        function peek() { return S.text.charAt(S.pos); };\n\n        function next(signal_eof, in_string) {\n                var ch = S.text.charAt(S.pos++);\n                if (signal_eof && !ch)\n                        throw EX_EOF;\n                if (ch == \"\\n\") {\n                        S.newline_before = S.newline_before || !in_string;\n                        ++S.line;\n                        S.col = 0;\n                } else {\n                        ++S.col;\n                }\n                return ch;\n        };\n\n        function eof() {\n                return !S.peek();\n        };\n\n        function find(what, signal_eof) {\n                var pos = S.text.indexOf(what, S.pos);\n                if (signal_eof && pos == -1) throw EX_EOF;\n                return pos;\n        };\n\n        function start_token() {\n                S.tokline = S.line;\n                S.tokcol = S.col;\n                S.tokpos = S.pos;\n        };\n\n        function token(type, value, is_comment) {\n                S.regex_allowed = ((type == \"operator\" && !HOP(UNARY_POSTFIX, value)) ||\n                                   (type == \"keyword\" && HOP(KEYWORDS_BEFORE_EXPRESSION, value)) ||\n                                   (type == \"punc\" && HOP(PUNC_BEFORE_EXPRESSION, value)));\n                var ret = {\n                        type   : type,\n                        value  : value,\n                        line   : S.tokline,\n                        col    : S.tokcol,\n                        pos    : S.tokpos,\n                        endpos : S.pos,\n                        nlb    : S.newline_before\n                };\n                if (!is_comment) {\n                        ret.comments_before = S.comments_before;\n                        S.comments_before = [];\n                }\n                S.newline_before = false;\n                return ret;\n        };\n\n        function skip_whitespace() {\n                while (HOP(WHITESPACE_CHARS, peek()))\n                        next();\n        };\n\n        function read_while(pred) {\n                var ret = \"\", ch = peek(), i = 0;\n                while (ch && pred(ch, i++)) {\n                        ret += next();\n                        ch = peek();\n                }\n                return ret;\n        };\n\n        function parse_error(err) {\n                js_error(err, S.tokline, S.tokcol, S.tokpos);\n        };\n\n        function read_num(prefix) {\n                var has_e = false, after_e = false, has_x = false, has_dot = prefix == \".\";\n                var num = read_while(function(ch, i){\n                        if (ch == \"x\" || ch == \"X\") {\n                                if (has_x) return false;\n                                return has_x = true;\n                        }\n                        if (!has_x && (ch == \"E\" || ch == \"e\")) {\n                                if (has_e) return false;\n                                return has_e = after_e = true;\n                        }\n                        if (ch == \"-\") {\n                                if (after_e || (i == 0 && !prefix)) return true;\n                                return false;\n                        }\n                        if (ch == \"+\") return after_e;\n                        after_e = false;\n                        if (ch == \".\") {\n                                if (!has_dot && !has_x)\n                                        return has_dot = true;\n                                return false;\n                        }\n                        return is_alphanumeric_char(ch);\n                });\n                if (prefix)\n                        num = prefix + num;\n                var valid = parse_js_number(num);\n                if (!isNaN(valid)) {\n                        return token(\"num\", valid);\n                } else {\n                        parse_error(\"Invalid syntax: \" + num);\n                }\n        };\n\n        function read_escaped_char(in_string) {\n                var ch = next(true, in_string);\n                switch (ch) {\n                    case \"n\" : return \"\\n\";\n                    case \"r\" : return \"\\r\";\n                    case \"t\" : return \"\\t\";\n                    case \"b\" : return \"\\b\";\n                    case \"v\" : return \"\\u000b\";\n                    case \"f\" : return \"\\f\";\n                    case \"0\" : return \"\\0\";\n                    case \"x\" : return String.fromCharCode(hex_bytes(2));\n                    case \"u\" : return String.fromCharCode(hex_bytes(4));\n                    case \"\\n\": return \"\";\n                    default  : return ch;\n                }\n        };\n\n        function hex_bytes(n) {\n                var num = 0;\n                for (; n > 0; --n) {\n                        var digit = parseInt(next(true), 16);\n                        if (isNaN(digit))\n                                parse_error(\"Invalid hex-character pattern in string\");\n                        num = (num << 4) | digit;\n                }\n                return num;\n        };\n\n        function read_string() {\n                return with_eof_error(\"Unterminated string constant\", function(){\n                        var quote = next(), ret = \"\";\n                        for (;;) {\n                                var ch = next(true);\n                                if (ch == \"\\\\\") {\n                                        // read OctalEscapeSequence (XXX: deprecated if \"strict mode\")\n                                        // https://github.com/mishoo/UglifyJS/issues/178\n                                        var octal_len = 0, first = null;\n                                        ch = read_while(function(ch){\n                                                if (ch >= \"0\" && ch <= \"7\") {\n                                                        if (!first) {\n                                                                first = ch;\n                                                                return ++octal_len;\n                                                        }\n                                                        else if (first <= \"3\" && octal_len <= 2) return ++octal_len;\n                                                        else if (first >= \"4\" && octal_len <= 1) return ++octal_len;\n                                                }\n                                                return false;\n                                        });\n                                        if (octal_len > 0) ch = String.fromCharCode(parseInt(ch, 8));\n                                        else ch = read_escaped_char(true);\n                                }\n                                else if (ch == quote) break;\n                                ret += ch;\n                        }\n                        return token(\"string\", ret);\n                });\n        };\n\n        function read_line_comment() {\n                next();\n                var i = find(\"\\n\"), ret;\n                if (i == -1) {\n                        ret = S.text.substr(S.pos);\n                        S.pos = S.text.length;\n                } else {\n                        ret = S.text.substring(S.pos, i);\n                        S.pos = i;\n                }\n                return token(\"comment1\", ret, true);\n        };\n\n        function read_multiline_comment() {\n                next();\n                return with_eof_error(\"Unterminated multiline comment\", function(){\n                        var i = find(\"*/\", true),\n                            text = S.text.substring(S.pos, i);\n                        S.pos = i + 2;\n                        S.line += text.split(\"\\n\").length - 1;\n                        S.newline_before = text.indexOf(\"\\n\") >= 0;\n\n                        // https://github.com/mishoo/UglifyJS/issues/#issue/100\n                        if (/^@cc_on/i.test(text)) {\n                                warn(\"WARNING: at line \" + S.line);\n                                warn(\"*** Found \\\"conditional comment\\\": \" + text);\n                                warn(\"*** UglifyJS DISCARDS ALL COMMENTS.  This means your code might no longer work properly in Internet Explorer.\");\n                        }\n\n                        return token(\"comment2\", text, true);\n                });\n        };\n\n        function read_name() {\n                var backslash = false, name = \"\", ch;\n                while ((ch = peek()) != null) {\n                        if (!backslash) {\n                                if (ch == \"\\\\\") backslash = true, next();\n                                else if (is_identifier_char(ch)) name += next();\n                                else break;\n                        }\n                        else {\n                                if (ch != \"u\") parse_error(\"Expecting UnicodeEscapeSequence -- uXXXX\");\n                                ch = read_escaped_char();\n                                if (!is_identifier_char(ch)) parse_error(\"Unicode char: \" + ch.charCodeAt(0) + \" is not valid in identifier\");\n                                name += ch;\n                                backslash = false;\n                        }\n                }\n                return name;\n        };\n\n        function read_regexp(regexp) {\n                return with_eof_error(\"Unterminated regular expression\", function(){\n                        var prev_backslash = false, ch, in_class = false;\n                        while ((ch = next(true))) if (prev_backslash) {\n                                regexp += \"\\\\\" + ch;\n                                prev_backslash = false;\n                        } else if (ch == \"[\") {\n                                in_class = true;\n                                regexp += ch;\n                        } else if (ch == \"]\" && in_class) {\n                                in_class = false;\n                                regexp += ch;\n                        } else if (ch == \"/\" && !in_class) {\n                                break;\n                        } else if (ch == \"\\\\\") {\n                                prev_backslash = true;\n                        } else {\n                                regexp += ch;\n                        }\n                        var mods = read_name();\n                        return token(\"regexp\", [ regexp, mods ]);\n                });\n        };\n\n        function read_operator(prefix) {\n                function grow(op) {\n                        if (!peek()) return op;\n                        var bigger = op + peek();\n                        if (HOP(OPERATORS, bigger)) {\n                                next();\n                                return grow(bigger);\n                        } else {\n                                return op;\n                        }\n                };\n                return token(\"operator\", grow(prefix || next()));\n        };\n\n        function handle_slash() {\n                next();\n                var regex_allowed = S.regex_allowed;\n                switch (peek()) {\n                    case \"/\":\n                        S.comments_before.push(read_line_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                    case \"*\":\n                        S.comments_before.push(read_multiline_comment());\n                        S.regex_allowed = regex_allowed;\n                        return next_token();\n                }\n                return S.regex_allowed ? read_regexp(\"\") : read_operator(\"/\");\n        };\n\n        function handle_dot() {\n                next();\n                return is_digit(peek())\n                        ? read_num(\".\")\n                        : token(\"punc\", \".\");\n        };\n\n        function read_word() {\n                var word = read_name();\n                return !HOP(KEYWORDS, word)\n                        ? token(\"name\", word)\n                        : HOP(OPERATORS, word)\n                        ? token(\"operator\", word)\n                        : HOP(KEYWORDS_ATOM, word)\n                        ? token(\"atom\", word)\n                        : token(\"keyword\", word);\n        };\n\n        function with_eof_error(eof_error, cont) {\n                try {\n                        return cont();\n                } catch(ex) {\n                        if (ex === EX_EOF) parse_error(eof_error);\n                        else throw ex;\n                }\n        };\n\n        function next_token(force_regexp) {\n                if (force_regexp != null)\n                        return read_regexp(force_regexp);\n                skip_whitespace();\n                start_token();\n                var ch = peek();\n                if (!ch) return token(\"eof\");\n                if (is_digit(ch)) return read_num();\n                if (ch == '\"' || ch == \"'\") return read_string();\n                if (HOP(PUNC_CHARS, ch)) return token(\"punc\", next());\n                if (ch == \".\") return handle_dot();\n                if (ch == \"/\") return handle_slash();\n                if (HOP(OPERATOR_CHARS, ch)) return read_operator();\n                if (ch == \"\\\\\" || is_identifier_start(ch)) return read_word();\n                parse_error(\"Unexpected character '\" + ch + \"'\");\n        };\n\n        next_token.context = function(nc) {\n                if (nc) S = nc;\n                return S;\n        };\n\n        return next_token;\n\n};\n\n/* -----[ Parser (constants) ]----- */\n\nvar UNARY_PREFIX = array_to_hash([\n        \"typeof\",\n        \"void\",\n        \"delete\",\n        \"--\",\n        \"++\",\n        \"!\",\n        \"~\",\n        \"-\",\n        \"+\"\n]);\n\nvar UNARY_POSTFIX = array_to_hash([ \"--\", \"++\" ]);\n\nvar ASSIGNMENT = (function(a, ret, i){\n        while (i < a.length) {\n                ret[a[i]] = a[i].substr(0, a[i].length - 1);\n                i++;\n        }\n        return ret;\n})(\n        [\"+=\", \"-=\", \"/=\", \"*=\", \"%=\", \">>=\", \"<<=\", \">>>=\", \"|=\", \"^=\", \"&=\"],\n        { \"=\": true },\n        0\n);\n\nvar PRECEDENCE = (function(a, ret){\n        for (var i = 0, n = 1; i < a.length; ++i, ++n) {\n                var b = a[i];\n                for (var j = 0; j < b.length; ++j) {\n                        ret[b[j]] = n;\n                }\n        }\n        return ret;\n})(\n        [\n                [\"||\"],\n                [\"&&\"],\n                [\"|\"],\n                [\"^\"],\n                [\"&\"],\n                [\"==\", \"===\", \"!=\", \"!==\"],\n                [\"<\", \">\", \"<=\", \">=\", \"in\", \"instanceof\"],\n                [\">>\", \"<<\", \">>>\"],\n                [\"+\", \"-\"],\n                [\"*\", \"/\", \"%\"]\n        ],\n        {}\n);\n\nvar STATEMENTS_WITH_LABELS = array_to_hash([ \"for\", \"do\", \"while\", \"switch\" ]);\n\nvar ATOMIC_START_TOKEN = array_to_hash([ \"atom\", \"num\", \"string\", \"regexp\", \"name\" ]);\n\n/* -----[ Parser ]----- */\n\nfunction NodeWithToken(str, start, end) {\n        this.name = str;\n        this.start = start;\n        this.end = end;\n};\n\nNodeWithToken.prototype.toString = function() { return this.name; };\n\nfunction parse($TEXT, exigent_mode, embed_tokens) {\n\n        var S = {\n                input       : typeof $TEXT == \"string\" ? tokenizer($TEXT, true) : $TEXT,\n                token       : null,\n                prev        : null,\n                peeked      : null,\n                in_function : 0,\n                in_loop     : 0,\n                labels      : []\n        };\n\n        S.token = next();\n\n        function is(type, value) {\n                return is_token(S.token, type, value);\n        };\n\n        function peek() { return S.peeked || (S.peeked = S.input()); };\n\n        function next() {\n                S.prev = S.token;\n                if (S.peeked) {\n                        S.token = S.peeked;\n                        S.peeked = null;\n                } else {\n                        S.token = S.input();\n                }\n                return S.token;\n        };\n\n        function prev() {\n                return S.prev;\n        };\n\n        function croak(msg, line, col, pos) {\n                var ctx = S.input.context();\n                js_error(msg,\n                         line != null ? line : ctx.tokline,\n                         col != null ? col : ctx.tokcol,\n                         pos != null ? pos : ctx.tokpos);\n        };\n\n        function token_error(token, msg) {\n                croak(msg, token.line, token.col);\n        };\n\n        function unexpected(token) {\n                if (token == null)\n                        token = S.token;\n                token_error(token, \"Unexpected token: \" + token.type + \" (\" + token.value + \")\");\n        };\n\n        function expect_token(type, val) {\n                if (is(type, val)) {\n                        return next();\n                }\n                token_error(S.token, \"Unexpected token \" + S.token.type + \", expected \" + type);\n        };\n\n        function expect(punc) { return expect_token(\"punc\", punc); };\n\n        function can_insert_semicolon() {\n                return !exigent_mode && (\n                        S.token.nlb || is(\"eof\") || is(\"punc\", \"}\")\n                );\n        };\n\n        function semicolon() {\n                if (is(\"punc\", \";\")) next();\n                else if (!can_insert_semicolon()) unexpected();\n        };\n\n        function as() {\n                return slice(arguments);\n        };\n\n        function parenthesised() {\n                expect(\"(\");\n                var ex = expression();\n                expect(\")\");\n                return ex;\n        };\n\n        function add_tokens(str, start, end) {\n                return str instanceof NodeWithToken ? str : new NodeWithToken(str, start, end);\n        };\n\n        function maybe_embed_tokens(parser) {\n                if (embed_tokens) return function() {\n                        var start = S.token;\n                        var ast = parser.apply(this, arguments);\n                        ast[0] = add_tokens(ast[0], start, prev());\n                        return ast;\n                };\n                else return parser;\n        };\n\n        var statement = maybe_embed_tokens(function() {\n                if (is(\"operator\", \"/\") || is(\"operator\", \"/=\")) {\n                        S.peeked = null;\n                        S.token = S.input(S.token.value.substr(1)); // force regexp\n                }\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                    case \"regexp\":\n                    case \"operator\":\n                    case \"atom\":\n                        return simple_statement();\n\n                    case \"name\":\n                        return is_token(peek(), \"punc\", \":\")\n                                ? labeled_statement(prog1(S.token.value, next, next))\n                                : simple_statement();\n\n                    case \"punc\":\n                        switch (S.token.value) {\n                            case \"{\":\n                                return as(\"block\", block_());\n                            case \"[\":\n                            case \"(\":\n                                return simple_statement();\n                            case \";\":\n                                next();\n                                return as(\"block\");\n                            default:\n                                unexpected();\n                        }\n\n                    case \"keyword\":\n                        switch (prog1(S.token.value, next)) {\n                            case \"break\":\n                                return break_cont(\"break\");\n\n                            case \"continue\":\n                                return break_cont(\"continue\");\n\n                            case \"debugger\":\n                                semicolon();\n                                return as(\"debugger\");\n\n                            case \"do\":\n                                return (function(body){\n                                        expect_token(\"keyword\", \"while\");\n                                        return as(\"do\", prog1(parenthesised, semicolon), body);\n                                })(in_loop(statement));\n\n                            case \"for\":\n                                return for_();\n\n                            case \"function\":\n                                return function_(true);\n\n                            case \"if\":\n                                return if_();\n\n                            case \"return\":\n                                if (S.in_function == 0)\n                                        croak(\"'return' outside of function\");\n                                return as(\"return\",\n                                          is(\"punc\", \";\")\n                                          ? (next(), null)\n                                          : can_insert_semicolon()\n                                          ? null\n                                          : prog1(expression, semicolon));\n\n                            case \"switch\":\n                                return as(\"switch\", parenthesised(), switch_block_());\n\n                            case \"throw\":\n                                if (S.token.nlb)\n                                        croak(\"Illegal newline after 'throw'\");\n                                return as(\"throw\", prog1(expression, semicolon));\n\n                            case \"try\":\n                                return try_();\n\n                            case \"var\":\n                                return prog1(var_, semicolon);\n\n                            case \"const\":\n                                return prog1(const_, semicolon);\n\n                            case \"while\":\n                                return as(\"while\", parenthesised(), in_loop(statement));\n\n                            case \"with\":\n                                return as(\"with\", parenthesised(), statement());\n\n                            default:\n                                unexpected();\n                        }\n                }\n        });\n\n        function labeled_statement(label) {\n                S.labels.push(label);\n                var start = S.token, stat = statement();\n                if (exigent_mode && !HOP(STATEMENTS_WITH_LABELS, stat[0]))\n                        unexpected(start);\n                S.labels.pop();\n                return as(\"label\", label, stat);\n        };\n\n        function simple_statement() {\n                return as(\"stat\", prog1(expression, semicolon));\n        };\n\n        function break_cont(type) {\n                var name;\n                if (!can_insert_semicolon()) {\n                        name = is(\"name\") ? S.token.value : null;\n                }\n                if (name != null) {\n                        next();\n                        if (!member(name, S.labels))\n                                croak(\"Label \" + name + \" without matching loop or statement\");\n                }\n                else if (S.in_loop == 0)\n                        croak(type + \" not inside a loop or switch\");\n                semicolon();\n                return as(type, name);\n        };\n\n        function for_() {\n                expect(\"(\");\n                var init = null;\n                if (!is(\"punc\", \";\")) {\n                        init = is(\"keyword\", \"var\")\n                                ? (next(), var_(true))\n                                : expression(true, true);\n                        if (is(\"operator\", \"in\")) {\n                                if (init[0] == \"var\" && init[1].length > 1)\n                                        croak(\"Only one variable declaration allowed in for..in loop\");\n                                return for_in(init);\n                        }\n                }\n                return regular_for(init);\n        };\n\n        function regular_for(init) {\n                expect(\";\");\n                var test = is(\"punc\", \";\") ? null : expression();\n                expect(\";\");\n                var step = is(\"punc\", \")\") ? null : expression();\n                expect(\")\");\n                return as(\"for\", init, test, step, in_loop(statement));\n        };\n\n        function for_in(init) {\n                var lhs = init[0] == \"var\" ? as(\"name\", init[1][0]) : init;\n                next();\n                var obj = expression();\n                expect(\")\");\n                return as(\"for-in\", init, lhs, obj, in_loop(statement));\n        };\n\n        var function_ = function(in_statement) {\n                var name = is(\"name\") ? prog1(S.token.value, next) : null;\n                if (in_statement && !name)\n                        unexpected();\n                expect(\"(\");\n                return as(in_statement ? \"defun\" : \"function\",\n                          name,\n                          // arguments\n                          (function(first, a){\n                                  while (!is(\"punc\", \")\")) {\n                                          if (first) first = false; else expect(\",\");\n                                          if (!is(\"name\")) unexpected();\n                                          a.push(S.token.value);\n                                          next();\n                                  }\n                                  next();\n                                  return a;\n                          })(true, []),\n                          // body\n                          (function(){\n                                  ++S.in_function;\n                                  var loop = S.in_loop;\n                                  S.in_loop = 0;\n                                  var a = block_();\n                                  --S.in_function;\n                                  S.in_loop = loop;\n                                  return a;\n                          })());\n        };\n\n        function if_() {\n                var cond = parenthesised(), body = statement(), belse;\n                if (is(\"keyword\", \"else\")) {\n                        next();\n                        belse = statement();\n                }\n                return as(\"if\", cond, body, belse);\n        };\n\n        function block_() {\n                expect(\"{\");\n                var a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        a.push(statement());\n                }\n                next();\n                return a;\n        };\n\n        var switch_block_ = curry(in_loop, function(){\n                expect(\"{\");\n                var a = [], cur = null;\n                while (!is(\"punc\", \"}\")) {\n                        if (is(\"eof\")) unexpected();\n                        if (is(\"keyword\", \"case\")) {\n                                next();\n                                cur = [];\n                                a.push([ expression(), cur ]);\n                                expect(\":\");\n                        }\n                        else if (is(\"keyword\", \"default\")) {\n                                next();\n                                expect(\":\");\n                                cur = [];\n                                a.push([ null, cur ]);\n                        }\n                        else {\n                                if (!cur) unexpected();\n                                cur.push(statement());\n                        }\n                }\n                next();\n                return a;\n        });\n\n        function try_() {\n                var body = block_(), bcatch, bfinally;\n                if (is(\"keyword\", \"catch\")) {\n                        next();\n                        expect(\"(\");\n                        if (!is(\"name\"))\n                                croak(\"Name expected\");\n                        var name = S.token.value;\n                        next();\n                        expect(\")\");\n                        bcatch = [ name, block_() ];\n                }\n                if (is(\"keyword\", \"finally\")) {\n                        next();\n                        bfinally = block_();\n                }\n                if (!bcatch && !bfinally)\n                        croak(\"Missing catch/finally blocks\");\n                return as(\"try\", body, bcatch, bfinally);\n        };\n\n        function vardefs(no_in) {\n                var a = [];\n                for (;;) {\n                        if (!is(\"name\"))\n                                unexpected();\n                        var name = S.token.value;\n                        next();\n                        if (is(\"operator\", \"=\")) {\n                                next();\n                                a.push([ name, expression(false, no_in) ]);\n                        } else {\n                                a.push([ name ]);\n                        }\n                        if (!is(\"punc\", \",\"))\n                                break;\n                        next();\n                }\n                return a;\n        };\n\n        function var_(no_in) {\n                return as(\"var\", vardefs(no_in));\n        };\n\n        function const_() {\n                return as(\"const\", vardefs());\n        };\n\n        function new_() {\n                var newexp = expr_atom(false), args;\n                if (is(\"punc\", \"(\")) {\n                        next();\n                        args = expr_list(\")\");\n                } else {\n                        args = [];\n                }\n                return subscripts(as(\"new\", newexp, args), true);\n        };\n\n        var expr_atom = maybe_embed_tokens(function(allow_calls) {\n                if (is(\"operator\", \"new\")) {\n                        next();\n                        return new_();\n                }\n                if (is(\"punc\")) {\n                        switch (S.token.value) {\n                            case \"(\":\n                                next();\n                                return subscripts(prog1(expression, curry(expect, \")\")), allow_calls);\n                            case \"[\":\n                                next();\n                                return subscripts(array_(), allow_calls);\n                            case \"{\":\n                                next();\n                                return subscripts(object_(), allow_calls);\n                        }\n                        unexpected();\n                }\n                if (is(\"keyword\", \"function\")) {\n                        next();\n                        return subscripts(function_(false), allow_calls);\n                }\n                if (HOP(ATOMIC_START_TOKEN, S.token.type)) {\n                        var atom = S.token.type == \"regexp\"\n                                ? as(\"regexp\", S.token.value[0], S.token.value[1])\n                                : as(S.token.type, S.token.value);\n                        return subscripts(prog1(atom, next), allow_calls);\n                }\n                unexpected();\n        });\n\n        function expr_list(closing, allow_trailing_comma, allow_empty) {\n                var first = true, a = [];\n                while (!is(\"punc\", closing)) {\n                        if (first) first = false; else expect(\",\");\n                        if (allow_trailing_comma && is(\"punc\", closing)) break;\n                        if (is(\"punc\", \",\") && allow_empty) {\n                                a.push([ \"atom\", \"undefined\" ]);\n                        } else {\n                                a.push(expression(false));\n                        }\n                }\n                next();\n                return a;\n        };\n\n        function array_() {\n                return as(\"array\", expr_list(\"]\", !exigent_mode, true));\n        };\n\n        function object_() {\n                var first = true, a = [];\n                while (!is(\"punc\", \"}\")) {\n                        if (first) first = false; else expect(\",\");\n                        if (!exigent_mode && is(\"punc\", \"}\"))\n                                // allow trailing comma\n                                break;\n                        var type = S.token.type;\n                        var name = as_property_name();\n                        if (type == \"name\" && (name == \"get\" || name == \"set\") && !is(\"punc\", \":\")) {\n                                a.push([ as_name(), function_(false), name ]);\n                        } else {\n                                expect(\":\");\n                                a.push([ name, expression(false) ]);\n                        }\n                }\n                next();\n                return as(\"object\", a);\n        };\n\n        function as_property_name() {\n                switch (S.token.type) {\n                    case \"num\":\n                    case \"string\":\n                        return prog1(S.token.value, next);\n                }\n                return as_name();\n        };\n\n        function as_name() {\n                switch (S.token.type) {\n                    case \"name\":\n                    case \"operator\":\n                    case \"keyword\":\n                    case \"atom\":\n                        return prog1(S.token.value, next);\n                    default:\n                        unexpected();\n                }\n        };\n\n        function subscripts(expr, allow_calls) {\n                if (is(\"punc\", \".\")) {\n                        next();\n                        return subscripts(as(\"dot\", expr, as_name()), allow_calls);\n                }\n                if (is(\"punc\", \"[\")) {\n                        next();\n                        return subscripts(as(\"sub\", expr, prog1(expression, curry(expect, \"]\"))), allow_calls);\n                }\n                if (allow_calls && is(\"punc\", \"(\")) {\n                        next();\n                        return subscripts(as(\"call\", expr, expr_list(\")\")), true);\n                }\n                return expr;\n        };\n\n        function maybe_unary(allow_calls) {\n                if (is(\"operator\") && HOP(UNARY_PREFIX, S.token.value)) {\n                        return make_unary(\"unary-prefix\",\n                                          prog1(S.token.value, next),\n                                          maybe_unary(allow_calls));\n                }\n                var val = expr_atom(allow_calls);\n                while (is(\"operator\") && HOP(UNARY_POSTFIX, S.token.value) && !S.token.nlb) {\n                        val = make_unary(\"unary-postfix\", S.token.value, val);\n                        next();\n                }\n                return val;\n        };\n\n        function make_unary(tag, op, expr) {\n                if ((op == \"++\" || op == \"--\") && !is_assignable(expr))\n                        croak(\"Invalid use of \" + op + \" operator\");\n                return as(tag, op, expr);\n        };\n\n        function expr_op(left, min_prec, no_in) {\n                var op = is(\"operator\") ? S.token.value : null;\n                if (op && op == \"in\" && no_in) op = null;\n                var prec = op != null ? PRECEDENCE[op] : null;\n                if (prec != null && prec > min_prec) {\n                        next();\n                        var right = expr_op(maybe_unary(true), prec, no_in);\n                        return expr_op(as(\"binary\", op, left, right), min_prec, no_in);\n                }\n                return left;\n        };\n\n        function expr_ops(no_in) {\n                return expr_op(maybe_unary(true), 0, no_in);\n        };\n\n        function maybe_conditional(no_in) {\n                var expr = expr_ops(no_in);\n                if (is(\"operator\", \"?\")) {\n                        next();\n                        var yes = expression(false);\n                        expect(\":\");\n                        return as(\"conditional\", expr, yes, expression(false, no_in));\n                }\n                return expr;\n        };\n\n        function is_assignable(expr) {\n                if (!exigent_mode) return true;\n                switch (expr[0]+\"\") {\n                    case \"dot\":\n                    case \"sub\":\n                    case \"new\":\n                    case \"call\":\n                        return true;\n                    case \"name\":\n                        return expr[1] != \"this\";\n                }\n        };\n\n        function maybe_assign(no_in) {\n                var left = maybe_conditional(no_in), val = S.token.value;\n                if (is(\"operator\") && HOP(ASSIGNMENT, val)) {\n                        if (is_assignable(left)) {\n                                next();\n                                return as(\"assign\", ASSIGNMENT[val], left, maybe_assign(no_in));\n                        }\n                        croak(\"Invalid assignment\");\n                }\n                return left;\n        };\n\n        var expression = maybe_embed_tokens(function(commas, no_in) {\n                if (arguments.length == 0)\n                        commas = true;\n                var expr = maybe_assign(no_in);\n                if (commas && is(\"punc\", \",\")) {\n                        next();\n                        return as(\"seq\", expr, expression(true, no_in));\n                }\n                return expr;\n        });\n\n        function in_loop(cont) {\n                try {\n                        ++S.in_loop;\n                        return cont();\n                } finally {\n                        --S.in_loop;\n                }\n        };\n\n        return as(\"toplevel\", (function(a){\n                while (!is(\"eof\"))\n                        a.push(statement());\n                return a;\n        })([]));\n\n};\n\n/* -----[ Utilities ]----- */\n\nfunction curry(f) {\n        var args = slice(arguments, 1);\n        return function() { return f.apply(this, args.concat(slice(arguments))); };\n};\n\nfunction prog1(ret) {\n        if (ret instanceof Function)\n                ret = ret();\n        for (var i = 1, n = arguments.length; --n > 0; ++i)\n                arguments[i]();\n        return ret;\n};\n\nfunction array_to_hash(a) {\n        var ret = {};\n        for (var i = 0; i < a.length; ++i)\n                ret[a[i]] = true;\n        return ret;\n};\n\nfunction slice(a, start) {\n        return Array.prototype.slice.call(a, start || 0);\n};\n\nfunction characters(str) {\n        return str.split(\"\");\n};\n\nfunction member(name, array) {\n        for (var i = array.length; --i >= 0;)\n                if (array[i] == name)\n                        return true;\n        return false;\n};\n\nfunction HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\nvar warn = function() {};\n\n/* -----[ Exports ]----- */\n\nexports.tokenizer = tokenizer;\nexports.parse = parse;\nexports.slice = slice;\nexports.curry = curry;\nexports.member = member;\nexports.array_to_hash = array_to_hash;\nexports.PRECEDENCE = PRECEDENCE;\nexports.KEYWORDS_ATOM = KEYWORDS_ATOM;\nexports.RESERVED_WORDS = RESERVED_WORDS;\nexports.KEYWORDS = KEYWORDS;\nexports.ATOMIC_START_TOKEN = ATOMIC_START_TOKEN;\nexports.OPERATORS = OPERATORS;\nexports.is_alphanumeric_char = is_alphanumeric_char;\nexports.set_logger = function(logger) {\n        warn = logger;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/uglify-js/lib/parse-js.js?");

/***/ }),

/***/ "./node_modules/uglify-js/lib/process.js":
/*!***********************************************!*\
  !*** ./node_modules/uglify-js/lib/process.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n\n  This version is suitable for Node.js.  With minimal changes (the\n  exports stuff) it should work on any JS platform.\n\n  This file implements some AST processors.  They work on data built\n  by parse-js.\n\n  Exported functions:\n\n    - ast_mangle(ast, options) -- mangles the variable/function names\n      in the AST.  Returns an AST.\n\n    - ast_squeeze(ast) -- employs various optimizations to make the\n      final generated code even smaller.  Returns an AST.\n\n    - gen_code(ast, options) -- generates JS code from the AST.  Pass\n      true (or an object, see the code for some options) as second\n      argument to get \"pretty\" (indented) code.\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2010 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\nvar jsp = __webpack_require__(/*! ./parse-js */ \"./node_modules/uglify-js/lib/parse-js.js\"),\n    slice = jsp.slice,\n    member = jsp.member,\n    PRECEDENCE = jsp.PRECEDENCE,\n    OPERATORS = jsp.OPERATORS;\n\n/* -----[ helper for AST traversal ]----- */\n\nfunction ast_walker() {\n        function _vardefs(defs) {\n                return [ this[0], MAP(defs, function(def){\n                        var a = [ def[0] ];\n                        if (def.length > 1)\n                                a[1] = walk(def[1]);\n                        return a;\n                }) ];\n        };\n        function _block(statements) {\n                var out = [ this[0] ];\n                if (statements != null)\n                        out.push(MAP(statements, walk));\n                return out;\n        };\n        var walkers = {\n                \"string\": function(str) {\n                        return [ this[0], str ];\n                },\n                \"num\": function(num) {\n                        return [ this[0], num ];\n                },\n                \"name\": function(name) {\n                        return [ this[0], name ];\n                },\n                \"toplevel\": function(statements) {\n                        return [ this[0], MAP(statements, walk) ];\n                },\n                \"block\": _block,\n                \"splice\": _block,\n                \"var\": _vardefs,\n                \"const\": _vardefs,\n                \"try\": function(t, c, f) {\n                        return [\n                                this[0],\n                                MAP(t, walk),\n                                c != null ? [ c[0], MAP(c[1], walk) ] : null,\n                                f != null ? MAP(f, walk) : null\n                        ];\n                },\n                \"throw\": function(expr) {\n                        return [ this[0], walk(expr) ];\n                },\n                \"new\": function(ctor, args) {\n                        return [ this[0], walk(ctor), MAP(args, walk) ];\n                },\n                \"switch\": function(expr, body) {\n                        return [ this[0], walk(expr), MAP(body, function(branch){\n                                return [ branch[0] ? walk(branch[0]) : null,\n                                         MAP(branch[1], walk) ];\n                        }) ];\n                },\n                \"break\": function(label) {\n                        return [ this[0], label ];\n                },\n                \"continue\": function(label) {\n                        return [ this[0], label ];\n                },\n                \"conditional\": function(cond, t, e) {\n                        return [ this[0], walk(cond), walk(t), walk(e) ];\n                },\n                \"assign\": function(op, lvalue, rvalue) {\n                        return [ this[0], op, walk(lvalue), walk(rvalue) ];\n                },\n                \"dot\": function(expr) {\n                        return [ this[0], walk(expr) ].concat(slice(arguments, 1));\n                },\n                \"call\": function(expr, args) {\n                        return [ this[0], walk(expr), MAP(args, walk) ];\n                },\n                \"function\": function(name, args, body) {\n                        return [ this[0], name, args.slice(), MAP(body, walk) ];\n                },\n                \"debugger\": function() {\n                        return [ this[0] ];\n                },\n                \"defun\": function(name, args, body) {\n                        return [ this[0], name, args.slice(), MAP(body, walk) ];\n                },\n                \"if\": function(conditional, t, e) {\n                        return [ this[0], walk(conditional), walk(t), walk(e) ];\n                },\n                \"for\": function(init, cond, step, block) {\n                        return [ this[0], walk(init), walk(cond), walk(step), walk(block) ];\n                },\n                \"for-in\": function(vvar, key, hash, block) {\n                        return [ this[0], walk(vvar), walk(key), walk(hash), walk(block) ];\n                },\n                \"while\": function(cond, block) {\n                        return [ this[0], walk(cond), walk(block) ];\n                },\n                \"do\": function(cond, block) {\n                        return [ this[0], walk(cond), walk(block) ];\n                },\n                \"return\": function(expr) {\n                        return [ this[0], walk(expr) ];\n                },\n                \"binary\": function(op, left, right) {\n                        return [ this[0], op, walk(left), walk(right) ];\n                },\n                \"unary-prefix\": function(op, expr) {\n                        return [ this[0], op, walk(expr) ];\n                },\n                \"unary-postfix\": function(op, expr) {\n                        return [ this[0], op, walk(expr) ];\n                },\n                \"sub\": function(expr, subscript) {\n                        return [ this[0], walk(expr), walk(subscript) ];\n                },\n                \"object\": function(props) {\n                        return [ this[0], MAP(props, function(p){\n                                return p.length == 2\n                                        ? [ p[0], walk(p[1]) ]\n                                        : [ p[0], walk(p[1]), p[2] ]; // get/set-ter\n                        }) ];\n                },\n                \"regexp\": function(rx, mods) {\n                        return [ this[0], rx, mods ];\n                },\n                \"array\": function(elements) {\n                        return [ this[0], MAP(elements, walk) ];\n                },\n                \"stat\": function(stat) {\n                        return [ this[0], walk(stat) ];\n                },\n                \"seq\": function() {\n                        return [ this[0] ].concat(MAP(slice(arguments), walk));\n                },\n                \"label\": function(name, block) {\n                        return [ this[0], name, walk(block) ];\n                },\n                \"with\": function(expr, block) {\n                        return [ this[0], walk(expr), walk(block) ];\n                },\n                \"atom\": function(name) {\n                        return [ this[0], name ];\n                }\n        };\n\n        var user = {};\n        var stack = [];\n        function walk(ast) {\n                if (ast == null)\n                        return null;\n                try {\n                        stack.push(ast);\n                        var type = ast[0];\n                        var gen = user[type];\n                        if (gen) {\n                                var ret = gen.apply(ast, ast.slice(1));\n                                if (ret != null)\n                                        return ret;\n                        }\n                        gen = walkers[type];\n                        return gen.apply(ast, ast.slice(1));\n                } finally {\n                        stack.pop();\n                }\n        };\n\n        function dive(ast) {\n                if (ast == null)\n                        return null;\n                try {\n                        stack.push(ast);\n                        return walkers[ast[0]].apply(ast, ast.slice(1));\n                } finally {\n                        stack.pop();\n                }\n        };\n\n        function with_walkers(walkers, cont){\n                var save = {}, i;\n                for (i in walkers) if (HOP(walkers, i)) {\n                        save[i] = user[i];\n                        user[i] = walkers[i];\n                }\n                var ret = cont();\n                for (i in save) if (HOP(save, i)) {\n                        if (!save[i]) delete user[i];\n                        else user[i] = save[i];\n                }\n                return ret;\n        };\n\n        return {\n                walk: walk,\n                dive: dive,\n                with_walkers: with_walkers,\n                parent: function() {\n                        return stack[stack.length - 2]; // last one is current node\n                },\n                stack: function() {\n                        return stack;\n                }\n        };\n};\n\n/* -----[ Scope and mangling ]----- */\n\nfunction Scope(parent) {\n        this.names = {};        // names defined in this scope\n        this.mangled = {};      // mangled names (orig.name => mangled)\n        this.rev_mangled = {};  // reverse lookup (mangled => orig.name)\n        this.cname = -1;        // current mangled name\n        this.refs = {};         // names referenced from this scope\n        this.uses_with = false; // will become TRUE if with() is detected in this or any subscopes\n        this.uses_eval = false; // will become TRUE if eval() is detected in this or any subscopes\n        this.parent = parent;   // parent scope\n        this.children = [];     // sub-scopes\n        if (parent) {\n                this.level = parent.level + 1;\n                parent.children.push(this);\n        } else {\n                this.level = 0;\n        }\n};\n\nvar base54 = (function(){\n        var DIGITS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_\";\n        return function(num) {\n                var ret = \"\";\n                do {\n                        ret = DIGITS.charAt(num % 54) + ret;\n                        num = Math.floor(num / 54);\n                } while (num > 0);\n                return ret;\n        };\n})();\n\nScope.prototype = {\n        has: function(name) {\n                for (var s = this; s; s = s.parent)\n                        if (HOP(s.names, name))\n                                return s;\n        },\n        has_mangled: function(mname) {\n                for (var s = this; s; s = s.parent)\n                        if (HOP(s.rev_mangled, mname))\n                                return s;\n        },\n        toJSON: function() {\n                return {\n                        names: this.names,\n                        uses_eval: this.uses_eval,\n                        uses_with: this.uses_with\n                };\n        },\n\n        next_mangled: function() {\n                // we must be careful that the new mangled name:\n                //\n                // 1. doesn't shadow a mangled name from a parent\n                //    scope, unless we don't reference the original\n                //    name from this scope OR from any sub-scopes!\n                //    This will get slow.\n                //\n                // 2. doesn't shadow an original name from a parent\n                //    scope, in the event that the name is not mangled\n                //    in the parent scope and we reference that name\n                //    here OR IN ANY SUBSCOPES!\n                //\n                // 3. doesn't shadow a name that is referenced but not\n                //    defined (possibly global defined elsewhere).\n                for (;;) {\n                        var m = base54(++this.cname), prior;\n\n                        // case 1.\n                        prior = this.has_mangled(m);\n                        if (prior && this.refs[prior.rev_mangled[m]] === prior)\n                                continue;\n\n                        // case 2.\n                        prior = this.has(m);\n                        if (prior && prior !== this && this.refs[m] === prior && !prior.has_mangled(m))\n                                continue;\n\n                        // case 3.\n                        if (HOP(this.refs, m) && this.refs[m] == null)\n                                continue;\n\n                        // I got \"do\" once. :-/\n                        if (!is_identifier(m))\n                                continue;\n\n                        return m;\n                }\n        },\n        set_mangle: function(name, m) {\n                this.rev_mangled[m] = name;\n                return this.mangled[name] = m;\n        },\n        get_mangled: function(name, newMangle) {\n                if (this.uses_eval || this.uses_with) return name; // no mangle if eval or with is in use\n                var s = this.has(name);\n                if (!s) return name; // not in visible scope, no mangle\n                if (HOP(s.mangled, name)) return s.mangled[name]; // already mangled in this scope\n                if (!newMangle) return name;                      // not found and no mangling requested\n                return s.set_mangle(name, s.next_mangled());\n        },\n        references: function(name) {\n                return name && !this.parent || this.uses_with || this.uses_eval || this.refs[name];\n        },\n        define: function(name, type) {\n                if (name != null) {\n                        if (type == \"var\" || !HOP(this.names, name))\n                                this.names[name] = type || \"var\";\n                        return name;\n                }\n        }\n};\n\nfunction ast_add_scope(ast) {\n\n        var current_scope = null;\n        var w = ast_walker(), walk = w.walk;\n        var having_eval = [];\n\n        function with_new_scope(cont) {\n                current_scope = new Scope(current_scope);\n                current_scope.labels = new Scope();\n                var ret = current_scope.body = cont();\n                ret.scope = current_scope;\n                current_scope = current_scope.parent;\n                return ret;\n        };\n\n        function define(name, type) {\n                return current_scope.define(name, type);\n        };\n\n        function reference(name) {\n                current_scope.refs[name] = true;\n        };\n\n        function _lambda(name, args, body) {\n                var is_defun = this[0] == \"defun\";\n                return [ this[0], is_defun ? define(name, \"defun\") : name, args, with_new_scope(function(){\n                        if (!is_defun) define(name, \"lambda\");\n                        MAP(args, function(name){ define(name, \"arg\") });\n                        return MAP(body, walk);\n                })];\n        };\n\n        function _vardefs(type) {\n                return function(defs) {\n                        MAP(defs, function(d){\n                                define(d[0], type);\n                                if (d[1]) reference(d[0]);\n                        });\n                };\n        };\n\n        function _breacont(label) {\n                if (label)\n                        current_scope.labels.refs[label] = true;\n        };\n\n        return with_new_scope(function(){\n                // process AST\n                var ret = w.with_walkers({\n                        \"function\": _lambda,\n                        \"defun\": _lambda,\n                        \"label\": function(name, stat) { current_scope.labels.define(name) },\n                        \"break\": _breacont,\n                        \"continue\": _breacont,\n                        \"with\": function(expr, block) {\n                                for (var s = current_scope; s; s = s.parent)\n                                        s.uses_with = true;\n                        },\n                        \"var\": _vardefs(\"var\"),\n                        \"const\": _vardefs(\"const\"),\n                        \"try\": function(t, c, f) {\n                                if (c != null) return [\n                                        this[0],\n                                        MAP(t, walk),\n                                        [ define(c[0], \"catch\"), MAP(c[1], walk) ],\n                                        f != null ? MAP(f, walk) : null\n                                ];\n                        },\n                        \"name\": function(name) {\n                                if (name == \"eval\")\n                                        having_eval.push(current_scope);\n                                reference(name);\n                        }\n                }, function(){\n                        return walk(ast);\n                });\n\n                // the reason why we need an additional pass here is\n                // that names can be used prior to their definition.\n\n                // scopes where eval was detected and their parents\n                // are marked with uses_eval, unless they define the\n                // \"eval\" name.\n                MAP(having_eval, function(scope){\n                        if (!scope.has(\"eval\")) while (scope) {\n                                scope.uses_eval = true;\n                                scope = scope.parent;\n                        }\n                });\n\n                // for referenced names it might be useful to know\n                // their origin scope.  current_scope here is the\n                // toplevel one.\n                function fixrefs(scope, i) {\n                        // do children first; order shouldn't matter\n                        for (i = scope.children.length; --i >= 0;)\n                                fixrefs(scope.children[i]);\n                        for (i in scope.refs) if (HOP(scope.refs, i)) {\n                                // find origin scope and propagate the reference to origin\n                                for (var origin = scope.has(i), s = scope; s; s = s.parent) {\n                                        s.refs[i] = origin;\n                                        if (s === origin) break;\n                                }\n                        }\n                };\n                fixrefs(current_scope);\n\n                return ret;\n        });\n\n};\n\n/* -----[ mangle names ]----- */\n\nfunction ast_mangle(ast, options) {\n        var w = ast_walker(), walk = w.walk, scope;\n        options = options || {};\n\n        function get_mangled(name, newMangle) {\n                if (!options.toplevel && !scope.parent) return name; // don't mangle toplevel\n                if (options.except && member(name, options.except))\n                        return name;\n                return scope.get_mangled(name, newMangle);\n        };\n\n        function get_define(name) {\n                if (options.defines) {\n                        // we always lookup a defined symbol for the current scope FIRST, so declared\n                        // vars trump a DEFINE symbol, but if no such var is found, then match a DEFINE value\n                        if (!scope.has(name)) {\n                                if (HOP(options.defines, name)) {\n                                        return options.defines[name];\n                                }\n                        }\n                        return null;\n                }\n        };\n\n        function _lambda(name, args, body) {\n                if (!options.no_functions) {\n                        var is_defun = this[0] == \"defun\", extra;\n                        if (name) {\n                                if (is_defun) name = get_mangled(name);\n                                else if (body.scope.references(name)) {\n                                        extra = {};\n                                        if (!(scope.uses_eval || scope.uses_with))\n                                                name = extra[name] = scope.next_mangled();\n                                        else\n                                                extra[name] = name;\n                                }\n                                else name = null;\n                        }\n                }\n                body = with_scope(body.scope, function(){\n                        args = MAP(args, function(name){ return get_mangled(name) });\n                        return MAP(body, walk);\n                }, extra);\n                return [ this[0], name, args, body ];\n        };\n\n        function with_scope(s, cont, extra) {\n                var _scope = scope;\n                scope = s;\n                if (extra) for (var i in extra) if (HOP(extra, i)) {\n                        s.set_mangle(i, extra[i]);\n                }\n                for (var i in s.names) if (HOP(s.names, i)) {\n                        get_mangled(i, true);\n                }\n                var ret = cont();\n                ret.scope = s;\n                scope = _scope;\n                return ret;\n        };\n\n        function _vardefs(defs) {\n                return [ this[0], MAP(defs, function(d){\n                        return [ get_mangled(d[0]), walk(d[1]) ];\n                }) ];\n        };\n\n        function _breacont(label) {\n                if (label) return [ this[0], scope.labels.get_mangled(label) ];\n        };\n\n        return w.with_walkers({\n                \"function\": _lambda,\n                \"defun\": function() {\n                        // move function declarations to the top when\n                        // they are not in some block.\n                        var ast = _lambda.apply(this, arguments);\n                        switch (w.parent()[0]) {\n                            case \"toplevel\":\n                            case \"function\":\n                            case \"defun\":\n                                return MAP.at_top(ast);\n                        }\n                        return ast;\n                },\n                \"label\": function(label, stat) {\n                        if (scope.labels.refs[label]) return [\n                                this[0],\n                                scope.labels.get_mangled(label, true),\n                                walk(stat)\n                        ];\n                        return walk(stat);\n                },\n                \"break\": _breacont,\n                \"continue\": _breacont,\n                \"var\": _vardefs,\n                \"const\": _vardefs,\n                \"name\": function(name) {\n                        return get_define(name) || [ this[0], get_mangled(name) ];\n                },\n                \"try\": function(t, c, f) {\n                        return [ this[0],\n                                 MAP(t, walk),\n                                 c != null ? [ get_mangled(c[0]), MAP(c[1], walk) ] : null,\n                                 f != null ? MAP(f, walk) : null ];\n                },\n                \"toplevel\": function(body) {\n                        var self = this;\n                        return with_scope(self.scope, function(){\n                                return [ self[0], MAP(body, walk) ];\n                        });\n                }\n        }, function() {\n                return walk(ast_add_scope(ast));\n        });\n};\n\n/* -----[\n   - compress foo[\"bar\"] into foo.bar,\n   - remove block brackets {} where possible\n   - join consecutive var declarations\n   - various optimizations for IFs:\n     - if (cond) foo(); else bar();  ==>  cond?foo():bar();\n     - if (cond) foo();  ==>  cond&&foo();\n     - if (foo) return bar(); else return baz();  ==> return foo?bar():baz(); // also for throw\n     - if (foo) return bar(); else something();  ==> {if(foo)return bar();something()}\n   ]----- */\n\nvar warn = function(){};\n\nfunction best_of(ast1, ast2) {\n        return gen_code(ast1).length > gen_code(ast2[0] == \"stat\" ? ast2[1] : ast2).length ? ast2 : ast1;\n};\n\nfunction last_stat(b) {\n        if (b[0] == \"block\" && b[1] && b[1].length > 0)\n                return b[1][b[1].length - 1];\n        return b;\n}\n\nfunction aborts(t) {\n        if (t) switch (last_stat(t)[0]) {\n            case \"return\":\n            case \"break\":\n            case \"continue\":\n            case \"throw\":\n                return true;\n        }\n};\n\nfunction boolean_expr(expr) {\n        return ( (expr[0] == \"unary-prefix\"\n                  && member(expr[1], [ \"!\", \"delete\" ])) ||\n\n                 (expr[0] == \"binary\"\n                  && member(expr[1], [ \"in\", \"instanceof\", \"==\", \"!=\", \"===\", \"!==\", \"<\", \"<=\", \">=\", \">\" ])) ||\n\n                 (expr[0] == \"binary\"\n                  && member(expr[1], [ \"&&\", \"||\" ])\n                  && boolean_expr(expr[2])\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"conditional\"\n                  && boolean_expr(expr[2])\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"assign\"\n                  && expr[1] === true\n                  && boolean_expr(expr[3])) ||\n\n                 (expr[0] == \"seq\"\n                  && boolean_expr(expr[expr.length - 1]))\n               );\n};\n\nfunction empty(b) {\n        return !b || (b[0] == \"block\" && (!b[1] || b[1].length == 0));\n};\n\nfunction is_string(node) {\n        return (node[0] == \"string\" ||\n                node[0] == \"unary-prefix\" && node[1] == \"typeof\" ||\n                node[0] == \"binary\" && node[1] == \"+\" &&\n                (is_string(node[2]) || is_string(node[3])));\n};\n\nvar when_constant = (function(){\n\n        var $NOT_CONSTANT = {};\n\n        // this can only evaluate constant expressions.  If it finds anything\n        // not constant, it throws $NOT_CONSTANT.\n        function evaluate(expr) {\n                switch (expr[0]) {\n                    case \"string\":\n                    case \"num\":\n                        return expr[1];\n                    case \"name\":\n                    case \"atom\":\n                        switch (expr[1]) {\n                            case \"true\": return true;\n                            case \"false\": return false;\n                            case \"null\": return null;\n                        }\n                        break;\n                    case \"unary-prefix\":\n                        switch (expr[1]) {\n                            case \"!\": return !evaluate(expr[2]);\n                            case \"typeof\": return typeof evaluate(expr[2]);\n                            case \"~\": return ~evaluate(expr[2]);\n                            case \"-\": return -evaluate(expr[2]);\n                            case \"+\": return +evaluate(expr[2]);\n                        }\n                        break;\n                    case \"binary\":\n                        var left = expr[2], right = expr[3];\n                        switch (expr[1]) {\n                            case \"&&\"         : return evaluate(left) &&         evaluate(right);\n                            case \"||\"         : return evaluate(left) ||         evaluate(right);\n                            case \"|\"          : return evaluate(left) |          evaluate(right);\n                            case \"&\"          : return evaluate(left) &          evaluate(right);\n                            case \"^\"          : return evaluate(left) ^          evaluate(right);\n                            case \"+\"          : return evaluate(left) +          evaluate(right);\n                            case \"*\"          : return evaluate(left) *          evaluate(right);\n                            case \"/\"          : return evaluate(left) /          evaluate(right);\n                            case \"%\"          : return evaluate(left) %          evaluate(right);\n                            case \"-\"          : return evaluate(left) -          evaluate(right);\n                            case \"<<\"         : return evaluate(left) <<         evaluate(right);\n                            case \">>\"         : return evaluate(left) >>         evaluate(right);\n                            case \">>>\"        : return evaluate(left) >>>        evaluate(right);\n                            case \"==\"         : return evaluate(left) ==         evaluate(right);\n                            case \"===\"        : return evaluate(left) ===        evaluate(right);\n                            case \"!=\"         : return evaluate(left) !=         evaluate(right);\n                            case \"!==\"        : return evaluate(left) !==        evaluate(right);\n                            case \"<\"          : return evaluate(left) <          evaluate(right);\n                            case \"<=\"         : return evaluate(left) <=         evaluate(right);\n                            case \">\"          : return evaluate(left) >          evaluate(right);\n                            case \">=\"         : return evaluate(left) >=         evaluate(right);\n                            case \"in\"         : return evaluate(left) in         evaluate(right);\n                            case \"instanceof\" : return evaluate(left) instanceof evaluate(right);\n                        }\n                }\n                throw $NOT_CONSTANT;\n        };\n\n        return function(expr, yes, no) {\n                try {\n                        var val = evaluate(expr), ast;\n                        switch (typeof val) {\n                            case \"string\": ast =  [ \"string\", val ]; break;\n                            case \"number\": ast =  [ \"num\", val ]; break;\n                            case \"boolean\": ast =  [ \"name\", String(val) ]; break;\n                            default:\n                                if (val === null) { ast = [ \"atom\", \"null\" ]; break; }\n                                throw new Error(\"Can't handle constant of type: \" + (typeof val));\n                        }\n                        return yes.call(expr, ast, val);\n                } catch(ex) {\n                        if (ex === $NOT_CONSTANT) {\n                                if (expr[0] == \"binary\"\n                                    && (expr[1] == \"===\" || expr[1] == \"!==\")\n                                    && ((is_string(expr[2]) && is_string(expr[3]))\n                                        || (boolean_expr(expr[2]) && boolean_expr(expr[3])))) {\n                                        expr[1] = expr[1].substr(0, 2);\n                                }\n                                else if (no && expr[0] == \"binary\"\n                                         && (expr[1] == \"||\" || expr[1] == \"&&\")) {\n                                    // the whole expression is not constant but the lval may be...\n                                    try {\n                                        var lval = evaluate(expr[2]);\n                                        expr = ((expr[1] == \"&&\" && (lval ? expr[3] : lval))    ||\n                                                (expr[1] == \"||\" && (lval ? lval    : expr[3])) ||\n                                                expr);\n                                    } catch(ex2) {\n                                        // IGNORE... lval is not constant\n                                    }\n                                }\n                                return no ? no.call(expr, expr) : null;\n                        }\n                        else throw ex;\n                }\n        };\n\n})();\n\nfunction warn_unreachable(ast) {\n        if (!empty(ast))\n                warn(\"Dropping unreachable code: \" + gen_code(ast, true));\n};\n\nfunction prepare_ifs(ast) {\n        var w = ast_walker(), walk = w.walk;\n        // In this first pass, we rewrite ifs which abort with no else with an\n        // if-else.  For example:\n        //\n        // if (x) {\n        //     blah();\n        //     return y;\n        // }\n        // foobar();\n        //\n        // is rewritten into:\n        //\n        // if (x) {\n        //     blah();\n        //     return y;\n        // } else {\n        //     foobar();\n        // }\n        function redo_if(statements) {\n                statements = MAP(statements, walk);\n\n                for (var i = 0; i < statements.length; ++i) {\n                        var fi = statements[i];\n                        if (fi[0] != \"if\") continue;\n\n                        if (fi[3] && walk(fi[3])) continue;\n\n                        var t = walk(fi[2]);\n                        if (!aborts(t)) continue;\n\n                        var conditional = walk(fi[1]);\n\n                        var e_body = redo_if(statements.slice(i + 1));\n                        var e = e_body.length == 1 ? e_body[0] : [ \"block\", e_body ];\n\n                        return statements.slice(0, i).concat([ [\n                                fi[0],          // \"if\"\n                                conditional,    // conditional\n                                t,              // then\n                                e               // else\n                        ] ]);\n                }\n\n                return statements;\n        };\n\n        function redo_if_lambda(name, args, body) {\n                body = redo_if(body);\n                return [ this[0], name, args, body ];\n        };\n\n        function redo_if_block(statements) {\n                return [ this[0], statements != null ? redo_if(statements) : null ];\n        };\n\n        return w.with_walkers({\n                \"defun\": redo_if_lambda,\n                \"function\": redo_if_lambda,\n                \"block\": redo_if_block,\n                \"splice\": redo_if_block,\n                \"toplevel\": function(statements) {\n                        return [ this[0], redo_if(statements) ];\n                },\n                \"try\": function(t, c, f) {\n                        return [\n                                this[0],\n                                redo_if(t),\n                                c != null ? [ c[0], redo_if(c[1]) ] : null,\n                                f != null ? redo_if(f) : null\n                        ];\n                }\n        }, function() {\n                return walk(ast);\n        });\n};\n\nfunction for_side_effects(ast, handler) {\n        var w = ast_walker(), walk = w.walk;\n        var $stop = {}, $restart = {};\n        function stop() { throw $stop };\n        function restart() { throw $restart };\n        function found(){ return handler.call(this, this, w, stop, restart) };\n        function unary(op) {\n                if (op == \"++\" || op == \"--\")\n                        return found.apply(this, arguments);\n        };\n        return w.with_walkers({\n                \"try\": found,\n                \"throw\": found,\n                \"return\": found,\n                \"new\": found,\n                \"switch\": found,\n                \"break\": found,\n                \"continue\": found,\n                \"assign\": found,\n                \"call\": found,\n                \"if\": found,\n                \"for\": found,\n                \"for-in\": found,\n                \"while\": found,\n                \"do\": found,\n                \"return\": found,\n                \"unary-prefix\": unary,\n                \"unary-postfix\": unary,\n                \"defun\": found\n        }, function(){\n                while (true) try {\n                        walk(ast);\n                        break;\n                } catch(ex) {\n                        if (ex === $stop) break;\n                        if (ex === $restart) continue;\n                        throw ex;\n                }\n        });\n};\n\nfunction ast_lift_variables(ast) {\n        var w = ast_walker(), walk = w.walk, scope;\n        function do_body(body, env) {\n                var _scope = scope;\n                scope = env;\n                body = MAP(body, walk);\n                var hash = {}, names = MAP(env.names, function(type, name){\n                        if (type != \"var\") return MAP.skip;\n                        if (!env.references(name)) return MAP.skip;\n                        hash[name] = true;\n                        return [ name ];\n                });\n                if (names.length > 0) {\n                        // looking for assignments to any of these variables.\n                        // we can save considerable space by moving the definitions\n                        // in the var declaration.\n                        for_side_effects([ \"block\", body ], function(ast, walker, stop, restart) {\n                                if (ast[0] == \"assign\"\n                                    && ast[1] === true\n                                    && ast[2][0] == \"name\"\n                                    && HOP(hash, ast[2][1])) {\n                                        // insert the definition into the var declaration\n                                        for (var i = names.length; --i >= 0;) {\n                                                if (names[i][0] == ast[2][1]) {\n                                                        if (names[i][1]) // this name already defined, we must stop\n                                                                stop();\n                                                        names[i][1] = ast[3]; // definition\n                                                        names.push(names.splice(i, 1)[0]);\n                                                        break;\n                                                }\n                                        }\n                                        // remove this assignment from the AST.\n                                        var p = walker.parent();\n                                        if (p[0] == \"seq\") {\n                                                var a = p[2];\n                                                a.unshift(0, p.length);\n                                                p.splice.apply(p, a);\n                                        }\n                                        else if (p[0] == \"stat\") {\n                                                p.splice(0, p.length, \"block\"); // empty statement\n                                        }\n                                        else {\n                                                stop();\n                                        }\n                                        restart();\n                                }\n                                stop();\n                        });\n                        body.unshift([ \"var\", names ]);\n                }\n                scope = _scope;\n                return body;\n        };\n        function _vardefs(defs) {\n                var ret = null;\n                for (var i = defs.length; --i >= 0;) {\n                        var d = defs[i];\n                        if (!d[1]) continue;\n                        d = [ \"assign\", true, [ \"name\", d[0] ], d[1] ];\n                        if (ret == null) ret = d;\n                        else ret = [ \"seq\", d, ret ];\n                }\n                if (ret == null) {\n                        if (w.parent()[0] == \"for-in\")\n                                return [ \"name\", defs[0][0] ];\n                        return MAP.skip;\n                }\n                return [ \"stat\", ret ];\n        };\n        function _toplevel(body) {\n                return [ this[0], do_body(body, this.scope) ];\n        };\n        return w.with_walkers({\n                \"function\": function(name, args, body){\n                        for (var i = args.length; --i >= 0 && !body.scope.references(args[i]);)\n                                args.pop();\n                        if (!body.scope.references(name)) name = null;\n                        return [ this[0], name, args, do_body(body, body.scope) ];\n                },\n                \"defun\": function(name, args, body){\n                        if (!scope.references(name)) return MAP.skip;\n                        for (var i = args.length; --i >= 0 && !body.scope.references(args[i]);)\n                                args.pop();\n                        return [ this[0], name, args, do_body(body, body.scope) ];\n                },\n                \"var\": _vardefs,\n                \"toplevel\": _toplevel\n        }, function(){\n                return walk(ast_add_scope(ast));\n        });\n};\n\nfunction ast_squeeze(ast, options) {\n        options = defaults(options, {\n                make_seqs   : true,\n                dead_code   : true,\n                no_warnings : false,\n                keep_comps  : true\n        });\n\n        var w = ast_walker(), walk = w.walk;\n\n        function negate(c) {\n                var not_c = [ \"unary-prefix\", \"!\", c ];\n                switch (c[0]) {\n                    case \"unary-prefix\":\n                        return c[1] == \"!\" && boolean_expr(c[2]) ? c[2] : not_c;\n                    case \"seq\":\n                        c = slice(c);\n                        c[c.length - 1] = negate(c[c.length - 1]);\n                        return c;\n                    case \"conditional\":\n                        return best_of(not_c, [ \"conditional\", c[1], negate(c[2]), negate(c[3]) ]);\n                    case \"binary\":\n                        var op = c[1], left = c[2], right = c[3];\n                        if (!options.keep_comps) switch (op) {\n                            case \"<=\"  : return [ \"binary\", \">\", left, right ];\n                            case \"<\"   : return [ \"binary\", \">=\", left, right ];\n                            case \">=\"  : return [ \"binary\", \"<\", left, right ];\n                            case \">\"   : return [ \"binary\", \"<=\", left, right ];\n                        }\n                        switch (op) {\n                            case \"==\"  : return [ \"binary\", \"!=\", left, right ];\n                            case \"!=\"  : return [ \"binary\", \"==\", left, right ];\n                            case \"===\" : return [ \"binary\", \"!==\", left, right ];\n                            case \"!==\" : return [ \"binary\", \"===\", left, right ];\n                            case \"&&\"  : return best_of(not_c, [ \"binary\", \"||\", negate(left), negate(right) ]);\n                            case \"||\"  : return best_of(not_c, [ \"binary\", \"&&\", negate(left), negate(right) ]);\n                        }\n                        break;\n                }\n                return not_c;\n        };\n\n        function make_conditional(c, t, e) {\n                var make_real_conditional = function() {\n                        if (c[0] == \"unary-prefix\" && c[1] == \"!\") {\n                                return e ? [ \"conditional\", c[2], e, t ] : [ \"binary\", \"||\", c[2], t ];\n                        } else {\n                                return e ? best_of(\n                                        [ \"conditional\", c, t, e ],\n                                        [ \"conditional\", negate(c), e, t ]\n                                ) : [ \"binary\", \"&&\", c, t ];\n                        }\n                };\n                // shortcut the conditional if the expression has a constant value\n                return when_constant(c, function(ast, val){\n                        warn_unreachable(val ? e : t);\n                        return          (val ? t : e);\n                }, make_real_conditional);\n        };\n\n        function rmblock(block) {\n                if (block != null && block[0] == \"block\" && block[1]) {\n                        if (block[1].length == 1)\n                                block = block[1][0];\n                        else if (block[1].length == 0)\n                                block = [ \"block\" ];\n                }\n                return block;\n        };\n\n        function _lambda(name, args, body) {\n                return [ this[0], name, args, tighten(body, \"lambda\") ];\n        };\n\n        // this function does a few things:\n        // 1. discard useless blocks\n        // 2. join consecutive var declarations\n        // 3. remove obviously dead code\n        // 4. transform consecutive statements using the comma operator\n        // 5. if block_type == \"lambda\" and it detects constructs like if(foo) return ... - rewrite like if (!foo) { ... }\n        function tighten(statements, block_type) {\n                statements = MAP(statements, walk);\n\n                statements = statements.reduce(function(a, stat){\n                        if (stat[0] == \"block\") {\n                                if (stat[1]) {\n                                        a.push.apply(a, stat[1]);\n                                }\n                        } else {\n                                a.push(stat);\n                        }\n                        return a;\n                }, []);\n\n                statements = (function(a, prev){\n                        statements.forEach(function(cur){\n                                if (prev && ((cur[0] == \"var\" && prev[0] == \"var\") ||\n                                             (cur[0] == \"const\" && prev[0] == \"const\"))) {\n                                        prev[1] = prev[1].concat(cur[1]);\n                                } else {\n                                        a.push(cur);\n                                        prev = cur;\n                                }\n                        });\n                        return a;\n                })([]);\n\n                if (options.dead_code) statements = (function(a, has_quit){\n                        statements.forEach(function(st){\n                                if (has_quit) {\n                                        if (st[0] == \"function\" || st[0] == \"defun\") {\n                                                a.push(st);\n                                        }\n                                        else if (st[0] == \"var\" || st[0] == \"const\") {\n                                                if (!options.no_warnings)\n                                                        warn(\"Variables declared in unreachable code\");\n                                                st[1] = MAP(st[1], function(def){\n                                                        if (def[1] && !options.no_warnings)\n                                                                warn_unreachable([ \"assign\", true, [ \"name\", def[0] ], def[1] ]);\n                                                        return [ def[0] ];\n                                                });\n                                                a.push(st);\n                                        }\n                                        else if (!options.no_warnings)\n                                                warn_unreachable(st);\n                                }\n                                else {\n                                        a.push(st);\n                                        if (member(st[0], [ \"return\", \"throw\", \"break\", \"continue\" ]))\n                                                has_quit = true;\n                                }\n                        });\n                        return a;\n                })([]);\n\n                if (options.make_seqs) statements = (function(a, prev) {\n                        statements.forEach(function(cur){\n                                if (prev && prev[0] == \"stat\" && cur[0] == \"stat\") {\n                                        prev[1] = [ \"seq\", prev[1], cur[1] ];\n                                } else {\n                                        a.push(cur);\n                                        prev = cur;\n                                }\n                        });\n                        if (a.length >= 2\n                            && a[a.length-2][0] == \"stat\"\n                            && (a[a.length-1][0] == \"return\" || a[a.length-1][0] == \"throw\")\n                            && a[a.length-1][1])\n                        {\n                                a.splice(a.length - 2, 2,\n                                         [ a[a.length-1][0],\n                                           [ \"seq\", a[a.length-2][1], a[a.length-1][1] ]]);\n                        }\n                        return a;\n                })([]);\n\n                // this increases jQuery by 1K.  Probably not such a good idea after all..\n                // part of this is done in prepare_ifs anyway.\n                // if (block_type == \"lambda\") statements = (function(i, a, stat){\n                //         while (i < statements.length) {\n                //                 stat = statements[i++];\n                //                 if (stat[0] == \"if\" && !stat[3]) {\n                //                         if (stat[2][0] == \"return\" && stat[2][1] == null) {\n                //                                 a.push(make_if(negate(stat[1]), [ \"block\", statements.slice(i) ]));\n                //                                 break;\n                //                         }\n                //                         var last = last_stat(stat[2]);\n                //                         if (last[0] == \"return\" && last[1] == null) {\n                //                                 a.push(make_if(stat[1], [ \"block\", stat[2][1].slice(0, -1) ], [ \"block\", statements.slice(i) ]));\n                //                                 break;\n                //                         }\n                //                 }\n                //                 a.push(stat);\n                //         }\n                //         return a;\n                // })(0, []);\n\n                return statements;\n        };\n\n        function make_if(c, t, e) {\n                return when_constant(c, function(ast, val){\n                        if (val) {\n                                t = walk(t);\n                                warn_unreachable(e);\n                                return t || [ \"block\" ];\n                        } else {\n                                e = walk(e);\n                                warn_unreachable(t);\n                                return e || [ \"block\" ];\n                        }\n                }, function() {\n                        return make_real_if(c, t, e);\n                });\n        };\n\n        function abort_else(c, t, e) {\n                var ret = [ [ \"if\", negate(c), e ] ];\n                if (t[0] == \"block\") {\n                        if (t[1]) ret = ret.concat(t[1]);\n                } else {\n                        ret.push(t);\n                }\n                return walk([ \"block\", ret ]);\n        };\n\n        function make_real_if(c, t, e) {\n                c = walk(c);\n                t = walk(t);\n                e = walk(e);\n\n                if (empty(t)) {\n                        c = negate(c);\n                        t = e;\n                        e = null;\n                } else if (empty(e)) {\n                        e = null;\n                } else {\n                        // if we have both else and then, maybe it makes sense to switch them?\n                        (function(){\n                                var a = gen_code(c);\n                                var n = negate(c);\n                                var b = gen_code(n);\n                                if (b.length < a.length) {\n                                        var tmp = t;\n                                        t = e;\n                                        e = tmp;\n                                        c = n;\n                                }\n                        })();\n                }\n                if (empty(e) && empty(t))\n                        return [ \"stat\", c ];\n                var ret = [ \"if\", c, t, e ];\n                if (t[0] == \"if\" && empty(t[3]) && empty(e)) {\n                        ret = best_of(ret, walk([ \"if\", [ \"binary\", \"&&\", c, t[1] ], t[2] ]));\n                }\n                else if (t[0] == \"stat\") {\n                        if (e) {\n                                if (e[0] == \"stat\")\n                                        ret = best_of(ret, [ \"stat\", make_conditional(c, t[1], e[1]) ]);\n                                else if (aborts(e))\n                                        ret = abort_else(c, t, e);\n                        }\n                        else {\n                                ret = best_of(ret, [ \"stat\", make_conditional(c, t[1]) ]);\n                        }\n                }\n                else if (e && t[0] == e[0] && (t[0] == \"return\" || t[0] == \"throw\") && t[1] && e[1]) {\n                        ret = best_of(ret, [ t[0], make_conditional(c, t[1], e[1] ) ]);\n                }\n                else if (e && aborts(t)) {\n                        ret = [ [ \"if\", c, t ] ];\n                        if (e[0] == \"block\") {\n                                if (e[1]) ret = ret.concat(e[1]);\n                        }\n                        else {\n                                ret.push(e);\n                        }\n                        ret = walk([ \"block\", ret ]);\n                }\n                else if (t && aborts(e)) {\n                        ret = abort_else(c, t, e);\n                }\n                return ret;\n        };\n\n        function _do_while(cond, body) {\n                return when_constant(cond, function(cond, val){\n                        if (!val) {\n                                warn_unreachable(body);\n                                return [ \"block\" ];\n                        } else {\n                                return [ \"for\", null, null, null, walk(body) ];\n                        }\n                });\n        };\n\n        return w.with_walkers({\n                \"sub\": function(expr, subscript) {\n                        if (subscript[0] == \"string\") {\n                                var name = subscript[1];\n                                if (is_identifier(name))\n                                        return [ \"dot\", walk(expr), name ];\n                                else if (/^[1-9][0-9]*$/.test(name) || name === \"0\")\n                                        return [ \"sub\", walk(expr), [ \"num\", parseInt(name, 10) ] ];\n                        }\n                },\n                \"if\": make_if,\n                \"toplevel\": function(body) {\n                        return [ \"toplevel\", tighten(body) ];\n                },\n                \"switch\": function(expr, body) {\n                        var last = body.length - 1;\n                        return [ \"switch\", walk(expr), MAP(body, function(branch, i){\n                                var block = tighten(branch[1]);\n                                if (i == last && block.length > 0) {\n                                        var node = block[block.length - 1];\n                                        if (node[0] == \"break\" && !node[1])\n                                                block.pop();\n                                }\n                                return [ branch[0] ? walk(branch[0]) : null, block ];\n                        }) ];\n                },\n                \"function\": _lambda,\n                \"defun\": _lambda,\n                \"block\": function(body) {\n                        if (body) return rmblock([ \"block\", tighten(body) ]);\n                },\n                \"binary\": function(op, left, right) {\n                        return when_constant([ \"binary\", op, walk(left), walk(right) ], function yes(c){\n                                return best_of(walk(c), this);\n                        }, function no() {\n                                return function(){\n                                        if(op != \"==\" && op != \"!=\") return;\n                                        var l = walk(left), r = walk(right);\n                                        if(l && l[0] == \"unary-prefix\" && l[1] == \"!\" && l[2][0] == \"num\")\n                                                left = ['num', +!l[2][1]];\n                                        else if (r && r[0] == \"unary-prefix\" && r[1] == \"!\" && r[2][0] == \"num\")\n                                                right = ['num', +!r[2][1]];\n                                        return [\"binary\", op, left, right];\n                                }() || this;\n                        });\n                },\n                \"conditional\": function(c, t, e) {\n                        return make_conditional(walk(c), walk(t), walk(e));\n                },\n                \"try\": function(t, c, f) {\n                        return [\n                                \"try\",\n                                tighten(t),\n                                c != null ? [ c[0], tighten(c[1]) ] : null,\n                                f != null ? tighten(f) : null\n                        ];\n                },\n                \"unary-prefix\": function(op, expr) {\n                        expr = walk(expr);\n                        var ret = [ \"unary-prefix\", op, expr ];\n                        if (op == \"!\")\n                                ret = best_of(ret, negate(expr));\n                        return when_constant(ret, function(ast, val){\n                                return walk(ast); // it's either true or false, so minifies to !0 or !1\n                        }, function() { return ret });\n                },\n                \"name\": function(name) {\n                        switch (name) {\n                            case \"true\": return [ \"unary-prefix\", \"!\", [ \"num\", 0 ]];\n                            case \"false\": return [ \"unary-prefix\", \"!\", [ \"num\", 1 ]];\n                        }\n                },\n                \"while\": _do_while,\n                \"assign\": function(op, lvalue, rvalue) {\n                        lvalue = walk(lvalue);\n                        rvalue = walk(rvalue);\n                        var okOps = [ '+', '-', '/', '*', '%', '>>', '<<', '>>>', '|', '^', '&' ];\n                        if (op === true && lvalue[0] === \"name\" && rvalue[0] === \"binary\" &&\n                            ~okOps.indexOf(rvalue[1]) && rvalue[2][0] === \"name\" &&\n                            rvalue[2][1] === lvalue[1]) {\n                                return [ this[0], rvalue[1], lvalue, rvalue[3] ]\n                        }\n                        return [ this[0], op, lvalue, rvalue ];\n                }\n        }, function() {\n                for (var i = 0; i < 2; ++i) {\n                        ast = prepare_ifs(ast);\n                        ast = walk(ast);\n                }\n                return ast;\n        });\n};\n\n/* -----[ re-generate code from the AST ]----- */\n\nvar DOT_CALL_NO_PARENS = jsp.array_to_hash([\n        \"name\",\n        \"array\",\n        \"object\",\n        \"string\",\n        \"dot\",\n        \"sub\",\n        \"call\",\n        \"regexp\",\n        \"defun\"\n]);\n\nfunction make_string(str, ascii_only) {\n        var dq = 0, sq = 0;\n        str = str.replace(/[\\\\\\b\\f\\n\\r\\t\\x22\\x27\\u2028\\u2029\\0]/g, function(s){\n                switch (s) {\n                    case \"\\\\\": return \"\\\\\\\\\";\n                    case \"\\b\": return \"\\\\b\";\n                    case \"\\f\": return \"\\\\f\";\n                    case \"\\n\": return \"\\\\n\";\n                    case \"\\r\": return \"\\\\r\";\n                    case \"\\t\": return \"\\\\t\";\n                    case \"\\u2028\": return \"\\\\u2028\";\n                    case \"\\u2029\": return \"\\\\u2029\";\n                    case '\"': ++dq; return '\"';\n                    case \"'\": ++sq; return \"'\";\n                    case \"\\0\": return \"\\\\0\";\n                }\n                return s;\n        });\n        if (ascii_only) str = to_ascii(str);\n        if (dq > sq) return \"'\" + str.replace(/\\x27/g, \"\\\\'\") + \"'\";\n        else return '\"' + str.replace(/\\x22/g, '\\\\\"') + '\"';\n};\n\nfunction to_ascii(str) {\n        return str.replace(/[\\u0080-\\uffff]/g, function(ch) {\n                var code = ch.charCodeAt(0).toString(16);\n                while (code.length < 4) code = \"0\" + code;\n                return \"\\\\u\" + code;\n        });\n};\n\nvar SPLICE_NEEDS_BRACKETS = jsp.array_to_hash([ \"if\", \"while\", \"do\", \"for\", \"for-in\", \"with\" ]);\n\nfunction gen_code(ast, options) {\n        options = defaults(options, {\n                indent_start : 0,\n                indent_level : 4,\n                quote_keys   : false,\n                space_colon  : false,\n                beautify     : false,\n                ascii_only   : false,\n                inline_script: false\n        });\n        var beautify = !!options.beautify;\n        var indentation = 0,\n            newline = beautify ? \"\\n\" : \"\",\n            space = beautify ? \" \" : \"\";\n\n        function encode_string(str) {\n                var ret = make_string(str, options.ascii_only);\n                if (options.inline_script)\n                        ret = ret.replace(/<\\x2fscript([>\\/\\t\\n\\f\\r ])/gi, \"<\\\\/script$1\");\n                return ret;\n        };\n\n        function make_name(name) {\n                name = name.toString();\n                if (options.ascii_only)\n                        name = to_ascii(name);\n                return name;\n        };\n\n        function indent(line) {\n                if (line == null)\n                        line = \"\";\n                if (beautify)\n                        line = repeat_string(\" \", options.indent_start + indentation * options.indent_level) + line;\n                return line;\n        };\n\n        function with_indent(cont, incr) {\n                if (incr == null) incr = 1;\n                indentation += incr;\n                try { return cont.apply(null, slice(arguments, 1)); }\n                finally { indentation -= incr; }\n        };\n\n        function add_spaces(a) {\n                if (beautify)\n                        return a.join(\" \");\n                var b = [];\n                for (var i = 0; i < a.length; ++i) {\n                        var next = a[i + 1];\n                        b.push(a[i]);\n                        if (next &&\n                            ((/[a-z0-9_\\x24]$/i.test(a[i].toString()) && /^[a-z0-9_\\x24]/i.test(next.toString())) ||\n                             (/[\\+\\-]$/.test(a[i].toString()) && /^[\\+\\-]/.test(next.toString())))) {\n                                b.push(\" \");\n                        }\n                }\n                return b.join(\"\");\n        };\n\n        function add_commas(a) {\n                return a.join(\",\" + space);\n        };\n\n        function parenthesize(expr) {\n                var gen = make(expr);\n                for (var i = 1; i < arguments.length; ++i) {\n                        var el = arguments[i];\n                        if ((el instanceof Function && el(expr)) || expr[0] == el)\n                                return \"(\" + gen + \")\";\n                }\n                return gen;\n        };\n\n        function best_of(a) {\n                if (a.length == 1) {\n                        return a[0];\n                }\n                if (a.length == 2) {\n                        var b = a[1];\n                        a = a[0];\n                        return a.length <= b.length ? a : b;\n                }\n                return best_of([ a[0], best_of(a.slice(1)) ]);\n        };\n\n        function needs_parens(expr) {\n                if (expr[0] == \"function\" || expr[0] == \"object\") {\n                        // dot/call on a literal function requires the\n                        // function literal itself to be parenthesized\n                        // only if it's the first \"thing\" in a\n                        // statement.  This means that the parent is\n                        // \"stat\", but it could also be a \"seq\" and\n                        // we're the first in this \"seq\" and the\n                        // parent is \"stat\", and so on.  Messy stuff,\n                        // but it worths the trouble.\n                        var a = slice(w.stack()), self = a.pop(), p = a.pop();\n                        while (p) {\n                                if (p[0] == \"stat\") return true;\n                                if (((p[0] == \"seq\" || p[0] == \"call\" || p[0] == \"dot\" || p[0] == \"sub\" || p[0] == \"conditional\") && p[1] === self) ||\n                                    ((p[0] == \"binary\" || p[0] == \"assign\" || p[0] == \"unary-postfix\") && p[2] === self)) {\n                                        self = p;\n                                        p = a.pop();\n                                } else {\n                                        return false;\n                                }\n                        }\n                }\n                return !HOP(DOT_CALL_NO_PARENS, expr[0]);\n        };\n\n        function make_num(num) {\n                var str = num.toString(10), a = [ str.replace(/^0\\./, \".\") ], m;\n                if (Math.floor(num) === num) {\n                        if (num >= 0) {\n                                a.push(\"0x\" + num.toString(16).toLowerCase(), // probably pointless\n                                       \"0\" + num.toString(8)); // same.\n                        } else {\n                                a.push(\"-0x\" + (-num).toString(16).toLowerCase(), // probably pointless\n                                       \"-0\" + (-num).toString(8)); // same.\n                        }\n                        if ((m = /^(.*?)(0+)$/.exec(num))) {\n                                a.push(m[1] + \"e\" + m[2].length);\n                        }\n                } else if ((m = /^0?\\.(0+)(.*)$/.exec(num))) {\n                        a.push(m[2] + \"e-\" + (m[1].length + m[2].length),\n                               str.substr(str.indexOf(\".\")));\n                }\n                return best_of(a);\n        };\n\n        var w = ast_walker();\n        var make = w.walk;\n        return w.with_walkers({\n                \"string\": encode_string,\n                \"num\": make_num,\n                \"name\": make_name,\n                \"debugger\": function(){ return \"debugger\" },\n                \"toplevel\": function(statements) {\n                        return make_block_statements(statements)\n                                .join(newline + newline);\n                },\n                \"splice\": function(statements) {\n                        var parent = w.parent();\n                        if (HOP(SPLICE_NEEDS_BRACKETS, parent)) {\n                                // we need block brackets in this case\n                                return make_block.apply(this, arguments);\n                        } else {\n                                return MAP(make_block_statements(statements, true),\n                                           function(line, i) {\n                                                   // the first line is already indented\n                                                   return i > 0 ? indent(line) : line;\n                                           }).join(newline);\n                        }\n                },\n                \"block\": make_block,\n                \"var\": function(defs) {\n                        return \"var \" + add_commas(MAP(defs, make_1vardef)) + \";\";\n                },\n                \"const\": function(defs) {\n                        return \"const \" + add_commas(MAP(defs, make_1vardef)) + \";\";\n                },\n                \"try\": function(tr, ca, fi) {\n                        var out = [ \"try\", make_block(tr) ];\n                        if (ca) out.push(\"catch\", \"(\" + ca[0] + \")\", make_block(ca[1]));\n                        if (fi) out.push(\"finally\", make_block(fi));\n                        return add_spaces(out);\n                },\n                \"throw\": function(expr) {\n                        return add_spaces([ \"throw\", make(expr) ]) + \";\";\n                },\n                \"new\": function(ctor, args) {\n                        args = args.length > 0 ? \"(\" + add_commas(MAP(args, function(expr){\n                                return parenthesize(expr, \"seq\");\n                        })) + \")\" : \"\";\n                        return add_spaces([ \"new\", parenthesize(ctor, \"seq\", \"binary\", \"conditional\", \"assign\", function(expr){\n                                var w = ast_walker(), has_call = {};\n                                try {\n                                        w.with_walkers({\n                                                \"call\": function() { throw has_call },\n                                                \"function\": function() { return this }\n                                        }, function(){\n                                                w.walk(expr);\n                                        });\n                                } catch(ex) {\n                                        if (ex === has_call)\n                                                return true;\n                                        throw ex;\n                                }\n                        }) + args ]);\n                },\n                \"switch\": function(expr, body) {\n                        return add_spaces([ \"switch\", \"(\" + make(expr) + \")\", make_switch_block(body) ]);\n                },\n                \"break\": function(label) {\n                        var out = \"break\";\n                        if (label != null)\n                                out += \" \" + make_name(label);\n                        return out + \";\";\n                },\n                \"continue\": function(label) {\n                        var out = \"continue\";\n                        if (label != null)\n                                out += \" \" + make_name(label);\n                        return out + \";\";\n                },\n                \"conditional\": function(co, th, el) {\n                        return add_spaces([ parenthesize(co, \"assign\", \"seq\", \"conditional\"), \"?\",\n                                            parenthesize(th, \"seq\"), \":\",\n                                            parenthesize(el, \"seq\") ]);\n                },\n                \"assign\": function(op, lvalue, rvalue) {\n                        if (op && op !== true) op += \"=\";\n                        else op = \"=\";\n                        return add_spaces([ make(lvalue), op, parenthesize(rvalue, \"seq\") ]);\n                },\n                \"dot\": function(expr) {\n                        var out = make(expr), i = 1;\n                        if (expr[0] == \"num\") {\n                                if (!/\\./.test(expr[1]))\n                                        out += \".\";\n                        } else if (needs_parens(expr))\n                                out = \"(\" + out + \")\";\n                        while (i < arguments.length)\n                                out += \".\" + make_name(arguments[i++]);\n                        return out;\n                },\n                \"call\": function(func, args) {\n                        var f = make(func);\n                        if (f.charAt(0) != \"(\" && needs_parens(func))\n                                f = \"(\" + f + \")\";\n                        return f + \"(\" + add_commas(MAP(args, function(expr){\n                                return parenthesize(expr, \"seq\");\n                        })) + \")\";\n                },\n                \"function\": make_function,\n                \"defun\": make_function,\n                \"if\": function(co, th, el) {\n                        var out = [ \"if\", \"(\" + make(co) + \")\", el ? make_then(th) : make(th) ];\n                        if (el) {\n                                out.push(\"else\", make(el));\n                        }\n                        return add_spaces(out);\n                },\n                \"for\": function(init, cond, step, block) {\n                        var out = [ \"for\" ];\n                        init = (init != null ? make(init) : \"\").replace(/;*\\s*$/, \";\" + space);\n                        cond = (cond != null ? make(cond) : \"\").replace(/;*\\s*$/, \";\" + space);\n                        step = (step != null ? make(step) : \"\").replace(/;*\\s*$/, \"\");\n                        var args = init + cond + step;\n                        if (args == \"; ; \") args = \";;\";\n                        out.push(\"(\" + args + \")\", make(block));\n                        return add_spaces(out);\n                },\n                \"for-in\": function(vvar, key, hash, block) {\n                        return add_spaces([ \"for\", \"(\" +\n                                            (vvar ? make(vvar).replace(/;+$/, \"\") : make(key)),\n                                            \"in\",\n                                            make(hash) + \")\", make(block) ]);\n                },\n                \"while\": function(condition, block) {\n                        return add_spaces([ \"while\", \"(\" + make(condition) + \")\", make(block) ]);\n                },\n                \"do\": function(condition, block) {\n                        return add_spaces([ \"do\", make(block), \"while\", \"(\" + make(condition) + \")\" ]) + \";\";\n                },\n                \"return\": function(expr) {\n                        var out = [ \"return\" ];\n                        if (expr != null) out.push(make(expr));\n                        return add_spaces(out) + \";\";\n                },\n                \"binary\": function(operator, lvalue, rvalue) {\n                        var left = make(lvalue), right = make(rvalue);\n                        // XXX: I'm pretty sure other cases will bite here.\n                        //      we need to be smarter.\n                        //      adding parens all the time is the safest bet.\n                        if (member(lvalue[0], [ \"assign\", \"conditional\", \"seq\" ]) ||\n                            lvalue[0] == \"binary\" && PRECEDENCE[operator] > PRECEDENCE[lvalue[1]] ||\n                            lvalue[0] == \"function\" && needs_parens(this)) {\n                                left = \"(\" + left + \")\";\n                        }\n                        if (member(rvalue[0], [ \"assign\", \"conditional\", \"seq\" ]) ||\n                            rvalue[0] == \"binary\" && PRECEDENCE[operator] >= PRECEDENCE[rvalue[1]] &&\n                            !(rvalue[1] == operator && member(operator, [ \"&&\", \"||\", \"*\" ]))) {\n                                right = \"(\" + right + \")\";\n                        }\n                        else if (!beautify && options.inline_script && (operator == \"<\" || operator == \"<<\")\n                                 && rvalue[0] == \"regexp\" && /^script/i.test(rvalue[1])) {\n                                right = \" \" + right;\n                        }\n                        return add_spaces([ left, operator, right ]);\n                },\n                \"unary-prefix\": function(operator, expr) {\n                        var val = make(expr);\n                        if (!(expr[0] == \"num\" || (expr[0] == \"unary-prefix\" && !HOP(OPERATORS, operator + expr[1])) || !needs_parens(expr)))\n                                val = \"(\" + val + \")\";\n                        return operator + (jsp.is_alphanumeric_char(operator.charAt(0)) ? \" \" : \"\") + val;\n                },\n                \"unary-postfix\": function(operator, expr) {\n                        var val = make(expr);\n                        if (!(expr[0] == \"num\" || (expr[0] == \"unary-postfix\" && !HOP(OPERATORS, operator + expr[1])) || !needs_parens(expr)))\n                                val = \"(\" + val + \")\";\n                        return val + operator;\n                },\n                \"sub\": function(expr, subscript) {\n                        var hash = make(expr);\n                        if (needs_parens(expr))\n                                hash = \"(\" + hash + \")\";\n                        return hash + \"[\" + make(subscript) + \"]\";\n                },\n                \"object\": function(props) {\n                        var obj_needs_parens = needs_parens(this);\n                        if (props.length == 0)\n                                return obj_needs_parens ? \"({})\" : \"{}\";\n                        var out = \"{\" + newline + with_indent(function(){\n                                return MAP(props, function(p){\n                                        if (p.length == 3) {\n                                                // getter/setter.  The name is in p[0], the arg.list in p[1][2], the\n                                                // body in p[1][3] and type (\"get\" / \"set\") in p[2].\n                                                return indent(make_function(p[0], p[1][2], p[1][3], p[2]));\n                                        }\n                                        var key = p[0], val = parenthesize(p[1], \"seq\");\n                                        if (options.quote_keys) {\n                                                key = encode_string(key);\n                                        } else if ((typeof key == \"number\" || !beautify && +key + \"\" == key)\n                                                   && parseFloat(key) >= 0) {\n                                                key = make_num(+key);\n                                        } else if (!is_identifier(key)) {\n                                                key = encode_string(key);\n                                        }\n                                        return indent(add_spaces(beautify && options.space_colon\n                                                                 ? [ key, \":\", val ]\n                                                                 : [ key + \":\", val ]));\n                                }).join(\",\" + newline);\n                        }) + newline + indent(\"}\");\n                        return obj_needs_parens ? \"(\" + out + \")\" : out;\n                },\n                \"regexp\": function(rx, mods) {\n                        return \"/\" + rx + \"/\" + mods;\n                },\n                \"array\": function(elements) {\n                        if (elements.length == 0) return \"[]\";\n                        return add_spaces([ \"[\", add_commas(MAP(elements, function(el, i){\n                                if (!beautify && el[0] == \"atom\" && el[1] == \"undefined\") return i === elements.length - 1 ? \",\" : \"\";\n                                return parenthesize(el, \"seq\");\n                        })), \"]\" ]);\n                },\n                \"stat\": function(stmt) {\n                        return make(stmt).replace(/;*\\s*$/, \";\");\n                },\n                \"seq\": function() {\n                        return add_commas(MAP(slice(arguments), make));\n                },\n                \"label\": function(name, block) {\n                        return add_spaces([ make_name(name), \":\", make(block) ]);\n                },\n                \"with\": function(expr, block) {\n                        return add_spaces([ \"with\", \"(\" + make(expr) + \")\", make(block) ]);\n                },\n                \"atom\": function(name) {\n                        return make_name(name);\n                }\n        }, function(){ return make(ast) });\n\n        // The squeezer replaces \"block\"-s that contain only a single\n        // statement with the statement itself; technically, the AST\n        // is correct, but this can create problems when we output an\n        // IF having an ELSE clause where the THEN clause ends in an\n        // IF *without* an ELSE block (then the outer ELSE would refer\n        // to the inner IF).  This function checks for this case and\n        // adds the block brackets if needed.\n        function make_then(th) {\n                if (th == null) return \";\";\n                if (th[0] == \"do\") {\n                        // https://github.com/mishoo/UglifyJS/issues/#issue/57\n                        // IE croaks with \"syntax error\" on code like this:\n                        //     if (foo) do ... while(cond); else ...\n                        // we need block brackets around do/while\n                        return make_block([ th ]);\n                }\n                var b = th;\n                while (true) {\n                        var type = b[0];\n                        if (type == \"if\") {\n                                if (!b[3])\n                                        // no else, we must add the block\n                                        return make([ \"block\", [ th ]]);\n                                b = b[3];\n                        }\n                        else if (type == \"while\" || type == \"do\") b = b[2];\n                        else if (type == \"for\" || type == \"for-in\") b = b[4];\n                        else break;\n                }\n                return make(th);\n        };\n\n        function make_function(name, args, body, keyword) {\n                var out = keyword || \"function\";\n                if (name) {\n                        out += \" \" + make_name(name);\n                }\n                out += \"(\" + add_commas(MAP(args, make_name)) + \")\";\n                out = add_spaces([ out, make_block(body) ]);\n                return needs_parens(this) ? \"(\" + out + \")\" : out;\n        };\n\n        function must_has_semicolon(node) {\n                switch (node[0]) {\n                    case \"with\":\n                    case \"while\":\n                        return empty(node[2]); // `with' or `while' with empty body?\n                    case \"for\":\n                    case \"for-in\":\n                        return empty(node[4]); // `for' with empty body?\n                    case \"if\":\n                        if (empty(node[2]) && !node[3]) return true; // `if' with empty `then' and no `else'\n                        if (node[3]) {\n                                if (empty(node[3])) return true; // `else' present but empty\n                                return must_has_semicolon(node[3]); // dive into the `else' branch\n                        }\n                        return must_has_semicolon(node[2]); // dive into the `then' branch\n                }\n        };\n\n        function make_block_statements(statements, noindent) {\n                for (var a = [], last = statements.length - 1, i = 0; i <= last; ++i) {\n                        var stat = statements[i];\n                        var code = make(stat);\n                        if (code != \";\") {\n                                if (!beautify && i == last && !must_has_semicolon(stat)) {\n                                        code = code.replace(/;+\\s*$/, \"\");\n                                }\n                                a.push(code);\n                        }\n                }\n                return noindent ? a : MAP(a, indent);\n        };\n\n        function make_switch_block(body) {\n                var n = body.length;\n                if (n == 0) return \"{}\";\n                return \"{\" + newline + MAP(body, function(branch, i){\n                        var has_body = branch[1].length > 0, code = with_indent(function(){\n                                return indent(branch[0]\n                                              ? add_spaces([ \"case\", make(branch[0]) + \":\" ])\n                                              : \"default:\");\n                        }, 0.5) + (has_body ? newline + with_indent(function(){\n                                return make_block_statements(branch[1]).join(newline);\n                        }) : \"\");\n                        if (!beautify && has_body && i < n - 1)\n                                code += \";\";\n                        return code;\n                }).join(newline) + newline + indent(\"}\");\n        };\n\n        function make_block(statements) {\n                if (!statements) return \";\";\n                if (statements.length == 0) return \"{}\";\n                return \"{\" + newline + with_indent(function(){\n                        return make_block_statements(statements).join(newline);\n                }) + newline + indent(\"}\");\n        };\n\n        function make_1vardef(def) {\n                var name = def[0], val = def[1];\n                if (val != null)\n                        name = add_spaces([ make_name(name), \"=\", parenthesize(val, \"seq\") ]);\n                return name;\n        };\n\n};\n\nfunction split_lines(code, max_line_length) {\n        var splits = [ 0 ];\n        jsp.parse(function(){\n                var next_token = jsp.tokenizer(code);\n                var last_split = 0;\n                var prev_token;\n                function current_length(tok) {\n                        return tok.pos - last_split;\n                };\n                function split_here(tok) {\n                        last_split = tok.pos;\n                        splits.push(last_split);\n                };\n                function custom(){\n                        var tok = next_token.apply(this, arguments);\n                        out: {\n                                if (prev_token) {\n                                        if (prev_token.type == \"keyword\") break out;\n                                }\n                                if (current_length(tok) > max_line_length) {\n                                        switch (tok.type) {\n                                            case \"keyword\":\n                                            case \"atom\":\n                                            case \"name\":\n                                            case \"punc\":\n                                                split_here(tok);\n                                                break out;\n                                        }\n                                }\n                        }\n                        prev_token = tok;\n                        return tok;\n                };\n                custom.context = function() {\n                        return next_token.context.apply(this, arguments);\n                };\n                return custom;\n        }());\n        return splits.map(function(pos, i){\n                return code.substring(pos, splits[i + 1] || code.length);\n        }).join(\"\\n\");\n};\n\n/* -----[ Utilities ]----- */\n\nfunction repeat_string(str, i) {\n        if (i <= 0) return \"\";\n        if (i == 1) return str;\n        var d = repeat_string(str, i >> 1);\n        d += d;\n        if (i & 1) d += str;\n        return d;\n};\n\nfunction defaults(args, defs) {\n        var ret = {};\n        if (args === true)\n                args = {};\n        for (var i in defs) if (HOP(defs, i)) {\n                ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];\n        }\n        return ret;\n};\n\nfunction is_identifier(name) {\n        return /^[a-z_$][a-z0-9_$]*$/i.test(name)\n                && name != \"this\"\n                && !HOP(jsp.KEYWORDS_ATOM, name)\n                && !HOP(jsp.RESERVED_WORDS, name)\n                && !HOP(jsp.KEYWORDS, name);\n};\n\nfunction HOP(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n\n// some utilities\n\nvar MAP;\n\n(function(){\n        MAP = function(a, f, o) {\n                var ret = [], top = [], i;\n                function doit() {\n                        var val = f.call(o, a[i], i);\n                        if (val instanceof AtTop) {\n                                val = val.v;\n                                if (val instanceof Splice) {\n                                        top.push.apply(top, val.v);\n                                } else {\n                                        top.push(val);\n                                }\n                        }\n                        else if (val != skip) {\n                                if (val instanceof Splice) {\n                                        ret.push.apply(ret, val.v);\n                                } else {\n                                        ret.push(val);\n                                }\n                        }\n                };\n                if (a instanceof Array) for (i = 0; i < a.length; ++i) doit();\n                else for (i in a) if (HOP(a, i)) doit();\n                return top.concat(ret);\n        };\n        MAP.at_top = function(val) { return new AtTop(val) };\n        MAP.splice = function(val) { return new Splice(val) };\n        var skip = MAP.skip = {};\n        function AtTop(val) { this.v = val };\n        function Splice(val) { this.v = val };\n})();\n\n/* -----[ Exports ]----- */\n\nexports.ast_walker = ast_walker;\nexports.ast_mangle = ast_mangle;\nexports.ast_squeeze = ast_squeeze;\nexports.ast_lift_variables = ast_lift_variables;\nexports.gen_code = gen_code;\nexports.ast_add_scope = ast_add_scope;\nexports.set_logger = function(logger) { warn = logger };\nexports.make_string = make_string;\nexports.split_lines = split_lines;\nexports.MAP = MAP;\n\n// keep this last!\nexports.ast_squeeze_more = __webpack_require__(/*! ./squeeze-more */ \"./node_modules/uglify-js/lib/squeeze-more.js\").ast_squeeze_more;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/uglify-js/lib/process.js?");

/***/ }),

/***/ "./node_modules/uglify-js/lib/squeeze-more.js":
/*!****************************************************!*\
  !*** ./node_modules/uglify-js/lib/squeeze-more.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var jsp = __webpack_require__(/*! ./parse-js */ \"./node_modules/uglify-js/lib/parse-js.js\"),\n    pro = __webpack_require__(/*! ./process */ \"./node_modules/uglify-js/lib/process.js\"),\n    slice = jsp.slice,\n    member = jsp.member,\n    curry = jsp.curry,\n    MAP = pro.MAP,\n    PRECEDENCE = jsp.PRECEDENCE,\n    OPERATORS = jsp.OPERATORS;\n\nfunction ast_squeeze_more(ast) {\n        var w = pro.ast_walker(), walk = w.walk, scope;\n        function with_scope(s, cont) {\n                var save = scope, ret;\n                scope = s;\n                ret = cont();\n                scope = save;\n                return ret;\n        };\n        function _lambda(name, args, body) {\n                return [ this[0], name, args, with_scope(body.scope, curry(MAP, body, walk)) ];\n        };\n        return w.with_walkers({\n                \"toplevel\": function(body) {\n                        return [ this[0], with_scope(this.scope, curry(MAP, body, walk)) ];\n                },\n                \"function\": _lambda,\n                \"defun\": _lambda,\n                \"new\": function(ctor, args) {\n                        if (ctor[0] == \"name\") {\n                                if (ctor[1] == \"Array\" && !scope.has(\"Array\")) {\n                                        if (args.length != 1) {\n                                                return [ \"array\", args ];\n                                        } else {\n                                                return walk([ \"call\", [ \"name\", \"Array\" ], args ]);\n                                        }\n                                } else if (ctor[1] == \"Object\" && !scope.has(\"Object\")) {\n                                        if (!args.length) {\n                                                return [ \"object\", [] ];\n                                        } else {\n                                                return walk([ \"call\", [ \"name\", \"Object\" ], args ]);\n                                        }\n                                } else if ((ctor[1] == \"RegExp\" || ctor[1] == \"Function\" || ctor[1] == \"Error\") && !scope.has(ctor[1])) {\n                                        return walk([ \"call\", [ \"name\", ctor[1] ], args]);\n                                }\n                        }\n                },\n                \"call\": function(expr, args) {\n                        if (expr[0] == \"dot\" && expr[2] == \"toString\" && args.length == 0) {\n                                // foo.toString()  ==>  foo+\"\"\n                                return [ \"binary\", \"+\", expr[1], [ \"string\", \"\" ]];\n                        }\n                        if (expr[0] == \"name\") {\n                                if (expr[1] == \"Array\" && args.length != 1 && !scope.has(\"Array\")) {\n                                        return [ \"array\", args ];\n                                }\n                                if (expr[1] == \"Object\" && !args.length && !scope.has(\"Object\")) {\n                                        return [ \"object\", [] ];\n                                }\n                                if (expr[1] == \"String\" && !scope.has(\"String\")) {\n                                        return [ \"binary\", \"+\", args[0], [ \"string\", \"\" ]];\n                                }\n                        }\n                }\n        }, function() {\n                return walk(pro.ast_add_scope(ast));\n        });\n};\n\nexports.ast_squeeze_more = ast_squeeze_more;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/uglify-js/lib/squeeze-more.js?");

/***/ }),

/***/ "./node_modules/uglify-js/uglify-js.js":
/*!*********************************************!*\
  !*** ./node_modules/uglify-js/uglify-js.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//convienence function(src, [options]);\nfunction uglify(orig_code, options){\n  options || (options = {});\n  var jsp = uglify.parser;\n  var pro = uglify.uglify;\n\n  var ast = jsp.parse(orig_code, options.strict_semicolons); // parse code and get the initial AST\n  ast = pro.ast_mangle(ast, options.mangle_options); // get a new AST with mangled names\n  ast = pro.ast_squeeze(ast, options.squeeze_options); // get an AST with compression optimizations\n  var final_code = pro.gen_code(ast, options.gen_options); // compressed code here\n  return final_code;\n};\n\nuglify.parser = __webpack_require__(/*! ./lib/parse-js */ \"./node_modules/uglify-js/lib/parse-js.js\");\nuglify.uglify = __webpack_require__(/*! ./lib/process */ \"./node_modules/uglify-js/lib/process.js\");\n\nmodule.exports = uglify\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/uglify-js/uglify-js.js?");

/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/*\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\n\nvar punycode = __webpack_require__(/*! punycode */ \"./node_modules/punycode/punycode.js\");\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n/*\n * define these here so at least they only have to be\n * compiled once on the first module load.\n */\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^?\\s]*)(\\?[^\\s]*)?$/,\n\n  /*\n   * RFC 2396: characters reserved for delimiting URLs.\n   * We actually just auto-escape these.\n   */\n  delims = [\n    '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'\n  ],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = [\n    '{', '}', '|', '\\\\', '^', '`'\n  ].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  /*\n   * Characters that are never ever allowed in a hostname.\n   * Note that any invalid chars are also handled, but these\n   * are the ones that are *expected* to be seen, so we fast-path\n   * them.\n   */\n  nonHostChars = [\n    '%', '/', '?', ';', '#'\n  ].concat(autoEscape),\n  hostEndingChars = [\n    '/', '?', '#'\n  ],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    javascript: true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    http: true,\n    https: true,\n    ftp: true,\n    gopher: true,\n    file: true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  },\n  querystring = __webpack_require__(/*! qs */ \"./node_modules/qs/lib/index.js\");\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && typeof url === 'object' && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {\n  if (typeof url !== 'string') {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  /*\n   * Copy chrome, IE, opera backslash-handling behavior.\n   * Back slashes before the query string get converted to forward slashes\n   * See: https://code.google.com/p/chromium/issues/detail?id=25916\n   */\n  var queryIndex = url.indexOf('?'),\n    splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  /*\n   * trim before proceeding.\n   * This is to support parse stuff like \"  http://foo.com  \\n\"\n   */\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  /*\n   * figure out if it's got a host\n   * user@server is *always* interpreted as a hostname, and url\n   * resolution will treat //foo/bar as host=foo,path=bar because that's\n   * how the browser resolves relative URLs.\n   */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@/]+@[^@/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || (proto && !slashedProtocol[proto]))) {\n\n    /*\n     * there's a hostname.\n     * the first instance of /, ?, ;, or # ends the host.\n     *\n     * If there is an @ in the hostname, then non-host chars *are* allowed\n     * to the left of the last @ sign, unless some host-ending character\n     * comes *before* the @-sign.\n     * URLs are obnoxious.\n     *\n     * ex:\n     * http://a@b@c/ => user:a@b host:c\n     * http://a@b?@c => user:a host:c path:/?@c\n     */\n\n    /*\n     * v0.12 TODO(isaacs): This is not quite how Chrome does things.\n     * Review our test case against browsers more comprehensively.\n     */\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n\n    /*\n     * at this point, either we have an explicit point where the\n     * auth portion cannot go past, or the last @ char is the decider.\n     */\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      /*\n       * atSign must be in auth portion.\n       * http://a@b/c@d => host:b auth:a path:/c@d\n       */\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    /*\n     * Now we have a portion which is definitely the auth.\n     * Pull that off.\n     */\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) { hostEnd = hec; }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) { hostEnd = rest.length; }\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    /*\n     * we've indicated that there is a hostname,\n     * so even if it's empty, it has to be present.\n     */\n    this.hostname = this.hostname || '';\n\n    /*\n     * if hostname begins with [ and ends with ]\n     * assume that it's an IPv6 address.\n     */\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              /*\n               * we replace non-ASCII char with a temporary placeholder\n               * we need this to make sure size of hostname is not\n               * broken by replacing non-ASCII by nothing\n               */\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      /*\n       * IDNA Support: Returns a punycoded representation of \"domain\".\n       * It only converts parts of the domain name that\n       * have non-ASCII characters, i.e. it doesn't matter if\n       * you call it with a domain that already is ASCII-only.\n       */\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    /*\n     * strip [ and ] from the hostname\n     * the host field still retains them, though\n     */\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  /*\n   * now rest is set to the post-host stuff.\n   * chop off any delim chars.\n   */\n  if (!unsafeProtocol[lowerProto]) {\n\n    /*\n     * First, make 100% sure that any \"autoEscape\" chars get\n     * escaped, even if encodeURIComponent doesn't think they\n     * need to be.\n     */\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1) { continue; }\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  // to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  /*\n   * ensure it's an object, and not a string url.\n   * If it's an obj, this is a no-op.\n   * this way, you can call url_format() on strings\n   * to clean up potentially wonky urls.\n   */\n  if (typeof obj === 'string') { obj = urlParse(obj); }\n  if (!(obj instanceof Url)) { return Url.prototype.format.call(obj); }\n  return obj.format();\n}\n\nUrl.prototype.format = function () {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n    pathname = this.pathname || '',\n    hash = this.hash || '',\n    host = false,\n    query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query && typeof this.query === 'object' && Object.keys(this.query).length) {\n    query = querystring.stringify(this.query, {\n      arrayFormat: 'repeat',\n      addQueryPrefix: false\n    });\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') { protocol += ':'; }\n\n  /*\n   * only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n   * unless they had them to begin with.\n   */\n  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') { pathname = '/' + pathname; }\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') { hash = '#' + hash; }\n  if (search && search.charAt(0) !== '?') { search = '?' + search; }\n\n  pathname = pathname.replace(/[?#]/g, function (match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function (relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) { return relative; }\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function (relative) {\n  if (typeof relative === 'string') {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  /*\n   * hash is always overridden, no matter what.\n   * even href=\"\" will remove it.\n   */\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol') { result[rkey] = relative[rkey]; }\n    }\n\n    // urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {\n      result.pathname = '/';\n      result.path = result.pathname;\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    /*\n     * if it's a known url protocol, then changing\n     * the protocol does weird things\n     * first, if it's not file:, then we MUST have a host,\n     * and if there was a path\n     * to begin with, then we MUST have a path.\n     * if it is file:, then the host is dropped,\n     * because that's known to be hostless.\n     * anything else is assumed to be absolute.\n     */\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift())) { }\n      if (!relative.host) { relative.host = ''; }\n      if (!relative.hostname) { relative.hostname = ''; }\n      if (relPath[0] !== '') { relPath.unshift(''); }\n      if (relPath.length < 2) { relPath.unshift(''); }\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',\n    isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',\n    mustEndAbs = isRelAbs || isSourceAbs || (result.host && relative.pathname),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    relPath = relative.pathname && relative.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  /*\n   * if the url is a non-slashed url, then relative\n   * links like ../.. should be able\n   * to crawl up to the hostname, as well.  This is strange.\n   * result.protocol has already been set by now.\n   * Later on, put the first path part into the host field.\n   */\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') { srcPath[0] = result.host; } else { srcPath.unshift(result.host); }\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') { relPath[0] = relative.host; } else { relPath.unshift(relative.host); }\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = relative.host || relative.host === '' ? relative.host : result.host;\n    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    /*\n     * it's relative\n     * throw away the existing file, and take the new path instead.\n     */\n    if (!srcPath) { srcPath = []; }\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (relative.search != null) {\n    /*\n     * just pull out the search.\n     * like href='?foo'.\n     * Put this after the other two cases because it simplifies the booleans\n     */\n    if (psychotic) {\n      result.host = srcPath.shift();\n      result.hostname = result.host;\n      /*\n       * occationaly the auth can get stuck only in host\n       * this especially happens in cases like\n       * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n       */\n      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.hostname = authInHost.shift();\n        result.host = result.hostname;\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    // to support http.request\n    if (result.pathname !== null || result.search !== null) {\n      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    /*\n     * no path at all.  easy.\n     * we've already handled the other stuff above.\n     */\n    result.pathname = null;\n    // to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  /*\n   * if a url ENDs in . or .., then it must get a trailing slash.\n   * however, if it ends in anything else non-slashy,\n   * then it must NOT get a trailing slash.\n   */\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === '';\n\n  /*\n   * strip single dots, resolve double dots to parent dir\n   * if the path tries to go above the root, `up` ends up > 0\n   */\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' || (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = isAbsolute ? '' : srcPath.length ? srcPath.shift() : '';\n    result.host = result.hostname;\n    /*\n     * occationaly the auth can get stuck only in host\n     * this especially happens in cases like\n     * url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n     */\n    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.hostname = authInHost.shift();\n      result.host = result.hostname;\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (srcPath.length > 0) {\n    result.pathname = srcPath.join('/');\n  } else {\n    result.pathname = null;\n    result.path = null;\n  }\n\n  // to support request.http\n  if (result.pathname !== null || result.search !== null) {\n    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function () {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/url/url.js?");

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!__webpack_require__.g.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = __webpack_require__.g.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/util-deprecate/browser.js?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/support/types.js":
/*!********************************************!*\
  !*** ./node_modules/util/support/types.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\n\nvar isArgumentsObject = __webpack_require__(/*! is-arguments */ \"./node_modules/is-arguments/index.js\");\nvar isGeneratorFunction = __webpack_require__(/*! is-generator-function */ \"./node_modules/is-generator-function/index.js\");\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"./node_modules/which-typed-array/index.js\");\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"./node_modules/is-typed-array/index.js\");\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/util/support/types.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = __webpack_require__(/*! ./support/types */ \"./node_modules/util/support/types.js\");\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/which-typed-array/index.js":
/*!*************************************************!*\
  !*** ./node_modules/which-typed-array/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! for-each */ \"./node_modules/for-each/index.js\");\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"./node_modules/available-typed-arrays/index.js\");\nvar callBind = __webpack_require__(/*! call-bind */ \"./node_modules/call-bind/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\nvar gOPD = __webpack_require__(/*! gopd */ \"./node_modules/gopd/index.js\");\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\n\nvar g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || /** @type {(array: readonly unknown[], value: unknown) => keyof array} */ function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array | Float64Array | BigInt64Array | BigUint64Array} TypedArray */\n/** @typedef {'Int8Array' | 'Uint8Array' | 'Uint8ClampedArray' | 'Int16Array' | 'Uint16Array' | 'Int32Array' | 'Uint32Array' | 'Float32Array' | 'Float64Array' | 'BigInt64Array' | 'BigUint64Array'} TypedArrayName */\n/** @type {{ [k in `\\$${TypedArrayName}`]?: (receiver: TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {import('.')} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, typeof cache>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${TypedArrayName}`) => void} */ function (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/which-typed-array/index.js?");

/***/ }),

/***/ "./node_modules/xmlhttprequest/lib/XMLHttpRequest.js":
/*!***********************************************************!*\
  !*** ./node_modules/xmlhttprequest/lib/XMLHttpRequest.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar Url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n  , spawn = (__webpack_require__(/*! child_process */ \"?2c1b\").spawn)\n  , fs = __webpack_require__(/*! fs */ \"?f4f5\");\n\nexports.XMLHttpRequest = function() {\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = __webpack_require__(/*! http */ \"./node_modules/stream-http/index.js\");\n  var https = __webpack_require__(/*! https */ \"./node_modules/https-browserify/index.js\");\n\n  // Holds http.js objects\n  var client;\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\",\n  };\n\n  var headers = defaultHeaders;\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw \"SecurityError: Request method not allowed\";\n      return;\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\";\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return;\n    }\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send flag is true\";\n    }\n    headers[header] = value;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  }\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: connection must be opened before send() is called\";\n    }\n\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send has already been called\";\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        var host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        var host = \"localhost\";\n        break;\n\n      default:\n        throw \"Protocol not supported.\";\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw \"XMLHttpRequest: Only GET method is supported\";\n      }\n\n      if (settings.async) {\n        fs.readFile(url.pathname, 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(url.pathname, 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers\n    };\n\n    // Reset error flag\n    errorFlag = false;\n\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Create the request\n      request = doRequest(options, function(resp) {\n        response = resp;\n        response.setEncoding(\"utf8\");\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n            sendFlag = false;\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }).on('error', function(error) {\n        self.handleError(error);\n      });\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + syncFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + syncFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + syncFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"});\"\n        + (data ? \"req.write('\" + data.replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      while((self.responseText = fs.readFileSync(syncFile, 'utf8')) == \"\") {\n        // Wait while the file is empty\n      }\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(syncFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   */\n  this.handleError = function(error) {\n    this.status = 503;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = defaultHeaders;\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = true;\n\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      self[\"on\" + event]();\n    }\n    if (event in listeners) {\n      for (var i = 0, len = listeners[event].length; i < len; i++) {\n        listeners[event][i].call(self);\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if (self.readyState !== state) {\n      self.readyState = state;\n\n      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n        self.dispatchEvent(\"readystatechange\");\n      }\n\n      if (self.readyState === self.DONE && !errorFlag) {\n        self.dispatchEvent(\"load\");\n        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n        self.dispatchEvent(\"loadend\");\n      }\n    }\n  };\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/xmlhttprequest/lib/XMLHttpRequest.js?");

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/xtend/immutable.js?");

/***/ }),

/***/ "./node_modules/zeparser/Tokenizer.js":
/*!********************************************!*\
  !*** ./node_modules/zeparser/Tokenizer.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("if (true) {\r\n\tvar window = {Unicode: (__webpack_require__(/*! ./unicodecategories */ \"./node_modules/zeparser/unicodecategories.js\").Unicode)};\r\n\texports.Tokenizer = Tokenizer;\r\n}\r\n\r\n/*!\r\n * Tokenizer for JavaScript / ECMAScript 5\r\n * (c) Peter van der Zee, qfox.nl\r\n */\r\n\r\n/**\r\n * @param {Object} inp\r\n */\r\nfunction Tokenizer(inp){\r\n\tthis.inp = inp||'';\r\n\t// replace all other line terminators with \\n (leave \\r\\n in tact though). we should probably remove the shadowInp when finished...\r\n\t// only replace \\r if it is not followed by a \\n else \\r\\n would become \\n\\n causing a double newline where it is just a single\r\n\tthis.shadowInp = (inp||'').replace(Tokenizer.regexNormalizeNewlines, '\\n');\r\n\tthis.pos = 0;\r\n\tthis.line = 0;\r\n\tthis.column = 0;\r\n\tthis.cache = {};\r\n\t\r\n\tthis.errorStack = [];\r\n\t\r\n\tthis.wtree = [];\r\n\tthis.btree = [];\r\n\t\r\n//\tthis.regexWhiteSpace = Tokenizer.regexWhiteSpace;\r\n\tthis.regexLineTerminator = Tokenizer.regexLineTerminator; // used in fallback\r\n\tthis.regexAsciiIdentifier = Tokenizer.regexAsciiIdentifier;\r\n\tthis.hashAsciiIdentifier = Tokenizer.hashAsciiIdentifier;\r\n//\tthis.regexHex = Tokenizer.regexHex;\r\n\tthis.hashHex = Tokenizer.hashHex\r\n\tthis.regexUnicodeEscape = Tokenizer.regexUnicodeEscape;\r\n\tthis.regexIdentifierStop = Tokenizer.regexIdentifierStop;\r\n\tthis.hashIdentifierStop = Tokenizer.hashIdentifierStop;\r\n//\tthis.regexPunctuators = Tokenizer.regexPunctuators;\r\n\tthis.regexNumber = Tokenizer.regexNumber;\r\n\tthis.regexNewline = Tokenizer.regexNewline;\r\n\t\r\n\tthis.regexBig = Tokenizer.regexBig;\r\n\tthis.regexBigAlt = Tokenizer.regexBigAlt;\r\n\t\r\n\tthis.tokenCount = 0;\r\n\tthis.tokenCountNoWhite = 0;\r\n\t\r\n\tthis.Unicode = window.Unicode;\r\n\t\r\n\t// if the Parser throws an error. it will set this property to the next match\r\n\t// at the time of the error (which was not what it was expecting at that point) \r\n\t// and pass on an \"error\" match. the error should be scooped on the stack and \r\n\t// this property should be returned, without looking at the input...\r\n\tthis.errorEscape = null;\r\n};\r\n\r\nTokenizer.prototype = {\r\n\tinp:null,\r\n\tshadowInp:null,\r\n\tpos:null,\r\n\tline:null,\r\n\tcolumn:null,\r\n\tcache:null,\r\n\terrorStack:null,\r\n\t\r\n\twtree: null, // contains whitespace (spaces, comments, newlines)\r\n\tbtree: null, // does not contain any whitespace tokens.\r\n\t\r\n\tregexLineTerminator:null,\r\n\tregexAsciiIdentifier:null,\r\n\thashAsciiIdentifier:null,\r\n\thashHex:null,\r\n\tregexUnicodeEscape:null,\r\n\tregexIdentifierStop:null,\r\n\thashIdentifierStop:null,\r\n\tregexNumber:null,\r\n\tregexNewline:null,\r\n\tregexBig:null,\r\n\tregexBigAlt:null,\r\n\ttokenCount:null,\r\n\ttokenCountNoWhite:null,\r\n\t\r\n\tUnicode:null,\r\n\t\r\n\t// storeCurrentAndFetchNextToken(bool, false, false true) to get just one token\r\n\tstoreCurrentAndFetchNextToken: function(noRegex, returnValue, stack, _dontStore){\r\n\t\tvar regex = !noRegex; // TOFIX :)\r\n\t\tvar pos = this.pos;\r\n\t\tvar inp = this.inp;\r\n\t\tvar shadowInp = this.shadowInp;\r\n\t\tvar matchedNewline = false;\r\n\t\tdo {\r\n\t\t\tif (!_dontStore) {\r\n\t\t\t\t++this.tokenCount;\r\n\t\t\t\tstack.push(returnValue);\r\n\t\t\t\t// did the parent Parser throw up?\r\n\t\t\t\tif (this.errorEscape) {\r\n\t\t\t\t\treturnValue = this.errorEscape;\r\n\t\t\t\t\tthis.errorEscape = null;\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_dontStore = false;\r\n\t\t\r\n\t\t\tif (pos >= inp.length) {\r\n\t\t\t\treturnValue = {start:inp.length,stop:inp.length,name:12/*EOF*/};\r\n\t\t\t\tbreak; \r\n\t\t\t}\r\n\t\t\tvar returnValue = null;\r\n\t\t\r\n\t\t\tvar start = pos;\r\n\t\t\tvar chr = inp[pos];\r\n\t\r\n\t\t\t//\t\t\t\t\t\t\t1 ws\t\t\t\t\t\t\t2 lt\t\t\t\t   3 scmt 4 mcmt 5/6 str 7 nr     8 rx  9 punc\r\n\t\t\t//if (true) {\r\n\t\t\t\t// substring method (I think this is faster..)\r\n\t\t\t\tvar part2 = inp.substring(pos,pos+4);\r\n\t\t\t\tvar part = this.regexBig.exec(part2);\r\n\t\t\t//} else {\r\n\t\t\t//\t// non-substring method (lastIndex)\r\n\t\t\t//\t// this method does not need a substring to apply it\r\n\t\t\t//\tthis.regexBigAlt.lastIndex = pos;\r\n\t\t\t//\tvar part = this.regexBigAlt.exec(inp);\r\n\t\t\t//}\r\n\t\t\t\r\n\t\t\tif (part[1]) { //this.regexWhiteSpace.test(chr)) { // SP, TAB, VT, FF, NBSP, BOM (, TOFIX: USP)\r\n\t\t\t\t++pos;\r\n\t\t\t\treturnValue = {start:start,stop:pos,name:9/*WHITE_SPACE*/,line:this.line,col:this.column,isWhite:true};\r\n\t\t\t\t++this.column;\r\n\t\t\t} else if (part[2]) { //this.regexLineTerminator.test(chr)) { // LF, CR, LS, PS\r\n\t\t\t\tvar end = pos+1;\r\n\t\t\t\tif (chr=='\\r' && inp[pos+1] == '\\n') ++end; // support crlf=>lf\r\n\t\t\t\treturnValue = {start:pos,stop:end,name:10/*LINETERMINATOR*/,line:this.line,col:this.column,isWhite:true};\r\n\t\t\t\tpos = end;\r\n\t\t\t\t// mark newlines for ASI\r\n\t\t\t\tmatchedNewline = true;\r\n\t\t\t\t++this.line;\r\n\t\t\t\tthis.column = 0;\r\n\t\t\t\treturnValue.hasNewline = 1;\r\n\t\t\t} else if (part[3]) { //chr == '/' && inp[pos+1] == '/') {\r\n\t\t\t\tpos = shadowInp.indexOf('\\n',pos);\r\n\t\t\t\tif (pos == -1) pos = inp.length;\r\n\t\t\t\treturnValue = {start:start,stop:pos,name:7/*COMMENT_SINGLE*/,line:this.line,col:this.column,isComment:true,isWhite:true};\r\n\t\t\t\tthis.column = returnValue.stop;\r\n\t\t\t} else if (part[4]) { //chr == '/' && inp[pos+1] == '*') {\r\n\t\t\t\tvar newpos = inp.indexOf('*/',pos);\r\n\t\t\t\tif (newpos == -1) {\r\n\t\t\t\t\tnewpos = shadowInp.indexOf('\\n', pos);\r\n\t\t\t\t\tif (newpos < 0) pos += 2;\r\n\t\t\t\t\telse pos = newpos;\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,value:inp.substring(start, pos),line:this.line,col:this.column,isComment:true,isWhite:true,tokenError:true,error:Tokenizer.Error.UnterminatedMultiLineComment};\r\n\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpos = newpos+2;\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:8/*COMMENT_MULTI*/,value:inp.substring(start, pos),line:this.line,col:this.column,isComment:true,isWhite:true};\r\n\t\r\n\t\t\t\t\t// multi line comments are also reason for asi, but only if they contain at least one newline (use shadow input, because all line terminators would be valid...)\r\n\t\t\t\t\tvar shadowValue = shadowInp.substring(start, pos);\r\n\t\t\t\t\tvar i = 0, hasNewline = 0;\r\n\t\t\t\t\twhile (i < (i = shadowValue.indexOf('\\n', i+1))) {\r\n\t\t\t\t\t\t++hasNewline;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (hasNewline) {\r\n\t\t\t\t\t\tmatchedNewline = true;\r\n\t\t\t\t\t\treturnValue.hasNewline = hasNewline;\r\n\t\t\t\t\t\tthis.line += hasNewline;\r\n\t\t\t\t\t\tthis.column = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.column = returnValue.stop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (part[5]) { //chr == \"'\") {\r\n\t\t\t\t// old method\r\n\t\t\t\t//console.log(\"old method\");\r\n\t\t\t\t\r\n\t\t\t\tvar hasNewline = 0;\r\n\t\t\t\tdo {\r\n\t\t\t\t\t// process escaped characters\r\n\t\t\t\t\twhile (pos < inp.length && inp[++pos] == '\\\\') {\r\n\t\t\t\t\t\tif (shadowInp[pos+1] == '\\n') ++hasNewline;\r\n\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.regexLineTerminator.test(inp[pos])) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,value:inp.substring(start, pos),isString:true,tokenError:true,error:Tokenizer.Error.UnterminatedDoubleStringNewline};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (pos < inp.length && inp[pos] != \"'\");\r\n\t\t\t\tif (returnValue) {} // error\r\n\t\t\t\telse if (inp[pos] != \"'\") {\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,value:inp.substring(start, pos),isString:true,tokenError:true,error:Tokenizer.Error.UnterminatedDoubleStringOther};\r\n\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++pos;\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:5/*STRING_SINGLE*/,isPrimitive:true,isString:true};\r\n\t\t\t\t\tif (hasNewline) {\r\n\t\t\t\t\t\treturnValue.hasNewline = hasNewline;\r\n\t\t\t\t\t\tthis.line += hasNewline;\r\n\t\t\t\t\t\tthis.column = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.column += (pos-start);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t} else if (part[6]) { //chr == '\"') {\r\n\t\t\t\tvar hasNewline = 0;\r\n\t\t\t\t// TODO: something like this: var regexmatch = /([^\\']|$)+/.match();\r\n\t\t\t\tdo {\r\n\t\t\t\t\t// process escaped chars\r\n\t\t\t\t\twhile (pos < inp.length && inp[++pos] == '\\\\') {\r\n\t\t\t\t\t\tif (shadowInp[pos+1] == '\\n') ++hasNewline;\r\n\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.regexLineTerminator.test(inp[pos])) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,value:inp.substring(start, pos),isString:true,tokenError:true,error:Tokenizer.Error.UnterminatedSingleStringNewline};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (pos < inp.length && inp[pos] != '\"');\r\n\t\t\t\tif (returnValue) {}\r\n\t\t\t\telse if (inp[pos] != '\"') {\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,value:inp.substring(start, pos),isString:true,tokenError:true,error:Tokenizer.Error.UnterminatedSingleStringOther};\r\n\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++pos;\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:6/*STRING_DOUBLE*/,isPrimitive:true,isString:true};\r\n\t\t\t\t\tif (hasNewline) {\r\n\t\t\t\t\t\treturnValue.hasNewline = hasNewline;\r\n\t\t\t\t\t\tthis.line += hasNewline;\r\n\t\t\t\t\t\tthis.column = 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.column += (pos-start);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (part[7]) { //(chr >= '0' && chr <= '9') || (chr == '.' && inp[pos+1] >= '0' && inp[pos+1] <= '9')) {\r\n\t\t\t\tvar nextPart = inp.substring(pos, pos+30);\r\n\t\t\t\tvar match = nextPart.match(this.regexNumber);\r\n\t\t\t\tif (match[2]) { // decimal\r\n\t\t\t\t\tvar value = match[2];\r\n\t\t\t\t\tvar parsingOctal = value[0] == '0' && value[1] && value[1] != 'e' && value[1] != 'E' && value[1] != '.';\r\n\t\t\t\t\tif (parsingOctal) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,isNumber:true,isOctal:true,tokenError:true,error:Tokenizer.Error.IllegalOctalEscape,value:value};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:start+value.length,name:4/*NUMERIC_DEC*/,isPrimitive:true,isNumber:true,value:value};\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (match[1]) { // hex\r\n\t\t\t\t\tvar value = match[1];\r\n\t\t\t\t\treturnValue = {start:start,stop:start+value.length,name:3/*NUMERIC_HEX*/,isPrimitive:true,isNumber:true,value:value};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow 'unexpected parser errror... regex fail :(';\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (value.length < 300) {\r\n\t\t\t\t\tpos += value.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// old method of parsing numbers. only used for extremely long number literals (300+ chars).\r\n\t\t\t\t\t// this method does not require substringing... just memory :)\r\n\t\t\t\t\tvar tmpReturnValue = this.oldNumberParser(pos, chr, inp, returnValue, start, Tokenizer);\r\n\t\t\t\t\tpos = tmpReturnValue[0];\r\n\t\t\t\t\treturnValue = tmpReturnValue[1];\r\n\t\t\t\t}\r\n\t\t\t} else if (regex && part[8]) { //chr == '/') { // regex cannot start with /* (would be multiline comment, and not make sense anyways). but if it was /* then an earlier if would have eated it. so we only check for /\r\n\t\t\t\tvar twinfo = []; // matching {[( info\r\n\t\t\t\tvar found = false;\r\n\t\t\t\tvar parens = [];\r\n\t\t\t\tvar nonLethalError = null;\r\n\t\t\t\twhile (++pos < inp.length) {\r\n\t\t\t\t\tchr = shadowInp[pos];\r\n\t\t\t\t\t// parse RegularExpressionChar\r\n\t\t\t\t\tif (chr == '\\n') {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,tokenError:true,errorHasContent:true,error:Tokenizer.Error.UnterminatedRegularExpressionNewline};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\tbreak; // fail\r\n\t\t\t\t\t} else if (chr == '/') {\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else if (chr == '?' || chr == '*' || chr == '+') {\r\n\t\t\t\t\t\tnonLethalError = Tokenizer.Error.NothingToRepeat;\r\n\t\t\t\t\t} else if (chr == '^') {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tinp[pos-1] != '/' && \r\n\t\t\t\t\t\t\tinp[pos-1] != '|' && \r\n\t\t\t\t\t\t\tinp[pos-1] != '(' &&\r\n\t\t\t\t\t\t\t!(inp[pos-3] == '(' && inp[pos-2] == '?' && (inp[pos-1] == ':' || inp[pos-1] == '!' || inp[pos-1] == '='))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tnonLethalError = Tokenizer.Error.StartOfMatchShouldBeAtStart;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (chr == '$') {\r\n\t\t\t\t\t\tif (inp[pos+1] != '/' && inp[pos+1] != '|' && inp[pos+1] != ')') nonLethalError = Tokenizer.Error.DollarShouldBeEnd;\r\n\t\t\t\t\t} else if (chr == '}') {\r\n\t\t\t\t\t\tnonLethalError = Tokenizer.Error.MissingOpeningCurly;\r\n\t\t\t\t\t} else { // it's a \"character\" (can be group or class), something to match\r\n\t\t\t\t\t\t// match parenthesis\r\n\t\t\t\t\t\tif (chr == '(') {\r\n\t\t\t\t\t\t\tparens.push(pos-start);\r\n\t\t\t\t\t\t} else if (chr == ')') {\r\n\t\t\t\t\t\t\tif (parens.length == 0) {\r\n\t\t\t\t\t\t\t\tnonLethalError = {start:start,stop:pos,name:14/*error*/,tokenError:true,error:Tokenizer.Error.RegexNoOpenGroups};\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar twin = parens.pop();\r\n\t\t\t\t\t\t\t\tvar now = pos-start;\r\n\t\t\t\t\t\t\t\ttwinfo[twin] = now;\r\n\t\t\t\t\t\t\t\ttwinfo[now] = twin;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// first process character class\r\n\t\t\t\t\t\tif (chr == '[') {\r\n\t\t\t\t\t\t\tvar before = pos-start;\r\n\t\t\t\t\t\t\twhile (++pos < inp.length && shadowInp[pos] != '\\n' && inp[pos] != ']') {\r\n\t\t\t\t\t\t\t\t// only newline is not allowed in class range\r\n\t\t\t\t\t\t\t\t// anything else can be escaped, most of it does not have to be escaped...\r\n\t\t\t\t\t\t\t\tif (inp[pos] == '\\\\') {\r\n\t\t\t\t\t\t\t\t\tif (shadowInp[pos+1] == '\\n') break;\r\n\t\t\t\t\t\t\t\t\telse ++pos; // skip next char. (mainly prohibits ] to be picked up as closing the group...)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\tif (inp[pos] != ']') {\r\n\t\t\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,tokenError:true,error:Tokenizer.Error.ClosingClassRangeNotFound};\r\n\t\t\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvar after = pos-start;\r\n\t\t\t\t\t\t\t\ttwinfo[before] = after;\r\n\t\t\t\t\t\t\t\ttwinfo[after] = before;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (chr == '\\\\' && shadowInp[pos+1] != '\\n') {\r\n\t\t\t\t\t\t\t// is ok anywhere in the regex (match next char literally, regardless of its otherwise special meaning)\r\n\t\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// now process repeaters (+, ? and *)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// non-collecting group (?:...) and positive (?=...) or negative (?!...) lookahead\r\n\t\t\t\t\t\tif (chr == '(') {\r\n\t\t\t\t\t\t\tif (inp[pos+1] == '?' && (inp[pos+2] == ':' || inp[pos+2] == '=' || inp[pos+2] == '!')) {\r\n\t\t\t\t\t\t\t\tpos += 2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// matching \"char\"\r\n\t\t\t\t\t\telse if (inp[pos+1] == '?') ++pos;\r\n\t\t\t\t\t\telse if (inp[pos+1] == '*' || inp[pos+1] == '+') {\r\n\t\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t\t\tif (inp[pos+1] == '?') ++pos; // non-greedy match\r\n\t\t\t\t\t\t} else if (inp[pos+1] == '{') {\r\n\t\t\t\t\t\t\tpos += 1;\r\n\t\t\t\t\t\t\tvar before = pos-start;\r\n\t\t\t\t\t\t\t// quantifier:\r\n\t\t\t\t\t\t\t// - {n}\r\n\t\t\t\t\t\t\t// - {n,}\r\n\t\t\t\t\t\t\t// - {n,m}\r\n\t\t\t\t\t\t\tif (!/[0-9]/.test(inp[pos+1])) {\r\n\t\t\t\t\t\t\t\tnonLethalError = Tokenizer.Error.QuantifierRequiresNumber;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\twhile (++pos < inp.length && /[0-9]/.test(inp[pos+1]));\r\n\t\t\t\t\t\t\tif (inp[pos+1] == ',') {\r\n\t\t\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t\t\t\twhile (pos < inp.length && /[0-9]/.test(inp[pos+1])) ++pos;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (inp[pos+1] != '}') {\r\n\t\t\t\t\t\t\t\tnonLethalError = Tokenizer.Error.QuantifierRequiresClosingCurly;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t\t\t\tvar after = pos-start;\r\n\t\t\t\t\t\t\t\ttwinfo[before] = after;\r\n\t\t\t\t\t\t\t\ttwinfo[after] = before;\r\n\t\t\t\t\t\t\t\tif (inp[pos+1] == '?') ++pos; // non-greedy match\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if found=false, fail right now. otherwise try to parse an identifiername (that's all RegularExpressionFlags is..., but it's constructed in a stupid fashion)\r\n\t\t\t\tif (!found || returnValue) {\r\n\t\t\t\t\tif (!returnValue) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,tokenError:true,error:Tokenizer.Error.UnterminatedRegularExpressionOther};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// this is the identifier scanner, for now\r\n\t\t\t\t\tdo ++pos;\r\n\t\t\t\t\twhile (pos < inp.length && this.hashAsciiIdentifier[inp[pos]]); /*this.regexAsciiIdentifier.test(inp[pos])*/ \r\n\t\r\n\t\t\t\t\tif (parens.length) {\r\n\t\t\t\t\t\t// nope, this is still an error, there was at least one paren that did not have a matching twin\r\n\t\t\t\t\t\tif (parens.length > 0) returnValue = {start:start,stop:pos,name:14/*error*/,tokenError:true,error:Tokenizer.Error.RegexOpenGroup};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t} else if (nonLethalError) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,errorHasContent:true,tokenError:true,error:nonLethalError};\r\n\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:1/*REG_EX*/,isPrimitive:true};\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturnValue.twinfo = twinfo;\r\n\t\t\t} else {\r\n\t\t\t\t// note: operators need to be ordered from longest to smallest. regex will take care of the rest.\r\n\t\t\t\t// no need to worry about div vs regex. if looking for regex, earlier if will have eaten it\r\n\t\t\t\t//var result = this.regexPunctuators.exec(inp.substring(pos,pos+4));\r\n\t\t\t\t\r\n\t\t\t\t// note: due to the regex, the single forward slash might be caught by an earlier part of the regex. so check for that.\r\n\t\t\t\tvar result = part[8] || part[9];\r\n\t\t\t\tif (result) {\r\n\t\t\t\t\t//result = result[1];\r\n\t\t\t\t\treturnValue = {start:pos,stop:pos+=result.length,name:11/*PUNCTUATOR*/,value:result};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\t// identifiers cannot start with a number. but if the leading string would be a number, another if would have eaten it already for numeric literal :)\r\n\t\t\t\t\twhile (pos < inp.length) {\r\n\t\t\t\t\t\tvar c = inp[pos];\r\n\t\r\n\t\t\t\t\t\tif (this.hashAsciiIdentifier[c]) ++pos; //if (this.regexAsciiIdentifier.test(c)) ++pos;\r\n\t\t\t\t\t\telse if (c == '\\\\' && this.regexUnicodeEscape.test(inp.substring(pos,pos+6))) pos += 6; // this is like a \\uxxxx\r\n\t\t\t\t\t\t// ok, now test unicode ranges...\r\n\t\t\t\t\t\t// basically this hardly ever happens so there's little risk of this hitting performance\r\n\t\t\t\t\t\t// however, if you do happen to have used them, it's not a problem. the parser will support it :)\r\n\t\t\t\t\t\telse if (this.Unicode) { // the unicode is optional.\r\n\t\t\t\t\t\t\t// these chars may not be part of identifier. i want to try to prevent running the unicode regexes here...\r\n\t\t\t\t\t\t\tif (this.hashIdentifierStop[c] /*this.regexIdentifierStop.test(c)*/) break;\r\n\t\t\t\t\t\t\t// for most scripts, the code wont reach here. which is good, because this is going to be relatively slow :)\r\n\t\t\t\t\t\t\tvar Unicode = this.Unicode; // cache\r\n\t\t\t\t\t\t\tif (!(\r\n\t\t\t\t\t\t\t\t\t// these may all occur in an identifier... (pure a specification compliance thing :)\r\n\t\t\t\t\t\t\t\t\tUnicode.Lu.test(c) || Unicode.Ll.test(c) || Unicode.Lt.test(c) || Unicode.Lm.test(c) || \r\n\t\t\t\t\t\t\t\t\tUnicode.Lo.test(c) || Unicode.Nl.test(c) || Unicode.Mn.test(c) || Unicode.Mc.test(c) ||\r\n\t\t\t\t\t\t\t\t\tUnicode.Nd.test(c) || Unicode.Pc.test(c) || Unicode.sp.test(c)\r\n\t\t\t\t\t\t\t)) break; // end of match.\r\n\t\t\t\t\t\t\t// passed, next char\r\n\t\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t\t} else break; // end of match.\r\n\t\t\t\r\n\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\tif (found) {\r\n\t\t\t\t\t\treturnValue = {start:start,stop:pos,name:2/*IDENTIFIER*/,value:inp.substring(start,pos)};\r\n\t\t\t\t\t\tif (returnValue.value == 'undefined' || returnValue.value == 'null' || returnValue.value == 'true' || returnValue.value == 'false') returnValue.isPrimitive = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (inp[pos] == '`') {\r\n\t\t\t\t\t\t\treturnValue = {start:start,stop:pos+1,name:14/*error*/,tokenError:true,error:Tokenizer.Error.BacktickNotSupported};\r\n\t\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\t} else if (inp[pos] == '\\\\') {\r\n\t\t\t\t\t\t\tif (inp[pos+1] == 'u') {\r\n\t\t\t\t\t\t\t\treturnValue = {start:start,stop:pos+1,name:14/*error*/,tokenError:true,error:Tokenizer.Error.InvalidUnicodeEscape};\r\n\t\t\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturnValue = {start:start,stop:pos+1,name:14/*error*/,tokenError:true,error:Tokenizer.Error.InvalidBackslash};\r\n\t\t\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturnValue = {start:start,stop:pos+1,name:14/*error*/,tokenError:true,error:Tokenizer.Error.Unknown,value:c};\r\n\t\t\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\t\t\t// try to skip this char. it's not going anywhere.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t++pos;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (returnValue) {\r\n\t\t\t\t// note that ASI's are slipstreamed in here from the parser since the tokenizer cant determine that\r\n\t\t\t\t// if this part ever changes, make sure you change that too :)\r\n\t\t\t\treturnValue.tokposw = this.wtree.length;\r\n\t\t\t\tthis.wtree.push(returnValue);\r\n\t\t\t\tif (!returnValue.isWhite) {\r\n\t\t\t\t\treturnValue.tokposb = this.btree.length;\r\n\t\t\t\t\tthis.btree.push(returnValue);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t} while (stack && returnValue && returnValue.isWhite); // WHITE_SPACE LINETERMINATOR COMMENT_SINGLE COMMENT_MULTI\r\n\t\t++this.tokenCountNoWhite;\r\n\t\t\r\n\t\tthis.pos = pos;\r\n\t\r\n\t\tif (matchedNewline) returnValue.newline = true;\r\n\t\treturn returnValue;\r\n\t},\r\n\taddTokenToStreamBefore: function(token, match){\r\n\t\tvar wtree = this.wtree;\r\n\t\tvar btree = this.btree;\r\n\t\tif (match.name == 12/*asi*/) {\r\n\t\t\ttoken.tokposw = wtree.length;\r\n\t\t\twtree.push(token);\r\n\t\t\ttoken.tokposb = btree.length;\r\n\t\t\tbtree.push(token);\r\n\t\t} else {\r\n\t\t\ttoken.tokposw = match.tokposw;\r\n\t\t\twtree[token.tokposw] = token;\r\n\t\t\tmatch.tokposw += 1;\r\n\t\t\twtree[match.tokposw] = match;\r\n\r\n\t\t\tif (match.tokposb) {\r\n\t\t\t\ttoken.tokposb = match.tokposb;\r\n\t\t\t\tbtree[token.tokposb] = token;\r\n\t\t\t\tmatch.tokposb += 1;\r\n\t\t\t\tbtree[match.tokposb] = match;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\toldNumberParser: function(pos, chr, inp, returnValue, start, Tokenizer){\r\n\t\t++pos;\r\n\t\t// either: 0x 0X 0 .3\r\n\t\tif (chr == '0' && (inp[pos] == 'x' || inp[pos] == 'X')) {\r\n\t\t\t// parsing hex\r\n\t\t\twhile (++pos < inp.length && this.hashHex[inp[pos]]); // this.regexHex.test(inp[pos]));\r\n\t\t\treturnValue = {start:start,stop:pos,name:3/*NUMERIC_HEX*/,isPrimitive:true,isNumber:true};\r\n\t\t} else {\r\n\t\t\tvar parsingOctal = chr == '0' && inp[pos] >= '0' && inp[pos] <= '9';\r\n\t\t\t// parsing dec\r\n\t\t\tif (chr != '.') { // integer part\r\n\t\t\t\twhile (pos < inp.length && inp[pos] >= '0' && inp[pos] <= '9') ++pos;\r\n\t\t\t\tif (inp[pos] == '.') ++pos;\r\n\t\t\t}\r\n\t\t\t// decimal part\r\n\t\t\twhile (pos < inp.length && inp[pos] >= '0' && inp[pos] <= '9') ++pos;\r\n\t\t\t// exponent part\r\n\t\t\tif (inp[pos] == 'e' || inp[pos] == 'E') {\r\n\t\t\t\tif (inp[++pos] == '+' || inp[pos] == '-') ++pos;\r\n\t\t\t\tvar expPosBak = pos;\r\n\t\t\t\twhile (pos < inp.length && inp[pos] >= '0' && inp[pos] <= '9') ++pos;\r\n\t\t\t\tif (expPosBak == pos) {\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,tokenError:true,error:Tokenizer.Error.NumberExponentRequiresDigits};\r\n\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (returnValue.name != 14/*error*/) {\r\n\t\t\t\tif (parsingOctal) {\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:14/*error*/,isNumber:true,isOctal:true,tokenError:true,error:Tokenizer.Error.IllegalOctalEscape};\r\n\t\t\t\t\tthis.errorStack.push(returnValue);\r\n\t\t\t\t\tconsole.log(\"foo\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturnValue = {start:start,stop:pos,name:4/*NUMERIC_DEC*/,isPrimitive:true,isNumber:true};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn [pos, returnValue];\r\n\t},\r\n\ttokens: function(arrx){\r\n\t\tarrx = arrx || [];\r\n\t\tvar n = 0;\r\n\t\tvar last;\r\n\t\tvar stack = [];\r\n\t\twhile ((last = this.storeCurrentAndFetchNextToken(!arrx[n++], false, false, true)) && last.name != 12/*EOF*/) stack.push(last);\r\n\t\treturn stack;\r\n\t},\r\n\tfixValues: function(){\r\n\t\tthis.wtree.forEach(function(t){\r\n\t\t\tif (!t.value) t.value = this.inp.substring(t.start, t.stop);\r\n\t\t},this);\r\n\t}\r\n};\r\n\r\n//#ifdef TEST_SUITE\r\nTokenizer.escape = function(s){\r\n\treturn s.replace(/\\n/g,'\\\\n').replace(/\\t/g,'\\\\t').replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/\\uFFFF/g, '\\\\uFFFF').replace(/\\s/g, function(s){\r\n\t\t// replace whitespace as is...\r\n\t\tvar ord = s.charCodeAt(0).toString(16);\r\n\t\tswitch (ord.length) {\r\n\t\t\tcase 1: ord = '000'+ord; break;\r\n\t\t\tcase 2: ord = '00'+ord; break;\r\n\t\t\tcase 3: ord = '0'+ord; break;\r\n\t\t}\r\n\t\treturn '\\\\u'+ord;\r\n\t});\r\n};\r\nTokenizer.testSuite = function(arr){\r\n\tvar out = document.createElement('pre');\r\n\tdocument.body.appendChild(out);\r\n\tvar debug = function(){\r\n\t\tvar f = document.createElement('div');\r\n\t\tf.innerHTML = Array.prototype.slice.call(arguments).join(' ');\r\n\t\tout.appendChild(f);\r\n\t\treturn arguments[0];\r\n\t};\r\n\r\n\tdebug(\"Running test suite...\",arr.length,\"tests\");\r\n\tdebug(' ');\r\n\tvar start = +new Date;\r\n\tvar ok = 0;\r\n\tvar fail = 0;\r\n\tfor (var i=0; i<arr.length; ++i) {\r\n\t\tvar test = arr[i], result;\r\n\t\tvar input = test[1];\r\n\t\tvar outputLen = test[2];\r\n\t\tvar regexHints = test[4] ? test[3] : null; // if flags, then len=4\r\n\t\tvar desc = test[4] || test[3];\r\n\t\t\r\n\t\tvar result = new Tokenizer(input).tokens(regexHints); // regexHints can be null, that's ok\r\n\t\tif (result.length == outputLen) {\r\n\t\t\tdebug('<span class=\"green\">Test '+i+' ok:</span>',desc);\r\n\t\t\t++ok;\r\n\t\t} else {\r\n\t\t\tdebug('<b class=\"red\">Test failed:</span>',desc,'(found',result.length,'expected',outputLen+')'),console.log(desc, result);\r\n\t\t\t++fail;\r\n\t\t}\r\n\t\tdebug('<b>'+Tokenizer.escape(input)+'</b>');\r\n\t\tdebug('<br/>');\r\n\t}\r\n\tdebug(\"Tokenizer test suite finished (\"+(+new Date - start)+' ms). ok:'+ok+', fail:'+fail);\r\n};\r\n//#endif\r\n\r\nTokenizer.regexWhiteSpace = /[ \\t\\u000B\\u000C\\u00A0\\uFFFF]/;\r\nTokenizer.regexLineTerminator = /[\\u000A\\u000D\\u2028\\u2029]/;\r\nTokenizer.regexAsciiIdentifier = /[a-zA-Z0-9\\$_]/;\r\nTokenizer.hashAsciiIdentifier = {_:1,$:1,a:1,b:1,c:1,d:1,e:1,f:1,g:1,h:1,i:1,j:1,k:1,l:1,m:1,n:1,o:1,p:1,q:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,y:1,z:1,A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,K:1,L:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1,0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1};\r\nTokenizer.regexHex = /[0-9A-Fa-f]/;\r\nTokenizer.hashHex = {0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1,a:1,b:1,c:1,d:1,e:1,f:1,A:1,B:1,C:1,D:1,E:1,F:1};\r\nTokenizer.regexUnicodeEscape = /u[0-9A-Fa-f]{4}/; // the \\ is already checked at usage...\r\nTokenizer.regexIdentifierStop = /[\\>\\=\\!\\|\\<\\+\\-\\&\\*\\%\\^\\/\\{\\}\\(\\)\\[\\]\\.\\;\\,\\~\\?\\:\\ \\t\\n\\\\\\'\\\"]/; \r\nTokenizer.hashIdentifierStop = {'>':1,'=':1,'!':1,'|':1,'<':1,'+':1,'-':1,'&':1,'*':1,'%':1,'^':1,'/':1,'{':1,'}':1,'(':1,')':1,'[':1,']':1,'.':1,';':1,',':1,'~':1,'?':1,':':1,'\\\\':1,'\\'':1,'\"':1,' ':1,'\\t':1,'\\n':1};\r\nTokenizer.regexNewline = /\\n/g;\r\n//Tokenizer.regexPunctuators = /^(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\\+\\+|--|<<|>>|\\&\\&|\\|\\||\\+=|-=|\\*=|%=|\\&=|\\|=|\\^=|\\/=|\\{|\\}|\\(|\\)|\\[|\\]|\\.|;|,|<|>|\\+|-|\\*|%|\\||\\&|\\||\\^|!|~|\\?|:|=|\\/)/;\r\nTokenizer.Unidocde = window.Unicode;\r\nTokenizer.regexNumber = /^(?:(0[xX][0-9A-Fa-f]+)|((?:(?:(?:(?:[0-9]+)(?:\\.[0-9]*)?))|(?:\\.[0-9]+))(?:[eE][-+]?[0-9]{1,})?))/;\r\nTokenizer.regexNormalizeNewlines = /(\\u000D[^\\u000A])|[\\u2028\\u2029]/;\r\n\r\n//\t\t\t\t\t\t\t1 ws\t\t\t\t\t\t\t2 lt\t\t\t\t   3 scmt 4 mcmt 5/6 str 7 nr     8 rx  9 punc\r\nTokenizer.regexBig = /^([ \\t\\u000B\\u000C\\u00A0\\uFFFF])?([\\u000A\\u000D\\u2028\\u2029])?(\\/\\/)?(\\/\\*)?(')?(\")?(\\.?[0-9])?(?:(\\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\\+\\+|--|<<|>>|\\&\\&|\\|\\||\\+=|-=|\\*=|%=|\\&=|\\|=|\\^=|\\/=|\\{|\\}|\\(|\\)|\\[|\\]|\\.|;|,|<|>|\\+|-|\\*|%|\\||\\&|\\||\\^|!|~|\\?|:|=|\\/)?/;\r\nTokenizer.regexBigAlt = /([ \\t\\u000B\\u000C\\u00A0\\uFFFF])?([\\u000A\\u000D\\u2028\\u2029])?(\\/\\/)?(\\/\\*)?(')?(\")?(\\.?[0-9])?(?:(\\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\\+\\+|--|<<|>>|\\&\\&|\\|\\||\\+=|-=|\\*=|%=|\\&=|\\|=|\\^=|\\/=|\\{|\\}|\\(|\\)|\\[|\\]|\\.|;|,|<|>|\\+|-|\\*|%|\\||\\&|\\||\\^|!|~|\\?|:|=|\\/)?/g;\r\n\r\nTokenizer.Error = {\r\n\tUnterminatedSingleStringNewline: {msg:'Newlines are not allowed in string literals'},\r\n\tUnterminatedSingleStringOther: {msg:'Unterminated single string'},\r\n\tUnterminatedDoubleStringNewline: {msg:'Newlines are not allowed in string literals'},\r\n\tUnterminatedDoubleStringOther: {msg:'Unterminated double string'},\r\n\tUnterminatedRegularExpressionNewline: {msg:'Newlines are not allowed in regular expressions'},\r\n\tNothingToRepeat: {msg:'Used a repeat character (*?+) in a regex without something prior to it to match'},\r\n\tClosingClassRangeNotFound: {msg: 'Unable to find ] for class range'},\r\n\tRegexOpenGroup: {msg: 'Open group did not find closing parenthesis'},\r\n\tRegexNoOpenGroups: {msg: 'Closing parenthesis found but no group open'},\r\n\tUnterminatedRegularExpressionOther: {msg:'Unterminated regular expression'},\r\n\tUnterminatedMultiLineComment: {msg:'Unterminated multi line comment'},\r\n\tUnexpectedIdentifier: {msg:'Unexpected identifier'},\r\n\tIllegalOctalEscape: {msg:'Octal escapes are not valid'},\r\n\tUnknown: {msg:'Unknown input'}, // if this happens, my parser is bad :(\r\n\tNumberExponentRequiresDigits: {msg:'Numbers with exponents require at least one digit after the `e`'},\r\n\tBacktickNotSupported: {msg:'The backtick is not used in js, maybe you copy/pasted from a fancy site/doc?'},\r\n\tInvalidUnicodeEscape: {msg:'Encountered an invalid unicode escape, must be followed by exactly four hex numbers'},\r\n\tInvalidBackslash: {msg:'Encountered a backslash where it not allowed'},\r\n\tStartOfMatchShouldBeAtStart: {msg: 'The ^ signifies the start of match but was not found at a start'},\r\n\tDollarShouldBeEnd: {msg: 'The $ signifies the stop of match but was not found at a stop'},\r\n\tQuantifierRequiresNumber: {msg:'Quantifier curly requires at least one digit before the comma'},\r\n\tQuantifierRequiresClosingCurly: {msg:'Quantifier curly requires to be closed'},\r\n\tMissingOpeningCurly: {msg:'Encountered closing quantifier curly without seeing an opening curly'}\r\n};\r\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/zeparser/Tokenizer.js?");

/***/ }),

/***/ "./node_modules/zeparser/ZeParser.js":
/*!*******************************************!*\
  !*** ./node_modules/zeparser/ZeParser.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("if (true) {\r\n\tvar Tokenizer = (__webpack_require__(/*! ./Tokenizer */ \"./node_modules/zeparser/Tokenizer.js\").Tokenizer);\r\n\texports.ZeParser = ZeParser;\r\n}\r\n\r\n/**\r\n * This is my js Parser: Ze. It's actually the post-dev pre-cleanup version. Clearly.\r\n * Some optimizations have been applied :)\r\n * (c) Peter van der Zee, qfox.nl\r\n * @param {String} inp Input\r\n * @param {Tokenizer} tok\r\n * @param {Array} stack The tokens will be put in this array. If you're looking for the AST, this would be it :)\r\n */\r\nfunction ZeParser(inp, tok, stack, simple){\r\n\tthis.input = inp;\r\n\tthis.tokenizer = tok;\r\n\tthis.stack = stack;\r\n\tthis.stack.root = true;\r\n\tthis.scope = stack.scope = [{value:'this', isDeclared:true, isEcma:true, thisIsGlobal:true}]; // names of variables\r\n\tthis.scope.global = true;\r\n\tthis.statementLabels = [];\r\n\r\n\tthis.errorStack = [];\r\n\r\n\tstack.scope = this.scope; // hook root\r\n\tstack.labels = this.statementLabels;\r\n\r\n\tthis.regexLhsStart = ZeParser.regexLhsStart;\r\n/*\r\n\tthis.regexStartKeyword = ZeParser.regexStartKeyword;\r\n\tthis.regexKeyword = ZeParser.regexKeyword;\r\n\tthis.regexStartReserved = ZeParser.regexStartReserved;\r\n\tthis.regexReserved = ZeParser.regexReserved;\r\n*/\r\n\tthis.regexStartKeyOrReserved = ZeParser.regexStartKeyOrReserved;\r\n\tthis.hashStartKeyOrReserved = ZeParser.hashStartKeyOrReserved;\r\n\tthis.regexIsKeywordOrReserved = ZeParser.regexIsKeywordOrReserved;\r\n\tthis.regexAssignments = ZeParser.regexAssignments;\r\n\tthis.regexNonAssignmentBinaryExpressionOperators = ZeParser.regexNonAssignmentBinaryExpressionOperators;\r\n\tthis.regexUnaryKeywords = ZeParser.regexUnaryKeywords;\r\n\tthis.hashUnaryKeywordStart = ZeParser.hashUnaryKeywordStart;\r\n\tthis.regexUnaryOperators = ZeParser.regexUnaryOperators;\r\n\tthis.regexLiteralKeywords = ZeParser.regexLiteralKeywords;\r\n\tthis.testing = {'this':1,'null':1,'true':1,'false':1};\r\n\r\n\tthis.ast = !simple; ///#define FULL_AST\r\n};\r\n/**\r\n * Returns just a stacked parse tree (regular array)\r\n * @param {string} input\r\n * @param {boolean} simple=false\r\n * @return {Array}\r\n */\r\nZeParser.parse = function(input, simple){\r\n\tvar tok = new Tokenizer(input);\r\n\tvar stack = [];\r\n\ttry {\r\n\t\tvar parser = new ZeParser(input, tok, stack);\r\n\t\tif (simple) parser.ast = false;\r\n\t\tparser.parse();\r\n\t\treturn stack;\r\n\t} catch (e) {\r\n\t\tconsole.log(\"Parser has a bug for this input, please report it :)\", e);\r\n\t\treturn null;\r\n\t}\r\n};\r\n/**\r\n * Returns a new parser instance with parse details for input\r\n * @param {string} input\r\n * @returns {ZeParser}\r\n */\r\nZeParser.createParser = function(input){\r\n\tvar tok = new Tokenizer(input);\r\n\tvar stack = [];\r\n\ttry {\r\n\t\tvar parser = new ZeParser(input, tok, stack);\r\n\t\tparser.parse();\r\n\t\treturn parser;\r\n\t} catch (e) {\r\n\t\tconsole.log(\"Parser has a bug for this input, please report it :)\", e);\r\n\t\treturn null;\r\n\t}\r\n};\r\nZeParser.prototype = {\r\n\tinput: null,\r\n\ttokenizer: null,\r\n\tstack: null,\r\n\tscope: null,\r\n\tstatementLabels: null,\r\n\terrorStack: null,\r\n\r\n\tast: null,\r\n\r\n\tparse: function(match){\r\n\t\tif (match) match = this.tokenizer.storeCurrentAndFetchNextToken(false, match, this.stack); // meh\r\n\t\telse match = this.tokenizer.storeCurrentAndFetchNextToken(false, null, this.stack, true); // initialization step, dont store the match (there isnt any!)\r\n\r\n\t\tmatch = this.eatSourceElements(match, this.stack);\r\n\r\n\t\tvar cycled = false;\r\n\t\tdo {\r\n\t\t\tif (match && match.name != 12/*eof*/) {\r\n\t\t\t\t// if not already an error, insert an error before it\r\n\t\t\t\tif (match.name != 14/*error*/) this.failignore('UnexpectedToken', match, this.stack);\r\n\t\t\t\t// just parse the token as is and continue.\r\n\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, this.stack);\r\n\t\t\t\tcycled = true;\r\n\t\t\t}\r\n\r\n\t\t// keep gobbling any errors...\r\n\t\t} while (match && match.name == 14/*error*/);\r\n\r\n\t\t// now try again (but only if we gobbled at least one token)...\r\n\t\tif (cycled && match && match.name != 12/*eof*/) match = this.parse(match);\r\n\r\n\t\t// pop the last token off the stack if it caused an error at eof\r\n\t\tif (this.tokenizer.errorEscape) {\r\n\t\t\tthis.stack.push(this.tokenizer.errorEscape);\r\n\t\t\tthis.tokenizer.errorEscape = null;\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t},\r\n\r\n\teatSemiColon: function(match, stack){\r\n\t\t//this.stats.eatSemiColon = (+//this.stats.eatSemiColon||0)+1;\r\n\t\tif (match.value == ';') match = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\telse {\r\n\t\t\t// try asi\r\n\t\t\t// only if:\r\n\t\t\t// - this token was preceeded by at least one newline (match.newline) or next token is }\r\n\t\t\t// - this is EOF\r\n\t\t\t// - prev token was one of return,continue,break,throw (restricted production), not checked here.\r\n\r\n\t\t\t// the exceptions to this rule are \r\n\t\t\t// - if the next line is a regex \r\n\t\t\t// - the semi is part of the for-header. \r\n\t\t\t// these exceptions are automatically caught by the way the parser is built\r\n\r\n\t\t\t// not eof and just parsed semi or no newline preceeding and next isnt }\r\n\t\t\tif (match.name != 12/*EOF*/ && (match.semi || (!match.newline && match.value != '}')) && !(match.newline && (match.value == '++' || match.value == '--'))) {\r\n\t\t\t\tthis.failignore('NoASI', match, stack);\r\n\t\t\t} else {\r\n\t\t\t\t// ASI\r\n\t\t\t\t// (match is actually the match _after_ this asi, so the position of asi is match.start, not stop (!)\r\n\t\t\t\tvar asi = {start:match.start,stop:match.start,name:13/*ASI*/};\r\n\t\t\t\tstack.push(asi);\r\n\t\t\t\t\r\n\t\t\t\t// slip it in the stream, before the current match.\r\n\t\t\t\t// for the other tokens see the tokenizer near the end of the main parsing function\r\n\t\t\t\tthis.tokenizer.addTokenToStreamBefore(asi, match);\r\n\t\t\t}\r\n\t\t}\r\n\t\tmatch.semi = true;\r\n\t\treturn match;\r\n\t},\r\n\t/**\r\n\t * Eat one or more \"AssignmentExpression\"s. May also eat a labeled statement if\r\n\t * the parameters are set that way. This is the only way to linearly distinct between\r\n\t * an expression-statement and a labeled-statement without double lookahead. (ok, maybe not \"only\")\r\n\t * @param {boolean} mayParseLabeledStatementInstead=false If the first token is an identifier and the second a colon, accept this match as a labeled statement instead... Only true if the match in the parameter is an (unreserved) identifier (so no need to validate that further) \r\n\t * @param {Object} match\r\n\t * @param {Array} stack\r\n\t * @param {boolean} onlyOne=false Only parse a AssignmentExpression\r\n\t * @param {boolean} forHeader=false Do not allow the `in` operator\r\n\t * @param {boolean} isBreakOrContinueArg=false The argument for break or continue is always a single identifier\r\n\t * @return {Object}\r\n\t */\r\n\teatExpressions: function(mayParseLabeledStatementInstead, match, stack, onlyOne, forHeader, isBreakOrContinueArg){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar pstack = stack;\r\n\t\t\tstack = [];\r\n\t\t\tstack.desc = 'expressions';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tpstack.push(stack);\r\n\r\n\t\t\tvar parsedExpressions = 0;\r\n\t\t} //#endif\r\n\r\n\t\tvar first = true;\r\n\t\tdo {\r\n\t\t\tvar parsedNonAssignmentOperator = false; // once we parse a non-assignment, this expression can no longer parse an assignment\r\n\t\t\t// TOFIX: can probably get the regex out somehow...\r\n\t\t\tif (!first) {\r\n\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('ExpectedAnotherExpressionComma', match);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t++parsedExpressions;\r\n\r\n\t\t\t\tvar astack = stack;\r\n\t\t\t\tstack = [];\r\n\t\t\t\tstack.desc = 'expression';\r\n\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\tastack.push(stack);\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// start of expression is given: match\r\n\t\t\t// it should indeed be a properly allowed lhs\r\n\t\t\t// first eat all unary operators\r\n\t\t\t// they can be added to the stack, but we need to ensure they have indeed a valid operator\r\n\r\n\t\t\tvar parseAnotherExpression = true;\r\n\t\t\twhile (parseAnotherExpression) { // keep parsing lhs+operator as long as there is an operator after the lhs.\r\n\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\tvar estack = stack;\r\n\t\t\t\t\tstack = [];\r\n\t\t\t\t\tstack.desc = 'sub-expression';\r\n\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\testack.push(stack);\r\n\r\n\t\t\t\t\tvar news = 0; // encountered new operators waiting for parenthesis\r\n\t\t\t\t} //#endif\r\n\r\n\t\t\t\t// start checking lhs\r\n\t\t\t\t// if lhs is identifier (new/call expression), allow to parse an assignment operator next\r\n\t\t\t\t// otherwise keep eating unary expressions and then any \"value\"\r\n\t\t\t\t// after that search for a binary operator. if we only ate a new/call expression then\r\n\t\t\t\t// also allow to eat assignments. repeat for the rhs.\r\n\t\t\t\tvar parsedUnaryOperator = false;\r\n\t\t\t\tvar isUnary = null;\r\n\t\t\t\twhile (\r\n\t\t\t\t\t!isBreakOrContinueArg && // no unary for break/continue\r\n\t\t\t\t\t(isUnary =\r\n\t\t\t\t\t\t(match.value && this.hashUnaryKeywordStart[match.value[0]] && this.regexUnaryKeywords.test(match.value)) || // (match.value == 'delete' || match.value == 'void' || match.value == 'typeof' || match.value == 'new') ||\r\n\t\t\t\t\t\t(match.name == 11/*PUNCTUATOR*/ && this.regexUnaryOperators.test(match.value))\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (isUnary) match.isUnaryOp = true;\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t// find parenthesis\r\n\t\t\t\t\t\tif (match.value == 'new') ++news;\r\n\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t// ensure that it is in fact a valid lhs-start\r\n\t\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('ExpectedAnotherExpressionRhs', match);\r\n\t\t\t\t\t// not allowed to parse assignment\r\n\t\t\t\t\tparsedUnaryOperator = true;\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// if we parsed any kind of unary operator, we cannot be parsing a labeled statement\r\n\t\t\t\tif (parsedUnaryOperator) mayParseLabeledStatementInstead = false;\r\n\r\n\t\t\t\t// so now we know match is a valid lhs-start and not a unary operator\r\n\t\t\t\t// it must be a string, number, regex, identifier \r\n\t\t\t\t// or the start of an object literal ({), array literal ([) or group operator (().\r\n\r\n\t\t\t\tvar acceptAssignment = false;\r\n\r\n\t\t\t\t// take care of the \"open\" cases first (group, array, object)\r\n\t\t\t\tif (match.value == '(') {\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tvar groupStack = stack;\r\n\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\tstack.desc = 'grouped';\r\n\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\tgroupStack.push(stack);\r\n\r\n\t\t\t\t\t\tvar lhp = match;\r\n\r\n\t\t\t\t\t\tmatch.isGroupStart = true;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('GroupingShouldStartWithExpression', match);\r\n\t\t\t\t\t// keep parsing expressions as long as they are followed by a comma\r\n\t\t\t\t\tmatch = this.eatExpressions(false, match, stack);\r\n\r\n\t\t\t\t\tif (match.value != ')') match = this.failsafe('UnclosedGroupingOperator', match);\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tmatch.twin = lhp;\r\n\t\t\t\t\t\tlhp.twin = match;\r\n\r\n\t\t\t\t\t\tmatch.isGroupStop = true;\r\n\r\n\t\t\t\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t\t\t\t// create ref to this expression group to the opening paren\r\n\t\t\t\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // might be div\r\n\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tstack = groupStack;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\t// you can assign to group results. and as long as the group does not contain a comma (and valid ref), it will work too :)\r\n\t\t\t\t\tacceptAssignment = true;\r\n\t\t\t\t// there's an extra rule for [ namely that, it must start with an expression but after that, expressions are optional\r\n\t\t\t\t} else if (match.value == '[') {\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tstack.sub = 'array literal';\r\n\t\t\t\t\t\tstack.hasArrayLiteral = true;\r\n\t\t\t\t\t\tvar lhsb = match;\r\n\r\n\t\t\t\t\t\tmatch.isArrayLiteralStart = true;\r\n\r\n\t\t\t\t\t\tif (!this.scope.arrays) this.scope.arrays = [];\r\n\t\t\t\t\t\tmatch.arrayId = this.scope.arrays.length;\r\n\t\t\t\t\t\tthis.scope.arrays.push(match);\r\n\r\n\t\t\t\t\t\tmatch.targetScope = this.scope;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\t// keep parsing expressions as long as they are followed by a comma\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t\t\t\t// arrays may start with \"elided\" commas\r\n\t\t\t\t\twhile (match.value == ',') match = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t\t\t\tvar foundAtLeastOneComma = true; // for entry in while\r\n\t\t\t\t\twhile (foundAtLeastOneComma && match.value != ']') {\r\n\t\t\t\t\t\tfoundAtLeastOneComma = false;\r\n\r\n\t\t\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value)) && match.name != 14/*error*/) match = this.failsafe('ArrayShouldStartWithExpression', match);\r\n\t\t\t\t\t\tmatch = this.eatExpressions(false, match, stack, true);\r\n\r\n\t\t\t\t\t\twhile (match.value == ',') {\r\n\t\t\t\t\t\t\tfoundAtLeastOneComma = true;\r\n\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match.value != ']') {\r\n\t\t\t\t\t\tmatch = this.failsafe('UnclosedPropertyBracket', match);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tmatch.twin = lhsb;\r\n\t\t\t\t\t\tlhsb.twin = match;\r\n\r\n\t\t\t\t\t\tmatch.isArrayLiteralStop = true;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // might be div\r\n\t\t\t\t\twhile (match.value == '++' || match.value == '--') {\r\n\t\t\t\t\t\t// gobble and ignore?\r\n\t\t\t\t\t\tthis.failignore('InvalidPostfixOperandArray', match, stack);\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t}\r\n\t\t\t\t// object literals need seperate handling...\r\n\t\t\t\t} else if (match.value == '{') {\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tstack.sub = 'object literal';\r\n\t\t\t\t\t\tstack.hasObjectLiteral = true;\r\n\r\n\t\t\t\t\t\tmatch.isObjectLiteralStart = true;\r\n\r\n\t\t\t\t\t\tif (!this.scope.objects) this.scope.objects = [];\r\n\t\t\t\t\t\tmatch.objectId = this.scope.objects.length;\r\n\t\t\t\t\t\tthis.scope.objects.push(match);\r\n\r\n\t\t\t\t\t\tvar targetObject = match;\r\n\t\t\t\t\t\tmatch.targetScope = this.scope;\r\n\t\r\n\t\t\t\t\t\tvar lhc = match;\r\n\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\tif (match.name == 12/*eof*/) {\r\n\t\t\t\t\t\tmatch = this.failsafe('ObjectLiteralExpectsColonAfterName', match);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// ObjectLiteral\r\n\t\t\t\t\t// PropertyNameAndValueList\r\n\r\n\t\t\t\t\twhile (match.value != '}' && match.name != 14/*error*/) { // will stop if next token is } or throw if not and no comma is found\r\n\t\t\t\t\t\t// expecting a string, number, or identifier\r\n\t\t\t\t\t\t//if (match.name != 5/*STRING_SINGLE*/ && match.name != 6/*STRING_DOUBLE*/ && match.name != 3/*NUMERIC_HEX*/ && match.name != 4/*NUMERIC_DEC*/ && match.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\t// TOFIX: more specific errors depending on type...\r\n\t\t\t\t\t\tif (!match.isNumber && !match.isString && match.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\t\tmatch = this.failsafe('IllegalPropertyNameToken', match);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tvar objLitStack = stack;\r\n\t\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\t\tstack.desc = 'objlit pair';\r\n\t\t\t\t\t\t\tstack.isObjectLiteralPair = true;\r\n\t\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\t\tobjLitStack.push(stack);\r\n\r\n\t\t\t\t\t\t\tvar propNameStack = stack;\r\n\t\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\t\tstack.desc = 'objlit pair name';\r\n\t\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\t\tpropNameStack.push(stack);\r\n\r\n\t\t\t\t\t\t\tpropNameStack.sub = 'data';\r\n\r\n\t\t\t\t\t\t\tvar propName = match;\r\n\t\t\t\t\t\t\tpropName.isPropertyName = true;\r\n\t\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\t\tvar getset = match.value;\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tstack = propNameStack;\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// for get/set we parse a function-like definition. but only if it's immediately followed by an identifier (otherwise it'll just be the property 'get' or 'set')\r\n\t\t\t\t\t\tif (getset == 'get') {\r\n\t\t\t\t\t\t\t// \"get\" PropertyName \"(\" \")\" \"{\" FunctionBody \"}\"\r\n\t\t\t\t\t\t\tif (match.value == ':') {\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tpropName.isPropertyOf = targetObject;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.eatObjectLiteralColonAndBody(match, stack);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tmatch.isPropertyOf = targetObject;\r\n\t\t\t\t\t\t\t\t\tpropNameStack.sub = 'getter';\r\n\t\t\t\t\t\t\t\t\tpropNameStack.isAccessor = true;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\t// if (match.name != 2/*IDENTIFIER*/ && match.name != 5/*STRING_SINGLE*/ && match.name != 6/*STRING_DOUBLE*/ && match.name != 3/*NUMERIC_HEX*/ && match.name != 4/*NUMERIC_DEC*/) {\r\n\t\t\t\t\t\t\t\tif (!match.isNumber && !match.isString && match.name != 2/*IDENTIFIER*/) match = this.failsafe('IllegalGetterSetterNameToken', match, true);\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tif (match.value != '(') match = this.failsafe('GetterSetterNameFollowedByOpenParen', match);\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tvar lhp = match;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tif (match.value != ')') match = this.failsafe('GetterHasNoArguments', match);\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tmatch.twin = lhp;\r\n\t\t\t\t\t\t\t\t\tlhp.twin = match;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tmatch = this.eatFunctionBody(match, stack);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (getset == 'set') {\r\n\t\t\t\t\t\t\t// \"set\" PropertyName \"(\" PropertySetParameterList \")\" \"{\" FunctionBody \"}\"\r\n\t\t\t\t\t\t\tif (match.value == ':') {\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tpropName.isPropertyOf = targetObject;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.eatObjectLiteralColonAndBody(match, stack);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tmatch.isPropertyOf = targetObject;\r\n\t\t\t\t\t\t\t\t\tpropNameStack.sub = 'setter';\r\n\t\t\t\t\t\t\t\t\tpropNameStack.isAccessor = true;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tif (!match.isNumber && !match.isString && match.name != 2/*IDENTIFIER*/) match = this.failsafe('IllegalGetterSetterNameToken', match);\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tif (match.value != '(') match = this.failsafe('GetterSetterNameFollowedByOpenParen', match);\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tvar lhp = match;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tif (match.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\t\t\t\tif (match.value == ')') match = this.failsafe('SettersMustHaveArgument', match);\r\n\t\t\t\t\t\t\t\t\telse match = this.failsafe('IllegalSetterArgumentNameToken', match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tif (match.value != ')') {\r\n\t\t\t\t\t\t\t\t\tif (match.value == ',') match = this.failsafe('SettersOnlyGetOneArgument', match);\r\n\t\t\t\t\t\t\t\t\telse match = this.failsafe('SetterHeaderShouldHaveClosingParen', match);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t\tmatch.twin = lhp;\r\n\t\t\t\t\t\t\t\t\tlhp.twin = match;\r\n\t\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\t\tmatch = this.eatFunctionBody(match, stack);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// PropertyName \":\" AssignmentExpression\r\n\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\tpropName.isPropertyOf = targetObject;\r\n\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\tmatch = this.eatObjectLiteralColonAndBody(match, stack);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tstack = objLitStack;\r\n\t\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\t\t// one trailing comma allowed\r\n\t\t\t\t\t\tif (match.value == ',') {\r\n\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\tif (match.value == ',') match = this.failsafe('IllegalDoubleCommaInObjectLiteral', match);\r\n\t\t\t\t\t\t} else if (match.value != '}') match = this.failsafe('UnclosedObjectLiteral', match);\r\n\r\n\t\t\t\t\t\t// either the next token is } and the loop breaks or\r\n\t\t\t\t\t\t// the next token is the start of the next PropertyAssignment...\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// closing curly\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tmatch.twin = lhc;\r\n\t\t\t\t\t\tlhc.twin = match;\r\n\r\n\t\t\t\t\t\tmatch.isObjectLiteralStop = true;\r\n\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // next may be div\r\n\t\t\t\t\twhile (match.value == '++' || match.value == '--') {\r\n\t\t\t\t\t\tthis.failignore('InvalidPostfixOperandObject', match, stack);\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (match.value == 'function') { // function expression\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\tvar oldstack = stack;\r\n\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\tstack.desc = 'func expr';\r\n\t\t\t\t\t\tstack.isFunction = true;\r\n\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\tif (!this.scope.functions) this.scope.functions = [];\r\n\t\t\t\t\t\tmatch.functionId = this.scope.functions.length;\r\n\t\t\t\t\t\tthis.scope.functions.push(match);\r\n\t\t\t\t\t\toldstack.push(stack);\r\n\t\t\t\t\t\tvar oldscope = this.scope;\r\n\t\t\t\t\t\t// add new scope\r\n\t\t\t\t\t\tmatch.scope = stack.scope = this.scope = [\r\n\t\t\t\t\t\t\tthis.scope,\r\n\t\t\t\t\t\t\t{value:'this', isDeclared:true, isEcma:true, functionStack: stack},\r\n\t\t\t\t\t\t\t{value:'arguments', isDeclared:true, isEcma:true, varType:['Object']}\r\n\t\t\t\t\t\t]; // add the current scope (to build chain up-down)\r\n\t\t\t\t\t\tthis.scope.upper = oldscope;\r\n\t\t\t\t\t\t// ref to back to function that's the cause for this scope\r\n\t\t\t\t\t\tthis.scope.scopeFor = match;\r\n\t\t\t\t\t\tmatch.targetScope = oldscope; // consistency\r\n\t\t\t\t\t\tmatch.isFuncExprKeyword = true;\r\n\t\t\t\t\t\tmatch.functionStack = stack;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t\tvar funcExprToken = match;\r\n\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\tif (mayParseLabeledStatementInstead && match.value == ':') match = this.failsafe('LabelsMayNotBeReserved', match);\r\n\t\t\t\t\tif (match.name == 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\tfuncExprToken.funcName = match;\r\n\t\t\t\t\t\tmatch.meta = \"func expr name\";\r\n\t\t\t\t\t\tmatch.varType = ['Function'];\r\n\t\t\t\t\t\tmatch.functionStack = stack; // ref to the stack, in case we detect the var being a constructor\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t// name is only available to inner scope\r\n\t\t\t\t\t\t\tthis.scope.push({value:match.value});\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\tif (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) match = this.failsafe('FunctionNameMustNotBeReserved', match);\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmatch = this.eatFunctionParametersAndBody(match, stack, true, funcExprToken); // first token after func-expr is div\r\n\r\n\t\t\t\t\twhile (match.value == '++' || match.value == '--') {\r\n\t\t\t\t\t\tthis.failignore('InvalidPostfixOperandFunction', match, stack);\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t// restore stack and scope\r\n\t\t\t\t\t\tstack = oldstack;\r\n\t\t\t\t\t\tthis.scope = oldscope;\r\n\t\t\t\t\t} //#endif\r\n\t\t\t\t} else if (match.name <= 6) { // IDENTIFIER STRING_SINGLE STRING_DOUBLE NUMERIC_HEX NUMERIC_DEC REG_EX\r\n\t\t\t\t\t// save it in case it turns out to be a label.\r\n\t\t\t\t\tvar possibleLabel = match;\r\n\r\n\t\t\t\t\t// validate the identifier, if any\r\n\t\t\t\t\tif (match.name == 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t// this, null, true, false are actually allowed here\r\n\t\t\t\t\t\t\t!this.regexLiteralKeywords.test(match.value) &&\r\n\t\t\t\t\t\t\t// other reserved words are not\r\n\t\t\t\t\t\t\tthis.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// if break/continue, we skipped the unary operator check so throw the proper error here\r\n\t\t\t\t\t\t\tif (isBreakOrContinueArg) {\r\n\t\t\t\t\t\t\t\tthis.failignore('BreakOrContinueArgMustBeJustIdentifier', match, stack);\r\n\t\t\t\t\t\t\t} else if (match.value == 'else') {\r\n\t\t\t\t\t\t\t\tthis.failignore('DidNotExpectElseHere', match, stack);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t//if (mayParseLabeledStatementInstead) {new ZeParser.Error('LabelsMayNotBeReserved', match);\r\n\t\t\t\t\t\t\t\t// TOFIX: lookahead to see if colon is following. throw label error instead if that's the case\r\n\t\t\t\t\t\t\t\t// any forbidden keyword at this point is likely to be a statement start.\r\n\t\t\t\t\t\t\t\t// its likely that the parser will take a while to recover from this point...\r\n\t\t\t\t\t\t\t\tthis.failignore('UnexpectedToken', match, stack);\r\n\t\t\t\t\t\t\t\t// TOFIX: maybe i should just return at this point. cut my losses and hope for the best.\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// only accept assignments after a member expression (identifier or ending with a [] suffix)\r\n\t\t\t\t\t\tacceptAssignment = true;\r\n\t\t\t\t\t} else if (isBreakOrContinueArg) match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\r\n\t\t\t\t\t// the current match is the lead value being queried. tag it that way\r\n\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t// dont mark labels\r\n\t\t\t\t\t\tif (!isBreakOrContinueArg) {\r\n\t\t\t\t\t\t\tmatch.meta = 'lead value';\r\n\t\t\t\t\t\t\tmatch.leadValue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} //#endif\r\n\r\n\r\n\t\t\t\t\t// ok. gobble it.\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // division allowed\r\n\r\n\t\t\t\t\t// now check for labeled statement (if mayParseLabeledStatementInstead then the first token for this expression must be an (unreserved) identifier)\r\n\t\t\t\t\tif (mayParseLabeledStatementInstead && match.value == ':') {\r\n\t\t\t\t\t\tif (possibleLabel.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t\t\t// label was not an identifier\r\n\t\t\t\t\t\t\t// TOFIX: this colon might be a different type of error... more analysis required\r\n\t\t\t\t\t\t\tthis.failignore('LabelsMayOnlyBeIdentifiers', match, stack);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmayParseLabeledStatementInstead = true; // mark label parsed (TOFIX:speed?)\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t\t\t\t\tpossibleLabel.isLabel = true;\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tdelete possibleLabel.meta; // oh oops, it's not a lead value.\r\n\r\n\t\t\t\t\t\t\tpossibleLabel.isLabelDeclaration = true;\r\n\t\t\t\t\t\t\tthis.statementLabels.push(possibleLabel.value);\r\n\r\n\t\t\t\t\t\t\tstack.desc = 'labeled statement';\r\n\t\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\t\tvar errorIdToReplace = this.errorStack.length;\r\n\t\t\t\t\t\t// eat another statement now, its the body of the labeled statement (like if and while)\r\n\t\t\t\t\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\t\t\t\t\t// if no statement was found, check here now and correct error\r\n\t\t\t\t\t\tif (match.error && match.error.msg == ZeParser.Errors.UnableToParseStatement.msg) {\r\n\t\t\t\t\t\t\t// replace with better error...\r\n\t\t\t\t\t\t\tmatch.error = new ZeParser.Error('LabelRequiresStatement');\r\n\t\t\t\t\t\t\t// also replace on stack\r\n\t\t\t\t\t\t\tthis.errorStack[errorIdToReplace] = match.error;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmatch.wasLabel = true;\r\n\r\n\t\t\t\t\t\treturn match;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmayParseLabeledStatementInstead = false;\r\n\t\t\t\t} else if (match.value == '}') {\r\n\t\t\t\t\t// ignore... its certainly the end of this expression, but maybe asi can be applied...\r\n\t\t\t\t\t// it might also be an object literal expecting more, but that case has been covered else where.\r\n\t\t\t\t\t// if it turns out the } is bad after all, .parse() will try to recover\r\n\t\t\t\t} else if (match.name == 14/*error*/) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (match.tokenError) {\r\n\t\t\t\t\t\t\tvar pe = new ZeParser.Error('TokenizerError', match);\r\n\t\t\t\t\t\t\tpe.msg += ': '+match.error.msg;\r\n\t\t\t\t\t\t\tthis.errorStack.push(pe);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.failSpecial({start:match.start,stop:match.start,name:14/*error*/,error:pe}, match, stack)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t} while (match.name == 14/*error*/);\r\n\t\t\t\t} else if (match.name == 12/*eof*/) {\r\n\t\t\t\t\t// cant parse any further. you're probably just typing...\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//if (!this.errorStack.length && match.name != 12/*eof*/) console.log([\"unknown token\", match, stack, Gui.escape(this.input)]);\r\n\t\t\t\t\tthis.failignore('UnknownToken', match, stack);\r\n\t\t\t\t\t// we cant really ignore this. eat the token and try again. possibly you're just typing?\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for \"value\" suffix. property access and call parens.\r\n\t\t\t\twhile (match.value == '.' || match.value == '[' || match.value == '(') {\r\n\t\t\t\t\tif (isBreakOrContinueArg) match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\r\n\t\t\t\t\tif (match.value == '.') {\r\n\t\t\t\t\t\t// property access. read in an IdentifierName (no keyword checks). allow assignments\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\tif (match.name != 2/*IDENTIFIER*/) this.failignore('PropertyNamesMayOnlyBeIdentifiers', match, stack);\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tmatch.isPropertyName = true;\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // may parse div\r\n\t\t\t\t\t\tacceptAssignment = true;\r\n\t\t\t\t\t} else if (match.value == '[') {\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tvar lhsb = match;\r\n\t\t\t\t\t\t\tmatch.propertyAccessStart = true;\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t// property access, read expression list. allow assignments\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) {\r\n\t\t\t\t\t\t\tif (match.value == ']') match = this.failsafe('SquareBracketsMayNotBeEmpty', match);\r\n\t\t\t\t\t\t\telse match = this.failsafe('SquareBracketExpectsExpression', match);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\t\t\t\t\tif (match.value != ']') match = this.failsafe('UnclosedSquareBrackets', match);\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tmatch.twin = lhsb;\r\n\t\t\t\t\t\t\tmatch.propertyAccessStop = true;\r\n\t\t\t\t\t\t\tlhsb.twin = match;\r\n\r\n\t\t\t\t\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\t\t\t\t\tlhsb.expressionArg = stack[stack.length-1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // might be div\r\n\t\t\t\t\t\tacceptAssignment = true;\r\n\t\t\t\t\t} else if (match.value == '(') {\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tvar lhp = match;\r\n\t\t\t\t\t\t\tmatch.isCallExpressionStart = true;\r\n\t\t\t\t\t\t\tif (news) {\r\n\t\t\t\t\t\t\t\tmatch.parensBelongToNew = true;\r\n\t\t\t\t\t\t\t\t--news;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t// call expression, eat optional expression list, disallow assignments\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\tif (/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value)) match = this.eatExpressions(false, match, stack); // arguments are optional\r\n\t\t\t\t\t\tif (match.value != ')') match = this.failsafe('UnclosedCallParens', match);\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tmatch.twin = lhp;\r\n\t\t\t\t\t\t\tlhp.twin = match;\r\n\t\t\t\t\t\t\tmatch.isCallExpressionStop = true;\r\n\r\n\t\t\t\t\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\t\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // might be div\r\n\t\t\t\t\t\tacceptAssignment = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check for postfix operators ++ and --\r\n\t\t\t\t// they are stronger than the + or - binary operators\r\n\t\t\t\t// they can be applied to any lhs (even when it wouldnt make sense)\r\n\t\t\t\t// if there was a newline, it should get an ASI\r\n\t\t\t\tif ((match.value == '++' || match.value == '--') && !match.newline) {\r\n\t\t\t\t\tif (isBreakOrContinueArg) match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(true, match, stack); // may parse div\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t// restore \"expression\" stack\r\n\t\t\t\t\tstack = estack;\r\n\t\t\t\t} //#endif\r\n\t\t\t\t// now see if there is an operator following...\r\n\r\n\t\t\t\tdo { // this do allows us to parse multiple ternary expressions in succession without screwing up.\r\n\t\t\t\t\tvar ternary = false;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t(!forHeader && match.value == 'in') || // one of two named binary operators, may not be first expression in for-header (when semi's occur in the for-header)\r\n\t\t\t\t\t\t(match.value == 'instanceof') || // only other named binary operator\r\n\t\t\t\t\t\t((match.name == 11/*PUNCTUATOR*/) && // we can only expect a punctuator now\r\n\t\t\t\t\t\t\t(match.isAssignment = this.regexAssignments.test(match.value)) || // assignments are only okay with proper lhs\r\n\t\t\t\t\t\t\tthis.regexNonAssignmentBinaryExpressionOperators.test(match.value) // test all other binary operators\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif (match.isAssignment) {\r\n\t\t\t\t\t\t\tif (!acceptAssignment) this.failignore('IllegalLhsForAssignment', match, stack);\r\n\t\t\t\t\t\t\telse if (parsedNonAssignmentOperator) this.failignore('AssignmentNotAllowedAfterNonAssignmentInExpression', match, stack);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (isBreakOrContinueArg) match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\r\n\t\t\t\t\t\tif (!match.isAssignment) parsedNonAssignmentOperator = true; // last allowed assignment\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\tmatch.isBinaryOperator = true;\r\n\t\t\t\t\t\t\t// we build a stack to ensure any whitespace doesnt break the 1+(n*2) children rule for expressions\r\n\t\t\t\t\t\t\tvar ostack = stack;\r\n\t\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\t\tstack.desc = 'operator-expression';\r\n\t\t\t\t\t\t\tstack.isBinaryOperator = true;\r\n\t\t\t\t\t\t\tstack.sub = match.value;\r\n\t\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\t\tostack.sub = match.value;\r\n\t\t\t\t\t\t\tstack.isAssignment = match.isAssignment;\r\n\t\t\t\t\t\t\tostack.push(stack);\r\n\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\tternary = match.value == '?';\r\n\t\t\t\t\t\t// math, logic, assignment or in or instanceof\r\n\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t// restore \"expression\" stack\r\n\t\t\t\t\t\t\tstack = ostack;\r\n\t\t\t\t\t\t} //#endif\r\n\r\n\t\t\t\t\t\t// minor exception to ternary operator, we need to parse two expressions nao. leave the trailing expression to the loop.\r\n\t\t\t\t\t\tif (ternary) {\r\n\t\t\t\t\t\t\t// LogicalORExpression \"?\" AssignmentExpression \":\" AssignmentExpression\r\n\t\t\t\t\t\t\t// so that means just one expression center and right.\r\n\t\t\t\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) this.failignore('InvalidCenterTernaryExpression', match, stack);\r\n\t\t\t\t\t\t\tmatch = this.eatExpressions(false, match, stack, true, forHeader); // only one expression allowed inside ternary center/right\r\n\r\n\t\t\t\t\t\t\tif (match.value != ':') {\r\n\t\t\t\t\t\t\t\tif (match.value == ',') match = this.failsafe('TernarySecondExpressionCanNotContainComma', match);\r\n\t\t\t\t\t\t\t\telse match = this.failsafe('UnfinishedTernaryOperator', match);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\t// we build a stack to ensure any whitespace doesnt break the 1+(n*2) children rule for expressions\r\n\t\t\t\t\t\t\t\tvar ostack = stack;\r\n\t\t\t\t\t\t\t\tstack = [];\r\n\t\t\t\t\t\t\t\tstack.desc = 'operator-expression';\r\n\t\t\t\t\t\t\t\tstack.sub = match.value;\r\n\t\t\t\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\t\t\t\tostack.sub = match.value;\r\n\t\t\t\t\t\t\t\tstack.isAssignment = match.isAssignment;\r\n\t\t\t\t\t\t\t\tostack.push(stack);\r\n\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t\t\t\tstack = ostack;\r\n\t\t\t\t\t\t\t} //#endif\r\n\t\t\t\t\t\t\t// rhs of the ternary can not contain a comma either\r\n\t\t\t\t\t\t\tmatch = this.eatExpressions(false, match, stack, true, forHeader); // only one expression allowed inside ternary center/right\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tparseAnotherExpression = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (ternary); // if we just parsed a ternary expression, we need to check _again_ whether the next token is a binary operator.\r\n\r\n\t\t\t\t// start over. match is the rhs for the lhs we just parsed, but lhs for the next expression\r\n\t\t\t\tif (parseAnotherExpression && !(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) {\r\n\t\t\t\t\t// no idea what to do now. lets just ignore and see where it ends. TOFIX: maybe just break the loop or return?\r\n\t\t\t\t\tthis.failignore('InvalidRhsExpression', match, stack);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t// restore \"expressions\" stack\r\n\t\t\t\tstack = astack;\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// at this point we should have parsed one AssignmentExpression\r\n\t\t\t// lets see if we can parse another one...\r\n\t\t\tmayParseLabeledStatementInstead = first = false;\r\n\t\t} while (!onlyOne && match.value == ',');\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t// remove empty array\r\n\t\t\tif (!stack.length) pstack.length = pstack.length-1;\r\n\t\t\tpstack.numberOfExpressions = parsedExpressions;\r\n\t\t\tif (pstack[0]) pstack[0].numberOfExpressions = parsedExpressions;\r\n\t\t\tstack.expressionCount = parsedExpressions;\r\n\t\t} //#endif\r\n\t\treturn match;\r\n\t},\r\n\teatFunctionDeclaration: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tvar prevscope = this.scope;\r\n\t\t\tstack.desc = 'func decl';\r\n\t\t\tstack.isFunction = true;\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tif (!this.scope.functions) this.scope.functions = [];\r\n\t\t\tmatch.functionId = this.scope.functions.length;\r\n\t\t\tthis.scope.functions.push(match);\r\n\t\t\t// add new scope\r\n\t\t\tmatch.scope = stack.scope = this.scope = [\r\n\t\t\t\tthis.scope, // add current scope (build scope chain up-down)\r\n\t\t\t\t// Object.create(null,\r\n\t\t\t\t{value:'this', isDeclared:true, isEcma:true, functionStack:stack},\r\n\t\t\t\t// Object.create(null,\r\n\t\t\t\t{value:'arguments', isDeclared:true, isEcma:true, varType:['Object']}\r\n\t\t\t];\r\n\t\t\t// ref to back to function that's the cause for this scope\r\n\t\t\tthis.scope.scopeFor = match;\r\n\t\t\tmatch.targetScope = prevscope; // consistency\r\n\t\t\t\r\n\t\t\tmatch.functionStack = stack;\r\n\r\n\t\t\tmatch.isFuncDeclKeyword = true;\r\n\t\t} //#endif\r\n\t\t// only place that this function is used already checks whether next token is function\r\n\t\tvar functionKeyword = match;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.name != 2/*IDENTIFIER*/) match = this.failsafe('FunctionDeclarationsMustHaveName', match);\r\n\t\tif (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) this.failignore('FunctionNameMayNotBeReserved', match, stack);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tfunctionKeyword.funcName = match;\r\n\t\t\tprevscope.push({value:match.value});\r\n\t\t\tmatch.meta = 'func decl name'; // that's what it is, really\r\n\t\t\tmatch.varType = ['Function'];\r\n\t\t\tmatch.functionStack = stack;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatFunctionParametersAndBody(match, stack, false, functionKeyword); // first token after func-decl is regex\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t// restore previous scope\r\n\t\t\tthis.scope = prevscope;\r\n\t\t} //#endif\r\n\t\treturn match;\r\n\t},\r\n\teatObjectLiteralColonAndBody: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar propValueStack = stack;\r\n\t\t\tstack = [];\r\n\t\t\tstack.desc = 'objlit pair colon';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tpropValueStack.push(stack);\r\n\t\t} //#endif\r\n\t\tif (match.value != ':') match = this.failsafe('ObjectLiteralExpectsColonAfterName', match);\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack = propValueStack;\r\n\t\t} //#endif\r\n\r\n\t\t// this might actually fail due to ASI optimization.\r\n\t\t// if the property name does not exist and it is the last item\r\n\t\t// of the objlit, the expression parser will see an unexpected\r\n\t\t// } and ignore it, giving some leeway to apply ASI. of course,\r\n\t\t// that doesnt work for objlits. but we dont want to break the\r\n\t\t// existing mechanisms. so we check this differently... :)\r\n\t\tvar prevMatch = match;\r\n\t\tmatch = this.eatExpressions(false, match, stack, true); // only one expression\r\n\t\tif (match == prevMatch) match = this.failsafe('ObjectLiteralMissingPropertyValue', match);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatFunctionParametersAndBody: function(match, stack, div, funcToken){\r\n\t\t// div: the first token _after_ a function expression may be a division...\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectingFunctionHeaderStart', match);\r\n\t\telse if (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tfuncToken.lhp = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.name == 2/*IDENTIFIER*/) { // params\r\n\t\t\tif (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) this.failignore('FunctionArgumentsCanNotBeReserved', match, stack);\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tif (!funcToken.paramNames) funcToken.paramNames = [];\r\n\t\t\t\tstack.paramNames = funcToken.paramNames;\r\n\t\t\t\tfuncToken.paramNames.push(match);\r\n\t\t\t\tthis.scope.push({value:match.value}); // add param name to scope\r\n\t\t\t\tmatch.meta = 'parameter';\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\twhile (match.value == ',') {\r\n\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\tif (match.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\t\t// example: if name is 12, the source is incomplete...\r\n\t\t\t\t\tthis.failignore('FunctionParametersMustBeIdentifiers', match, stack);\r\n\t\t\t\t} else if (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) {\r\n\t\t\t\t\tthis.failignore('FunctionArgumentsCanNotBeReserved', match, stack);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\t// Object.create(null,\r\n\t\t\t\t\tthis.scope.push({value:match.value}); // add param name to scope\r\n\t\t\t\t\tmatch.meta = 'parameter';\r\n\t\t\t\t\tif (match.name == 2/*IDENTIFIER*/) funcToken.paramNames.push(match);\r\n\t\t\t\t} //#endif\r\n\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tif (lhp) {\r\n\t\t\t\tmatch.twin = lhp;\r\n\t\t\t\tlhp.twin = match;\r\n\t\t\t\tfuncToken.rhp = match;\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedFunctionHeaderClose', match); // TOFIX: can be various things here...\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatFunctionBody(match, stack, div, funcToken);\r\n\t\treturn match;\r\n\t},\r\n\teatFunctionBody: function(match, stack, div, funcToken){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'func body';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\t// create EMPTY list of functions. labels cannot cross function boundaries\r\n\t\t\tvar labelBackup = this.statementLabels;\r\n\t\t\tthis.statementLabels = [];\r\n\t\t\tstack.labels = this.statementLabels;\r\n\t\t} //#endif\r\n\r\n\t\t// if div, a division can occur _after_ this function expression\r\n\t\t//this.stats.eatFunctionBody = (+//this.stats.eatFunctionBody||0)+1;\r\n\t\tif (match.value != '{') match = this.failsafe('ExpectedFunctionBodyCurlyOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhc = match;\r\n\t\t\tif (funcToken) funcToken.lhc = lhc;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatSourceElements(match, stack);\r\n\t\tif (match.value != '}') match = this.failsafe('ExpectedFunctionBodyCurlyClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t\tif (funcToken) funcToken.rhc = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(div, match, stack);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t// restore label set\r\n\t\t\tthis.statementLabels = labelBackup;\r\n\t\t} //#endif\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatVar: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'var';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tmatch.stack = stack;\r\n\t\t\tmatch.isVarKeyword = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.eatVarDecl(match, stack);\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatVarDecl: function(match, stack, forHeader){\r\n\t\t// assumes match is indeed the identifier 'var'\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'var decl';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tvar targetScope = this.scope;\r\n\t\t\twhile (targetScope.catchScope) targetScope = targetScope[0];\r\n\t\t} //#endif\r\n\t\tvar first = true;\r\n\t\tvar varsDeclared = 0;\r\n\t\tdo {\r\n\t\t\t++varsDeclared;\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack); // start: var, iteration: comma\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tvar declStack = stack;\r\n\t\t\t\tvar stack = [];\r\n\t\t\t\tstack.desc = 'single var decl';\r\n\t\t\t\tstack.varStack = declStack; // reference to the var statement stack, it might hook to jsdoc needed for these vars\r\n\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\tdeclStack.push(stack);\r\n\r\n\t\t\t\tvar singleDecStack = stack;\r\n\t\t\t\tstack = [];\r\n\t\t\t\tstack.desc = 'sub-expression';\r\n\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\tsingleDecStack.push(stack);\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// next token should be a valid identifier\r\n\t\t\tif (match.name == 12/*eof*/) {\r\n\t\t\t\tif (first) match = this.failsafe('VarKeywordMissingName', match);\r\n\t\t\t\t// else, ignore. TOFIX: return?\r\n\t\t\t\telse match = this.failsafe('IllegalTrailingComma', match);\r\n\t\t\t} else if (match.name != 2/*IDENTIFIER*/) {\r\n\t\t\t\tmatch = this.failsafe('VarNamesMayOnlyBeIdentifiers', match);\r\n\t\t\t} else if (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) {\r\n\t\t\t\tmatch = this.failsafe('VarNamesCanNotBeReserved', match);\r\n\t\t\t}\r\n\t\t\t// mark the match as being a variable name. we need it for lookup later :)\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tmatch.meta = 'var name';\r\n\t\t\t\ttargetScope.push({value:match.value});\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack = singleDecStack;\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// next token should either be a = , or ;\r\n\t\t\t// if = parse an expression and optionally a comma\r\n\t\t\tif (match.value == '=') {\r\n\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\tsingleDecStack = stack;\r\n\t\t\t\t\tstack = [];\r\n\t\t\t\t\tstack.desc = 'operator-expression';\r\n\t\t\t\t\tstack.sub = '=';\r\n\t\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\t\tsingleDecStack.push(stack);\r\n\r\n\t\t\t\t\tstack.isAssignment = true;\r\n\t\t\t\t} //#endif\r\n\t\t\t\tmatch.isInitialiser = true;\r\n\t\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t\tstack = singleDecStack;\r\n\t\t\t\t} //#endif\r\n\r\n\t\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || match.name == 14/*error*/ || this.regexLhsStart.test(match.value))) match = this.failsafe('VarInitialiserExpressionExpected', match);\r\n\t\t\t\tmatch = this.eatExpressions(false, match, stack, true, forHeader); // only one expression \r\n\t\t\t\t// var statement: comma or semi now\r\n\t\t\t\t// for statement: semi, comma or 'in'\r\n\t\t\t}\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack = declStack;\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// determines proper error message in one case\r\n\t\t\tfirst = false;\r\n\t\t// keep parsing name(=expression) sequences as long as you see a comma here\r\n\t\t} while (match.value == ',');\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.varsDeclared = varsDeclared;\r\n\t\t} //#endif\r\n\r\n\t\treturn match;\r\n\t},\r\n\r\n\teatIf: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'if';\r\n\t\t\tstack.hasElse = false;\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\t\t// (\r\n\t\t// expression\r\n\t\t// )\r\n\t\t// statement\r\n\t\t// [else statement]\r\n\t\tvar ifKeyword = match;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('StatementHeaderIsNotOptional', match);\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\t// match might be null here... (if the if-statement was end part of the source)\r\n\t\tif (match && match.value == 'else') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tifKeyword.hasElse = match;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.eatElse(match, stack);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatElse: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.hasElse = true;\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'else';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatDo: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'do';\r\n\t\t\tstack.isIteration = true;\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tthis.statementLabels.push(''); // add \"empty\"\r\n\t\t\tvar doToken = match;\r\n\t\t} //#endif\r\n\t\t// statement\r\n\t\t// while\r\n\t\t// (\r\n\t\t// expression\r\n\t\t// )\r\n\t\t// semi-colon\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\t\tif (match.value != 'while') match = this.failsafe('DoShouldBeFollowedByWhile', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.hasDo = doToken;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('StatementHeaderIsNotOptional', match);\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tmatch.isForDoWhile = true; // prevents missing block warnings\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatSemiColon(match, stack); // TOFIX: this is not optional according to the spec, but browsers apply ASI anyways\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatWhile: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'while';\r\n\t\t\tstack.isIteration = true;\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tthis.statementLabels.push(''); // add \"empty\"\r\n\t\t} //#endif\r\n\r\n\t\t// (\r\n\t\t// expression\r\n\t\t// )\r\n\t\t// statement\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('StatementHeaderIsNotOptional', match);\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\r\n\teatFor: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'for';\r\n\t\t\tstack.isIteration = true;\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tthis.statementLabels.push(''); // add \"empty\"\r\n\t\t} //#endif\r\n\t\t// either a for(..in..) or for(..;..;..)\r\n\t\t// start eating an expression but refuse to parse\r\n\t\t// 'in' on the top-level of that expression. they are fine\r\n\t\t// in sub-levels (group, array, etc). Now the expression\r\n\t\t// must be followed by either ';' or 'in'. Else throw.\r\n\t\t// Branch on that case, ; requires two.\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t\tmatch.forHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t// for (either case) may start with var, in which case you'll parse a var declaration before encountering the 'in' or first semi.\r\n\t\tif (match.value == 'var') {\r\n\t\t\tmatch = this.eatVarDecl(match, stack, true);\r\n\t\t} else if (match.value != ';') { // expressions are optional in for-each\r\n\t\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) {\r\n\t\t\t\tthis.failignore('StatementHeaderIsNotOptional', match, stack);\r\n\t\t\t}\r\n\t\t\tmatch = this.eatExpressions(false, match, stack, false, true); // can parse multiple expressions, in is not ok here\r\n\t\t}\r\n\r\n\t\t// now we parsed an expression if it existed. the next token should be either ';' or 'in'. branch accordingly\r\n\t\tif (match.value == 'in') {\r\n\t\t\tvar declStack = stack[stack.length-1];\r\n\t\t\tif (declStack.varsDeclared > 1) {\r\n\t\t\t\t// disallowed. for-in var decls can only have one var name declared\r\n\t\t\t\tthis.failignore('ForInCanOnlyDeclareOnVar', match, stack);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.forType = 'in';\r\n\t\t\t\tmatch.forFor = true; // make easy distinction between conditional and iterational operator\r\n\t\t\t} //#endif\r\n\r\n\t\t\t// just parse another expression, where 'in' is allowed.\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\t} else {\r\n\t\t\tif (match.value != ';') match = this.failsafe('ForHeaderShouldHaveSemisOrIn', match);\r\n\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.forType = 'each';\r\n\t\t\t\tmatch.forEachHeaderStart = true;\r\n\t\t\t} //#endif\r\n\t\t\t// parse another optional no-in expression, another semi and then one more optional no-in expression\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\tif (/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value)) match = this.eatExpressions(false, match, stack); // in is ok here\r\n\t\t\tif (match.value != ';') match = this.failsafe('ExpectedSecondSemiOfForHeader', match);\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tmatch.forEachHeaderStop = true;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\t\tif (/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value)) match = this.eatExpressions(false, match, stack); // in is ok here\r\n\t\t}\r\n\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tmatch.forHeaderStop = true;\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (match.forType == 'in' && stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatContinue: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'continue';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tmatch.restricted = true;\r\n\t\t} //#endif\r\n\t\t// (no-line-break identifier)\r\n\t\t// ;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack); // may not have line terminator...\r\n\t\tif (!match.newline && match.value != ';' && match.name != 12/*EOF*/ && match.value != '}') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tmatch.isLabel = true;\r\n\t\t\t\tmatch.isLabelTarget = true;\r\n\r\n\t\t\t\tvar continueArg = match; // remember to see if this continue parsed a label\r\n\t\t\t} //#endif\r\n\t\t\t// may only parse exactly an identifier at this point\r\n\t\t\tmatch = this.eatExpressions(false, match, stack, true, false, true); // first true=onlyOne, second: continue/break arg\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.hasLabel = continueArg != match;\r\n\t\t\t} //#endif\r\n\t\t\tif (match.value != ';' && !match.newline && match.name != 12/*eof*/ && match.value != '}') match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\t\t}\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatBreak: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar parentstack = stack\r\n\t\t\tstack = [];\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'break';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t\r\n\t\t\tparentstack.push(stack);\r\n\r\n\t\t\tmatch.restricted = true;\r\n\t\t} //#endif\r\n\t\t// (no-line-break identifier)\r\n\t\t// ;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack); // may not have line terminator...\r\n\t\tif (!match.newline && match.value != ';' && match.name != 12/*EOF*/ && match.value != '}') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tmatch.isLabel = true;\r\n\t\t\t\tmatch.isLabelTarget = true;\r\n\t\t\t\tvar breakArg = match; // remember to see if this break parsed a label\r\n\t\t\t} //#endif\r\n\t\t\t// may only parse exactly an identifier at this point\r\n\t\t\tmatch = this.eatExpressions(false, match, stack, true, false, true); // first true=onlyOne, second: continue/break arg\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.hasLabel = breakArg != match;\r\n\t\t\t} //#endif\r\n\r\n\t\t\tif (match.value != ';' && !match.newline && match.name != 12/*eof*/ && match.value != '}') match = this.failsafe('BreakOrContinueArgMustBeJustIdentifier', match);\r\n\t\t}\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatReturn: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'return';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tstack.returnFor = this.scope.scopeFor;\r\n\r\n\t\t\tmatch.restricted = true;\r\n\t\t} //#endif\r\n\t\t// (no-line-break expression)\r\n\t\t// ;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack); // may not have line terminator...\r\n\t\tif (!match.newline && match.value != ';' && match.name != 12/*EOF*/ && match.value != '}') {\r\n\t\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\t}\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatThrow: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'throw';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tmatch.restricted = true;\r\n\t\t} //#endif\r\n\t\t// (no-line-break expression)\r\n\t\t// ;\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack); // may not have line terminator...\r\n\t\tif (match.newline) match = this.failsafe('ThrowCannotHaveReturn', match);\r\n\t\tif (match.value == ';') match = this.failsafe('ThrowMustHaveArgument', match);\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitch: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'switch';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tthis.statementLabels.push(''); // add \"empty\"\r\n\t\t} //#endif\r\n\t\t// meh.\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) {\r\n\t\t\tthis.failignore('StatementHeaderIsNotOptional', match, stack);\r\n\t\t}\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '{') match = this.failsafe('SwitchBodyStartsWithCurly', match);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhc = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t// you may parse a default case, and only once per switch. but you may do so anywhere.\r\n\t\tvar parsedAnything = false;\r\n\r\n\t\twhile (match.value == 'case' || (!stack.parsedSwitchDefault && match.value == 'default')) {\r\n\t\t\tparsedAnything = true;\r\n\r\n\t\t\tmatch = this.eatSwitchClause(match, stack);\r\n\t\t}\r\n\r\n\t\t// if you didnt parse anything but not encountering a closing curly now, you might be thinking that switches may start with silly stuff\r\n\t\tif (!parsedAnything && match.value != '}') {\r\n\t\t\tmatch = this.failsafe('SwitchBodyMustStartWithClause', match);\r\n\t\t}\r\n\r\n\t\tif (stack.parsedSwitchDefault && match.value == 'default') {\r\n\t\t\tthis.failignore('SwitchCannotHaveDoubleDefault', match, stack);\r\n\t\t}\r\n\r\n\t\tif (match.value != '}' && match.name != 14/*error*/) match = this.failsafe('SwitchBodyEndsWithCurly', match);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitchClause: function(match, stack){\r\n\t\tmatch = this.eatSwitchHeader(match, stack);\r\n\t\tmatch = this.eatSwitchBody(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitchHeader: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t// collect whitespace...\r\n\t\t\tvar switchHeaderStack = stack\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'switch clause header';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\r\n\t\tif (match.value == 'case') {\r\n\t\t\tmatch = this.eatSwitchCaseHead(match, stack);\r\n\t\t} else { // default\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tswitchHeaderStack.hasDefaultClause = true;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.eatSwitchDefaultHead(match, stack);\r\n\t\t}\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t// just to group whitespace (makes certain navigation easier..)\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'colon';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\r\n\t\tif (match.value != ':') {\r\n\t\t\tmatch = this.failsafe('SwitchClausesEndWithColon', match);\r\n\t\t}\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitchBody: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'switch clause body';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\r\n\t\t// parse body of case or default, just so long case and default keywords are not seen and end of switch is not reached\r\n\t\t// (clause bodies may be empty, for instance to fall through)\r\n\t\tvar lastMatch = null;\r\n\t\twhile (match.value != 'default' && match.value != 'case' && match.value != '}' && match.name != 14/*error*/ && match.name != 12/*eof*/ && lastMatch != match) {\r\n\t\t\tlastMatch = match; // prevents endless loops on error ;)\r\n\t\t\tmatch = this.eatStatement(true, match, stack);\r\n\t\t}\r\n\t\tif (lastMatch == match) this.failsafe('UnexpectedInputSwitch', match);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitchCaseHead: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.sub = 'case';\r\n\t\t\tvar caseHeadStack = stack;\r\n\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'case';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tmatch.isCase = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\tif (match.value == ':') {\r\n\t\t\tthis.failignore('CaseMissingExpression', match, stack);\r\n\t\t} else {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tcaseHeadStack.push(stack = []);\r\n\t\t\t\tstack.desc = 'case arg';\r\n\t\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatSwitchDefaultHead: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.sub = 'default';\r\n\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'case';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\tmatch.isDefault = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatTryCatchFinally: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'try';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\r\n\t\tmatch = this.eatTry(match, stack);\r\n\r\n\t\tif (match.value == 'catch') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.hasCatch = true;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.eatCatch(match, stack);\r\n\t\t}\r\n\t\tif (match.value == 'finally') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.hasFinally = true;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.eatFinally(match, stack);\r\n\t\t}\r\n\r\n\t\t// at least a catch or finally block must follow. may be both.\r\n\t\tif (!stack.tryHasCatchOrFinally) {\r\n\t\t\tthis.failignore('TryMustHaveCatchOrFinally', match, stack);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatTry: function(match, stack){\r\n\t\t// block\r\n\t\t// (catch ( identifier ) block )\r\n\t\t// (finally block)\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '{') match = this.failsafe('MissingTryBlockCurlyOpen', match);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'tryblock';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tvar lhc = match;\r\n\t\t} //#endif\r\n\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '}') match = this.eatStatements(match, stack);\r\n\t\tif (match.value != '}') match = this.failsafe('MissingTryBlockCurlyClose', match);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t} //#endif\r\n\t\t\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatCatch: function(match, stack){\r\n\t\tstack.tryHasCatchOrFinally = true;\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'catch';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\r\n\t\t\t// the catch block has a header which can contain at most one parameter\r\n\t\t\t// this parameter is bound to a local stack. formally, if that parameter\r\n\t\t\t// shadows another variable, changes made to the variable inside the catch\r\n\t\t\t// should not be reflected by the variable being shadowed. however, this\r\n\t\t\t// is not very safe to rely on so there ought to be a warning. note that\r\n\t\t\t// only this parameter gets bound to this inner scope, other parameters.\r\n\r\n\t\t\tvar catchScopeBackup = this.scope;\r\n\t\t\tmatch.scope = this.scope = stack.scope = [this.scope];\r\n\t\t\tthis.scope.catchScope = true; // mark this as being a catchScope\r\n\r\n\t\t\t// find first function scope or global scope object...\r\n\t\t\tvar nonCatchScope = catchScopeBackup;\r\n\t\t\twhile (nonCatchScope.catchScope) nonCatchScope = nonCatchScope[0];\r\n\r\n\t\t\t// get catch id, which is governed by the function/global scope only\r\n\t\t\tif (!nonCatchScope.catches) nonCatchScope.catches = [];\r\n\t\t\tmatch.catchId = nonCatchScope.catches.length;\r\n\t\t\tnonCatchScope.catches.push(match);\r\n\t\t\tmatch.targetScope = nonCatchScope;\r\n\t\t\tmatch.catchScope = this.scope;\r\n\r\n\t\t\t// ref to back to function that's the cause for this scope\r\n\t\t\tthis.scope.scopeFor = match;\r\n\t\t\t// catch clauses dont have a special `this` or `arguments`, map them to their parent scope\r\n\t\t\tif (catchScopeBackup.global) this.scope.push(catchScopeBackup[0]); // global (has no `arguments` but always a `this`)\r\n\t\t\telse if (catchScopeBackup.catchScope) {\r\n\t\t\t\t// tricky. there will at least be a this\r\n\t\t\t\tthis.scope.push(catchScopeBackup[1]);\r\n\t\t\t\t// but there might not be an arguments\r\n\t\t\t\tif (catchScopeBackup[2] && catchScopeBackup[2].value == 'arguments') this.scope.push(catchScopeBackup[2]);\r\n\t\t\t} else this.scope.push(catchScopeBackup[1], catchScopeBackup[2]); // function scope, copy this and arguments\r\n\t\t} //#endif\r\n\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('CatchHeaderMissingOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.name != 2/*IDENTIFIER*/) match = this.failsafe('MissingCatchParameter', match);\r\n\t\tif (this.hashStartKeyOrReserved[match.value[0]] /*this.regexStartKeyOrReserved.test(match.value[0])*/ && this.regexIsKeywordOrReserved.test(match.value)) {\r\n\t\t\tthis.failignore('CatchParameterNameMayNotBeReserved', match, stack);\r\n\t\t}\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.meta = 'var name';\r\n\t\t\t// this is the catch variable. bind it to a scope but keep the scope as\r\n\t\t\t// it currently is.\r\n\t\t\tthis.scope.push(match);\r\n\t\t\tmatch.isCatchVar = true;\r\n\t\t} //#endif\r\n\r\n\t\t// now the catch body will use the outer scope to bind new variables. the problem is that\r\n\t\t// inner scopes, if any, should have access to the scope variable, so their scope should\r\n\t\t// be linked to the catch scope. this is a problem in the current architecture but the \r\n\t\t// idea is to pass on the catchScope as the scope to the eatStatements call, etc.\r\n\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('CatchHeaderMissingClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tlhp.twin = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '{') match = this.failsafe('MissingCatchBlockCurlyOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhc = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\t// catch body. statements are optional.\t\r\n\t\tif (match.value != '}') match = this.eatStatements(match, stack);\r\n\r\n\t\tif (match.value != '}') match = this.failsafe('MissingCatchBlockCurlyClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tthis.scope = catchScopeBackup;\r\n\t\t} //#endif\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatFinally: function(match, stack){\r\n\t\tstack.tryHasCatchOrFinally = true;\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'finally';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '{') match = this.failsafe('MissingFinallyBlockCurlyOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhc = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '}') match = this.eatStatements(match, stack);\r\n\t\tif (match.value != '}') match = this.failsafe('MissingFinallyBlockCurlyClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatDebugger: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'debugger';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatSemiColon(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatWith: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.push(stack = []);\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'with';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (match.value != '(') match = this.failsafe('ExpectedStatementHeaderOpen', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar lhp = match;\r\n\t\t\tmatch.statementHeaderStart = true;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tif (!(/*is left hand side start?*/ match.name <= 6 || this.regexLhsStart.test(match.value))) match = this.failsafe('StatementHeaderIsNotOptional', match);\r\n\t\tmatch = this.eatExpressions(false, match, stack);\r\n\t\tif (match.value != ')') match = this.failsafe('ExpectedStatementHeaderClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhp;\r\n\t\t\tmatch.statementHeaderStop = true;\r\n\t\t\tlhp.twin = match;\r\n\r\n\t\t\tif (stack[stack.length-1].desc == 'expressions') {\r\n\t\t\t\t// create ref to this expression group to the opening bracket\r\n\t\t\t\tlhp.expressionArg = stack[stack.length-1];\r\n\t\t\t}\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\t\tmatch = this.eatStatement(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatFunction: function(match, stack){\r\n\t\tvar pe = new ZeParser.Error\r\n\t\tthis.errorStack.push(pe);\r\n\t\t// ignore. browsers will accept it anyways\r\n\t\tvar error = {start:match.stop,stop:match.stop,name:14/*error*/,error:pe};\r\n\t\tthis.specialError(error, match, stack);\r\n\t\t// now try parsing a function declaration...\r\n\t\tmatch = this.eatFunctionDeclaration(match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatLabelOrExpression: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tvar parentstack = stack;\r\n\r\n\t\t\tstack = [];\r\n\t\t\tstack.desc = 'statement';\r\n\t\t\tstack.sub = 'expression';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tparentstack.push(stack);\r\n\t\t} //#endif\r\n\t\t// must be an expression or a labeled statement.\r\n\t\t// in order to prevent very weird return constructs, we'll first check the first match\r\n\t\t// if that's an identifier, we'll gobble it here and move on to the second.\r\n\t\t// if that's a colon, we'll gobble it as a labeled statement. otherwise, we'll pass on\r\n\t\t// control to eatExpression, with the note that we've already gobbled a \r\n\r\n\t\tmatch = this.eatExpressions(true, match, stack);\r\n\t\t// if we parsed a label, the returned match (colon) will have this property\r\n\t\tif (match.wasLabel) {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.sub = 'labeled';\r\n\t\t\t} //#endif\r\n\t\t\t// it will have already eaten another statement for the label\r\n\t\t} else {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.sub = 'expression';\r\n\t\t\t} //#endif\r\n\t\t\t// only parse semi if we didnt parse a label just now...\r\n\t\t\tmatch = this.eatSemiColon(match, stack);\r\n\t\t}\r\n\r\n\t\treturn match;\r\n\t},\r\n\teatBlock: function(match, stack){\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tstack.sub = 'block';\r\n\t\t\tvar lhc = match;\r\n\t\t} //#endif\r\n\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\tif (match.value == '}') {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\tstack.isEmptyBlock = true;\r\n\t\t\t} //#endif\r\n\t\t} else {\r\n\t\t\tmatch = this.eatStatements(match, stack);\r\n\t\t}\r\n\t\tif (match.value != '}') match = this.failsafe('BlockCurlyClose', match);\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.twin = lhc;\r\n\t\t\tlhc.twin = match;\r\n\t\t} //#endif\r\n\t\tmatch = this.tokenizer.storeCurrentAndFetchNextToken(false, match, stack);\r\n\r\n\t\treturn match;\r\n\t},\r\n\r\n\teatStatements: function(match, stack){\r\n\t\t//this.stats.eatStatements = (+//this.stats.eatStatements||0)+1;\r\n\t\t// detecting the start of a statement \"quickly\" is virtually impossible.\r\n\t\t// instead we keep eating statements until the match stops changing\r\n\t\t// the first argument indicates that the statement is optional. if that\r\n\t\t// statement was not found, the input match will also be the output.\r\n\r\n\t\twhile (match != (match = this.eatStatement(true, match, stack)));\r\n\t\treturn match;\r\n\t},\r\n\teatStatement: function(isOptional, match, stack){\r\n\t\tif (!match && isOptional) return match; // eof\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tmatch.statementStart = true;\r\n\t\t\tvar pstack = stack;\r\n\t\t\tstack = [];\r\n\t\t\tstack.desc = 'statement-parent';\r\n\t\t\tstack.nextBlack = match.tokposb;\r\n\t\t\tpstack.push(stack);\r\n\r\n\t\t\t// list of labels, these are bound to statements (and can access any label higher up, but not cross functions)\r\n\t\t\tvar labelBackup = this.statementLabels;\r\n\t\t\tthis.statementLabels = [labelBackup]; // make ref like tree. we need this to catch labels parsed beyond the current position (not yet known to use)\r\n\t\t\tstack.labels = this.statementLabels;\r\n\t\t} //#endif\r\n\r\n\t\tif (match.name == 2/*IDENTIFIER*/) {\r\n\t\t\t// try to determine whether it's a statement\r\n\t\t\t// (block/empty statements come later, this branch is only for identifiers)\r\n\t\t\tswitch (match.value) {\r\n\t\t\t\tcase 'var':\r\n\t\t\t\t\tmatch = this.eatVar(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'if':\r\n\t\t\t\t\tmatch = this.eatIf(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'do':\r\n\t\t\t\t\tmatch = this.eatDo(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'while':\r\n\t\t\t\t\tmatch = this.eatWhile(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'for':\r\n\t\t\t\t\tmatch = this.eatFor(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'continue':\r\n\t\t\t\t\tmatch = this.eatContinue(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'break':\r\n\t\t\t\t\tmatch = this.eatBreak(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'return':\r\n\t\t\t\t\tmatch = this.eatReturn(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'throw':\r\n\t\t\t\t\tmatch = this.eatThrow(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switch':\r\n\t\t\t\t\tmatch = this.eatSwitch(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'try':\r\n\t\t\t\t\tmatch = this.eatTryCatchFinally(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'debugger':\r\n\t\t\t\t\tmatch = this.eatDebugger(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'with':\r\n\t\t\t\t\tmatch = this.eatWith(match, stack);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'function':\r\n\t\t\t\t\t// I'm not sure whether this is at all possible.... (but it's bad, either way ;)\r\n\t\t\t\t\t// so add an error token, but parse the function as if it was a declaration.\r\n\t\t\t\t\tthis.failignore('StatementMayNotStartWithFunction', match, stack);\r\n\r\n\t\t\t\t\t// now parse as declaration... (most likely?)\r\n\t\t\t\t\tmatch = this.eatFunctionDeclaration(match, stack);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: // either a label or an expression-statement\r\n\t\t\t\t\tmatch = this.eatLabelOrExpression(match, stack);\r\n\t\t\t}\r\n\t\t} else if (match.value == '{') { // Block (make sure you do this before checking for expression...)\r\n\t\t\tmatch = this.eatBlock(match, stack);\r\n\t\t} else if (\r\n\t\t\t// expression statements:\r\n\t\t\tmatch.isString ||\r\n\t\t\tmatch.isNumber ||\r\n\t\t\tmatch.name == 1/*REG_EX*/ ||\r\n\t\t\tthis.regexLhsStart.test(match.value)\r\n\t\t) {\r\n\t\t\tmatch = this.eatExpressions(false, match,stack);\r\n\t\t\tmatch = this.eatSemiColon(match, stack);\r\n\t\t} else if (match.value == ';') { // empty statement\r\n\t\t\tmatch.emptyStatement = true;\r\n\t\t\tmatch = this.eatSemiColon(match, stack);\r\n\t\t} else if (!isOptional) {\r\n\t\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\t\t// unmark token as being start of a statement, since it's obviously not\r\n\t\t\t\tmatch.statementStart = false;\r\n\t\t\t} //#endif\r\n\t\t\tmatch = this.failsafe('UnableToParseStatement', match);\r\n\t\t} else {\r\n\t\t\t// unmark token as being start of a statement, since it's obviously not\r\n\t\t\tif (this.ast) match.statementStart = true;\r\n\t\t}\r\n\r\n\t\tif (this.ast) { //#ifdef FULL_AST\r\n\t\t\tif (!stack.length) pstack.length = pstack.length-1;\r\n\r\n\t\t\t// restore label set\r\n\t\t\tthis.statementLabels = labelBackup;\r\n\t\t} //#endif\r\n\r\n\t\treturn match;\r\n\t},\r\n\r\n\teatSourceElements: function(match, stack){\r\n\t\t//this.stats.eatSourceElements = (+//this.stats.eatSourceElements||0)+1;\r\n\t\t// detecting the start of a statement \"quickly\" is virtually impossible.\r\n\t\t// instead we keep eating statements until the match stops changing\r\n\t\t// the first argument indicates that the statement is optional. if that\r\n\t\t// statement was not found, the input match will also be the output.\r\n\t\twhile (match != oldMatch) { // difficult to determine whether ` && match.name != 12/*EOF*/` is actually speeding things up. it's an extra check vs one less call to eatStatement...\r\n\t\t\tvar oldMatch = match;\r\n\t\t\t// always try to eat function declaration first. otherwise 'function' at the start might cause eatStatement to throw up\r\n\t\t\tif (match.value == 'function') match = this.eatFunctionDeclaration(match, stack);\r\n\t\t\telse match = this.eatStatement(true, match, stack);\r\n\t\t}\r\n\t\treturn match;\r\n\t},\r\n\r\n\tfailsafe: function(name, match, doNotAddMatch){\r\n\t\tvar pe = new ZeParser.Error(name, match);\r\n\t\tthis.errorStack.push(pe);\r\n\r\n\t\tif (!doNotAddMatch) {\r\n\t\t\t// the match was bad, but add it to the ast anyways. in most cases this is the case but in some its not.\r\n\t\t\t// the tokenizer will pick up on the errorEscape property and add it after the match we passed on.\r\n\t\t\tif (this.tokenizer.errorEscape) this.stack.push(this.tokenizer.errorEscape);\r\n\t\t\tthis.tokenizer.errorEscape = match;\r\n\t\t}\r\n\t\tvar error = {start:match.start,stop:match.start,len:0, name:14/*error*/,error:pe, value:''};\r\n\t\tthis.tokenizer.addTokenToStreamBefore(error, match);\r\n\t\treturn error;\r\n\t},\r\n\tfailignore: function(name, match, stack){\r\n\t\tvar pe = new ZeParser.Error(name, match);\r\n\t\tthis.errorStack.push(pe);\r\n\t\t// ignore the error (this will screw up :)\r\n\t\tvar error = {start:match.start,stop:match.start,len:0,name:14/*error*/,error:pe, value:''};\r\n\t\tstack.push(error);\r\n\t\tthis.tokenizer.addTokenToStreamBefore(error, match);\r\n\t},\r\n\tfailSpecial: function(error, match, stack){\r\n\t\t// we cant really ignore this. eat the token\r\n\t\tstack.push(error);\r\n\t\tthis.tokenizer.addTokenToStreamBefore(error, match);\r\n\t},\r\n\r\n0:0};\r\n\r\n//#ifdef TEST_SUITE\r\nZeParser.testSuite = function(tests){\r\n\tvar ok = 0;\r\n\tvar fail = 0;\r\n\tvar start = +new Date;\r\n\tfor (var i = 0; i < tests.length; ++i) {\r\n\t\tvar test = tests[i], input = test[0], desc = test[test.length - 1], stack = [];\r\n\t\ttry {\r\n\t\t\tnew ZeParser(input, new Tokenizer(input), stack).parse();\r\n\t\t\t++ok;\r\n\t\t} catch (e) {\r\n\t\t\t++fail;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName('div')[0].innerHTML = ('Ze parser test suite finished ('+(+new Date - start)+' ms). ok:'+ok+', fail:'+fail);\r\n\t};\r\n};\r\n//#endif\r\n\r\nZeParser.regexLhsStart = /[\\+\\-\\~\\!\\(\\{\\[]/;\r\n/*\r\nZeParser.regexStartKeyword = /[bcdefinrstvw]/;\r\nZeParser.regexKeyword = /^break$|^catch$|^continue$|^debugger$|^default$|^delete$|^do$|^else$|^finally$|^for$|^function$|^if$|^in$|^instanceof$|^new$|^return$|^switch$|^this$|^throw$|^try$|^typeof$|^var$|^void$|^while$|^with$/;\r\nZeParser.regexStartReserved = /[ceis]/;\r\nZeParser.regexReserved = /^class$|^const$|^enum$|^export$|^extends$|^import$|^super$/;\r\n*/\r\nZeParser.regexStartKeyOrReserved = /[bcdefinrstvw]/;\r\nZeParser.hashStartKeyOrReserved = Object.create ? Object.create(null, {b:{value:1},c:{value:1},d:{value:1},e:{value:1},f:{value:1},i:{value:1},n:{value:1},r:{value:1},s:{value:1},t:{value:1},v:{value:1},w:{value:1}}) : {b:1,c:1,d:1,e:1,f:1,i:1,n:1,r:1,s:1,t:1,v:1,w:1};\r\nZeParser.regexIsKeywordOrReserved = /^break$|^catch$|^continue$|^debugger$|^default$|^delete$|^do$|^else$|^finally$|^for$|^function$|^if$|^in$|^instanceof$|^new$|^return$|^switch$|^case$|^this$|^true$|^false$|^null$|^throw$|^try$|^typeof$|^var$|^void$|^while$|^with$|^class$|^const$|^enum$|^export$|^extends$|^import$|^super$/;\r\nZeParser.regexAssignments = /^[\\+\\-\\*\\%\\&\\|\\^\\/]?=$|^\\<\\<\\=$|^\\>{2,3}\\=$/;\r\nZeParser.regexNonAssignmentBinaryExpressionOperators = /^[\\+\\-\\*\\%\\|\\^\\&\\?\\/]$|^[\\<\\>]\\=?$|^[\\=\\!]\\=\\=?$|^\\<\\<|\\>\\>\\>?$|^\\&\\&$|^\\|\\|$/;\r\nZeParser.regexUnaryKeywords = /^delete$|^void$|^typeof$|^new$/;\r\nZeParser.hashUnaryKeywordStart = Object.create ? Object.create(null, {d:{value:1},v:{value:1},t:{value:1},n:{value:1}}) : {d:1,v:1,t:1,n:1};\r\nZeParser.regexUnaryOperators = /[\\+\\-\\~\\!]/;\r\nZeParser.regexLiteralKeywords = /^this$|^null$|^true$|^false$/;\r\n\r\nZeParser.Error = function(type, match){\r\n\t//if (type == 'BreakOrContinueArgMustBeJustIdentifier') throw here;\r\n\tthis.msg = ZeParser.Errors[type].msg;\r\n\tthis.before = ZeParser.Errors[type].before;\r\n\tthis.match = match;\r\n};\r\n\r\nZeParser.Errors = {\r\n\tNoASI: {msg:'Expected semi-colon, was unable to apply ASI'},\r\n\tExpectedAnotherExpressionComma: {msg:'expecting another (left hand sided) expression after the comma'},\r\n\tExpectedAnotherExpressionRhs: {msg:\"expected a rhs expression\"},\r\n\tUnclosedGroupingOperator: {msg:\"Unclosed grouping operator\"},\r\n\tGroupingShouldStartWithExpression: {msg:'The grouping operator (`(`) should start with a left hand sided expression'},\r\n\tArrayShouldStartWithExpression: {msg:'The array literal (`[`) should start with a left hand sided expression'},\r\n\tUnclosedPropertyBracket: {msg:'Property bracket was not closed after expression (expecting `]`)'},\r\n\tIllegalPropertyNameToken: {msg:'Object literal property names can only be assigned as strings, numbers or identifiers'},\r\n\tIllegalGetterSetterNameToken: {msg:'Name of a getter/setter can only be assigned as strings, numbers or identifiers'},\r\n\tGetterSetterNameFollowedByOpenParen: {msg:'The name of the getter/setter should immediately be followed by the opening parenthesis `(`'},\r\n\tGetterHasNoArguments: {msg:'The opening parenthesis `(` of the getter should be immediately followed by the closing parenthesis `)`, the getter cannot have an argument'},\r\n\tIllegalSetterArgumentNameToken: {msg:'Expecting the name of the argument of a setter, can only be assigned as strings, numbers or identifiers'},\r\n\tSettersOnlyGetOneArgument: {msg:'Setters have one and only one argument, missing the closing parenthesis `)`'},\r\n\tSetterHeaderShouldHaveClosingParen: {msg:'After the first argument of a setter should come a closing parenthesis `)`'},\r\n\tSettersMustHaveArgument: {msg:'Setters must have exactly one argument defined'},\r\n\tUnclosedObjectLiteral: {msg:'Expected to find a comma `,` for the next expression or a closing curly brace `}` to end the object literal'},\r\n\tFunctionNameMustNotBeReserved: {msg:'Function name may not be a keyword or a reserved word'},\r\n\tExpressionMayNotStartWithKeyword: {msg:'Expressions may not start with keywords or reserved words that are not in this list: [this, null, true, false, void, typeof, delete, new]'},\r\n\tLabelsMayOnlyBeIdentifiers: {msg:'Label names may only be defined as an identifier'},\r\n\tLabelsMayNotBeReserved: {msg:'Labels may not be a keyword or a reserved word'},\r\n\tUnknownToken: {msg:'Unknown token encountered, dont know how to proceed'},\r\n\tPropertyNamesMayOnlyBeIdentifiers: {msg:'The tokens of property names accessed through the dot operator may only be identifiers'},\r\n\tSquareBracketExpectsExpression: {msg:'The square bracket property access expects an expression'},\r\n\tSquareBracketsMayNotBeEmpty: {msg:'Square brackets may never be empty, expecting an expression'},\r\n\tUnclosedSquareBrackets: {msg:'Unclosed square bracket encountered, was expecting `]` after the expression'},\r\n\tUnclosedCallParens: {msg:'Unclosed call parenthesis, expecting `)` after the optional expression'},\r\n\tInvalidCenterTernaryExpression: {msg:'Center expression of ternary operator should be a regular expression (but may not contain the comma operator directly)'},\r\n\tUnfinishedTernaryOperator: {msg:'Encountered a ternary operator start (`?`) but did not find the required colon (`:`) after the center expression'},\r\n\tTernarySecondExpressionCanNotContainComma: {msg:'The second and third expressions of the ternary operator can/may not \"directly\" contain a comma operator'},\r\n\tInvalidRhsExpression: {msg:'Expected a right hand side expression after the operator (which should also be a valid lhs) but did not find one'},\r\n\tFunctionDeclarationsMustHaveName: {msg:'Function declaration must have name'},\r\n\tFunctionNameMayNotBeReserved: {msg:'Function name may not be a keyword or reserved word'},\r\n\tExpectingFunctionHeaderStart: {msg:'Expected the opening parenthesis of the function header'},\r\n\tFunctionArgumentsCanNotBeReserved: {msg:'Function arguments may not be keywords or reserved words'},\r\n\tFunctionParametersMustBeIdentifiers: {msg:'Function arguments must be identifiers'},\r\n\tExpectedFunctionHeaderClose: {msg:'Expected the closing parenthesis `)` of the function header'},\r\n\tExpectedFunctionBodyCurlyOpen: {msg:'Expected the opening curly brace `{` for the function body'},\r\n\tExpectedFunctionBodyCurlyClose: {msg:'Expected the closing curly brace `}` for the function body'},\r\n\tVarNamesMayOnlyBeIdentifiers: {msg:'Missing variable name, must be a proper identifier'},\r\n\tVarNamesCanNotBeReserved: {msg:'Variable names may not be keywords or reserved words'},\r\n\tVarInitialiserExpressionExpected: {msg:'The initialiser of the variable statement should be an expression without comma'},\r\n\tExpectedStatementHeaderOpen: {msg:'Expected opening parenthesis `(` for statement header'},\r\n\tStatementHeaderIsNotOptional: {msg:'Statement header must not be empty'},\r\n\tExpectedStatementHeaderClose: {msg:'Expected closing parenthesis `)` for statement header'},\r\n\tDoShouldBeFollowedByWhile: {msg:'The do-while statement requires the `while` keyword after the expression'},\r\n\tExpectedSecondSemiOfForHeader: {msg:'Expected the second semi-colon of the for-each header'},\r\n\tForHeaderShouldHaveSemisOrIn: {msg:'The for-header should contain at least the `in` operator or two semi-colons (`;`)'},\r\n\tSwitchBodyStartsWithCurly: {msg:'The body of a switch statement starts with a curly brace `{`'},\r\n\tSwitchClausesEndWithColon: {msg:'Switch clauses (`case` and `default`) end with a colon (`:`)'},\r\n\tSwitchCannotHaveDoubleDefault: {msg:'Switches cannot have more than one `default` clause'},\r\n\tSwitchBodyEndsWithCurly: {msg:'The body of a switch statement ends with a curly brace `}`'},\r\n\tMissingTryBlockCurlyOpen: {msg:'Missing the opening curly brace (`{`) for the block of the try statement'},\r\n\tMissingTryBlockCurlyClose: {msg:'Missing the closing curly brace (`}`) for the block of the try statement'},\r\n\tCatchHeaderMissingOpen: {msg:'Missing the opening parenthesis of the catch header'},\r\n\tMissingCatchParameter: {msg:'Catch clauses should have exactly one argument which will be bound to the error object being thrown'},\r\n\tCatchParameterNameMayNotBeReserved: {msg:'Catch clause parameter may not be a keyword or reserved word'},\r\n\tCatchHeaderMissingClose: {msg:'Missing the closing parenthesis of the catch header'},\r\n\tMissingCatchBlockCurlyOpen: {msg:'Missing the opening curly brace (`{`) for the block of the catch statement'},\r\n\tMissingCatchBlockCurlyClose: {msg:'Missing the closing curly brace (`}`) for the block of the catch statement'},\r\n\tMissingFinallyBlockCurlyOpen: {msg:'Missing the opening curly brace (`{`) for the block of the finally statement'},\r\n\tMissingFinallyBlockCurlyClose: {msg:'Missing the closing curly brace (`}`) for the block of the finally statement'},\r\n\tStatementMayNotStartWithFunction: {msg:'statements may not start with function...', before:true},\r\n\tBlockCurlyClose: {msg:'Expected the closing curly (`}`) for a block statement'},\r\n\tBlockCurlyOpen: {msg:'Expected the closing curly (`}`) for a block statement'},\r\n\tUnableToParseStatement: {msg:'Was unable to find a statement when it was requested'},\r\n\tIllegalDoubleCommaInObjectLiteral: {msg:'A double comma in object literals is not allowed'},\r\n\tObjectLiteralExpectsColonAfterName: {msg:'After every property name (identifier, string or number) a colon (`:`) should follow'},\r\n\tThrowMustHaveArgument: {msg:'The expression argument for throw is not optional'},\r\n\tThrowCannotHaveReturn: {msg:'There may not be a return between throw and the start of its expression argument'},\r\n\tSwitchBodyMustStartWithClause: {msg:'The body of a switch clause must start with at a case or default clause (but may be empty, which would be silly)'},\r\n\tBreakOrContinueArgMustBeJustIdentifier: {msg:'The argument to a break or continue statement must be exactly and only an identifier (an existing label)'},\r\n\tAssignmentNotAllowedAfterNonAssignmentInExpression: {msg:'An assignment is not allowed if it is preceeded by a non-expression operator in the same expression-level'},\r\n\tIllegalLhsForAssignment: {msg:'Illegal left hand side for assignment (you cannot assign to things like string literals, number literals or function calls}'},\r\n\tVarKeywordMissingName: {msg:'Var keyword should be followed by a variable name'},\r\n\tIllegalTrailingComma: {msg:'Illegal trailing comma found'},\r\n\tObjectLiteralMissingPropertyValue: {msg:'Missing object literal property value'},\r\n\tTokenizerError: {msg:'Tokenizer encountered unexpected input'},\r\n\tLabelRequiresStatement: {msg:'Saw a label without the (required) statement following'},\r\n\tDidNotExpectElseHere: {msg:'Did not expect an else here. To what if should it belong? Maybe you put a ; after the if-block? (if(x){};else{})'},\r\n\tUnexpectedToken: {msg:'Found an unexpected token and have no idea why'},\r\n\tInvalidPostfixOperandArray: {msg:'You cannot apply ++ or -- to an array'},\r\n\tInvalidPostfixOperandObject: {msg:'You cannot apply ++ or -- to an object'},\r\n\tInvalidPostfixOperandFunction: {msg:'You cannot apply ++ or -- to a function'},\r\n\tCaseMissingExpression: {msg:'Case expects an expression before the colon'},\r\n\tTryMustHaveCatchOrFinally: {msg:'The try statement must have a catch or finally block'},\r\n\tUnexpectedInputSwitch: {msg:'Unexpected input while parsing a switch clause...'},\r\n\tForInCanOnlyDeclareOnVar: {msg:'For-in header can only introduce one new variable'}\r\n};\r\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/zeparser/ZeParser.js?");

/***/ }),

/***/ "./node_modules/zeparser/index.js":
/*!****************************************!*\
  !*** ./node_modules/zeparser/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.ZeParser = __webpack_require__(/*! ./ZeParser */ \"./node_modules/zeparser/ZeParser.js\").ZeParser;\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/zeparser/index.js?");

/***/ }),

/***/ "./node_modules/zeparser/unicodecategories.js":
/*!****************************************************!*\
  !*** ./node_modules/zeparser/unicodecategories.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// http://qfox.nl/notes/90\r\nvar Unicode = (Unicode) ? Unicode: {};\r\nif (true) {\r\n\texports.Unicode = Unicode;\r\n}\r\n\r\n// upper case\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FLu%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Lu = /[\\u0041-\\u005A]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00DE]|\\u0100|\\u0102|\\u0104|\\u0106|\\u0108|\\u010A|\\u010C|\\u010E|\\u0110|\\u0112|\\u0114|\\u0116|\\u0118|\\u011A|\\u011C|\\u011E|\\u0120|\\u0122|\\u0124|\\u0126|\\u0128|\\u012A|\\u012C|\\u012E|\\u0130|\\u0132|\\u0134|\\u0136|\\u0139|\\u013B|\\u013D|\\u013F|\\u0141|\\u0143|\\u0145|\\u0147|\\u014A|\\u014C|\\u014E|\\u0150|\\u0152|\\u0154|\\u0156|\\u0158|\\u015A|\\u015C|\\u015E|\\u0160|\\u0162|\\u0164|\\u0166|\\u0168|\\u016A|\\u016C|\\u016E|\\u0170|\\u0172|\\u0174|\\u0176|\\u0178|\\u0179|\\u017B|\\u017D|\\u0181|\\u0182|\\u0184|\\u0186|\\u0187|\\u0189|\\u018A|\\u018B|\\u018E|\\u018F|\\u0190|\\u0191|\\u0193|\\u0194|\\u0196|\\u0197|\\u0198|\\u019C|\\u019D|\\u019F|\\u01A0|\\u01A2|\\u01A4|\\u01A6|\\u01A7|\\u01A9|\\u01AC|\\u01AE|\\u01AF|\\u01B1|\\u01B2|\\u01B3|\\u01B5|\\u01B7|\\u01B8|\\u01BC|\\u01C4|\\u01C7|\\u01CA|\\u01CD|\\u01CF|\\u01D1|\\u01D3|\\u01D5|\\u01D7|\\u01D9|\\u01DB|\\u01DE|\\u01E0|\\u01E2|\\u01E4|\\u01E6|\\u01E8|\\u01EA|\\u01EC|\\u01EE|\\u01F1|\\u01F4|\\u01F6|\\u01F7|\\u01F8|\\u01FA|\\u01FC|\\u01FE|\\u0200|\\u0202|\\u0204|\\u0206|\\u0208|\\u020A|\\u020C|\\u020E|\\u0210|\\u0212|\\u0214|\\u0216|\\u0218|\\u021A|\\u021C|\\u021E|\\u0220|\\u0222|\\u0224|\\u0226|\\u0228|\\u022A|\\u022C|\\u022E|\\u0230|\\u0232|\\u023A|\\u023B|\\u023D|\\u023E|\\u0241|\\u0243|\\u0244|\\u0245|\\u0246|\\u0248|\\u024A|\\u024C|\\u024E|\\u0370|\\u0372|\\u0376|\\u0386|\\u0388|\\u0389|\\u038A|\\u038C|\\u038E|\\u038F|[\\u0391-\\u03A1]|[\\u03A3-\\u03AB]|\\u03CF|\\u03D2|\\u03D3|\\u03D4|\\u03D8|\\u03DA|\\u03DC|\\u03DE|\\u03E0|\\u03E2|\\u03E4|\\u03E6|\\u03E8|\\u03EA|\\u03EC|\\u03EE|\\u03F4|\\u03F7|\\u03F9|\\u03FA|[\\u03FD-\\u042F]|\\u0460|\\u0462|\\u0464|\\u0466|\\u0468|\\u046A|\\u046C|\\u046E|\\u0470|\\u0472|\\u0474|\\u0476|\\u0478|\\u047A|\\u047C|\\u047E|\\u0480|\\u048A|\\u048C|\\u048E|\\u0490|\\u0492|\\u0494|\\u0496|\\u0498|\\u049A|\\u049C|\\u049E|\\u04A0|\\u04A2|\\u04A4|\\u04A6|\\u04A8|\\u04AA|\\u04AC|\\u04AE|\\u04B0|\\u04B2|\\u04B4|\\u04B6|\\u04B8|\\u04BA|\\u04BC|\\u04BE|\\u04C0|\\u04C1|\\u04C3|\\u04C5|\\u04C7|\\u04C9|\\u04CB|\\u04CD|\\u04D0|\\u04D2|\\u04D4|\\u04D6|\\u04D8|\\u04DA|\\u04DC|\\u04DE|\\u04E0|\\u04E2|\\u04E4|\\u04E6|\\u04E8|\\u04EA|\\u04EC|\\u04EE|\\u04F0|\\u04F2|\\u04F4|\\u04F6|\\u04F8|\\u04FA|\\u04FC|\\u04FE|\\u0500|\\u0502|\\u0504|\\u0506|\\u0508|\\u050A|\\u050C|\\u050E|\\u0510|\\u0512|\\u0514|\\u0516|\\u0518|\\u051A|\\u051C|\\u051E|\\u0520|\\u0522|[\\u0531-\\u0556]|[\\u10A0-\\u10C5]|\\u1E00|\\u1E02|\\u1E04|\\u1E06|\\u1E08|\\u1E0A|\\u1E0C|\\u1E0E|\\u1E10|\\u1E12|\\u1E14|\\u1E16|\\u1E18|\\u1E1A|\\u1E1C|\\u1E1E|\\u1E20|\\u1E22|\\u1E24|\\u1E26|\\u1E28|\\u1E2A|\\u1E2C|\\u1E2E|\\u1E30|\\u1E32|\\u1E34|\\u1E36|\\u1E38|\\u1E3A|\\u1E3C|\\u1E3E|\\u1E40|\\u1E42|\\u1E44|\\u1E46|\\u1E48|\\u1E4A|\\u1E4C|\\u1E4E|\\u1E50|\\u1E52|\\u1E54|\\u1E56|\\u1E58|\\u1E5A|\\u1E5C|\\u1E5E|\\u1E60|\\u1E62|\\u1E64|\\u1E66|\\u1E68|\\u1E6A|\\u1E6C|\\u1E6E|\\u1E70|\\u1E72|\\u1E74|\\u1E76|\\u1E78|\\u1E7A|\\u1E7C|\\u1E7E|\\u1E80|\\u1E82|\\u1E84|\\u1E86|\\u1E88|\\u1E8A|\\u1E8C|\\u1E8E|\\u1E90|\\u1E92|\\u1E94|\\u1E9E|\\u1EA0|\\u1EA2|\\u1EA4|\\u1EA6|\\u1EA8|\\u1EAA|\\u1EAC|\\u1EAE|\\u1EB0|\\u1EB2|\\u1EB4|\\u1EB6|\\u1EB8|\\u1EBA|\\u1EBC|\\u1EBE|\\u1EC0|\\u1EC2|\\u1EC4|\\u1EC6|\\u1EC8|\\u1ECA|\\u1ECC|\\u1ECE|\\u1ED0|\\u1ED2|\\u1ED4|\\u1ED6|\\u1ED8|\\u1EDA|\\u1EDC|\\u1EDE|\\u1EE0|\\u1EE2|\\u1EE4|\\u1EE6|\\u1EE8|\\u1EEA|\\u1EEC|\\u1EEE|\\u1EF0|\\u1EF2|\\u1EF4|\\u1EF6|\\u1EF8|\\u1EFA|\\u1EFC|\\u1EFE|\\u1F08|\\u1F09|\\u1F0A|\\u1F0B|\\u1F0C|\\u1F0D|\\u1F0E|\\u1F0F|\\u1F18|\\u1F19|\\u1F1A|\\u1F1B|\\u1F1C|\\u1F1D|[\\u1F28-\\u1F2F]|[\\u1F38-\\u1F3F]|[\\u1F48-\\u1F4D]|\\u1F59|\\u1F5B|\\u1F5D|\\u1F5F|\\u1F68|\\u1F69|\\u1F6A|\\u1F6B|\\u1F6C|\\u1F6D|\\u1F6E|\\u1F6F|\\u1FB8|\\u1FB9|\\u1FBA|\\u1FBB|\\u1FC8|\\u1FC9|\\u1FCA|\\u1FCB|\\u1FD8|\\u1FD9|\\u1FDA|\\u1FDB|\\u1FE8|\\u1FE9|\\u1FEA|\\u1FEB|\\u1FEC|\\u1FF8|\\u1FF9|\\u1FFA|\\u1FFB|\\u2102|\\u2107|\\u210B|\\u210C|\\u210D|\\u2110|\\u2111|\\u2112|\\u2115|\\u2119|\\u211A|\\u211B|\\u211C|\\u211D|\\u2124|\\u2126|\\u2128|\\u212A|\\u212B|\\u212C|\\u212D|\\u2130|\\u2131|\\u2132|\\u2133|\\u213E|\\u213F|\\u2145|\\u2183|\\u2C00|\\u2C01|\\u2C02|\\u2C03|\\u2C04|\\u2C05|\\u2C06|\\u2C07|\\u2C08|\\u2C09|\\u2C0A|\\u2C0B|\\u2C0C|\\u2C0D|\\u2C0E|\\u2C0F|\\u2C10|\\u2C11|\\u2C12|\\u2C13|\\u2C14|\\u2C15|\\u2C16|\\u2C17|\\u2C18|\\u2C19|\\u2C1A|\\u2C1B|\\u2C1C|\\u2C1D|\\u2C1E|\\u2C1F|\\u2C20|\\u2C21|\\u2C22|\\u2C23|\\u2C24|\\u2C25|\\u2C26|\\u2C27|\\u2C28|\\u2C29|\\u2C2A|\\u2C2B|\\u2C2C|\\u2C2D|\\u2C2E|\\u2C60|\\u2C62|\\u2C63|\\u2C64|\\u2C67|\\u2C69|\\u2C6B|\\u2C6D|\\u2C6E|\\u2C6F|\\u2C72|\\u2C75|\\u2C80|\\u2C82|\\u2C84|\\u2C86|\\u2C88|\\u2C8A|\\u2C8C|\\u2C8E|\\u2C90|\\u2C92|\\u2C94|\\u2C96|\\u2C98|\\u2C9A|\\u2C9C|\\u2C9E|\\u2CA0|\\u2CA2|\\u2CA4|\\u2CA6|\\u2CA8|\\u2CAA|\\u2CAC|\\u2CAE|\\u2CB0|\\u2CB2|\\u2CB4|\\u2CB6|\\u2CB8|\\u2CBA|\\u2CBC|\\u2CBE|\\u2CC0|\\u2CC2|\\u2CC4|\\u2CC6|\\u2CC8|\\u2CCA|\\u2CCC|\\u2CCE|\\u2CD0|\\u2CD2|\\u2CD4|\\u2CD6|\\u2CD8|\\u2CDA|\\u2CDC|\\u2CDE|\\u2CE0|\\u2CE2|\\uA640|\\uA642|\\uA644|\\uA646|\\uA648|\\uA64A|\\uA64C|\\uA64E|\\uA650|\\uA652|\\uA654|\\uA656|\\uA658|\\uA65A|\\uA65C|\\uA65E|\\uA662|\\uA664|\\uA666|\\uA668|\\uA66A|\\uA66C|\\uA680|\\uA682|\\uA684|\\uA686|\\uA688|\\uA68A|\\uA68C|\\uA68E|\\uA690|\\uA692|\\uA694|\\uA696|\\uA722|\\uA724|\\uA726|\\uA728|\\uA72A|\\uA72C|\\uA72E|\\uA732|\\uA734|\\uA736|\\uA738|\\uA73A|\\uA73C|\\uA73E|\\uA740|\\uA742|\\uA744|\\uA746|\\uA748|\\uA74A|\\uA74C|\\uA74E|\\uA750|\\uA752|\\uA754|\\uA756|\\uA758|\\uA75A|\\uA75C|\\uA75E|\\uA760|\\uA762|\\uA764|\\uA766|\\uA768|\\uA76A|\\uA76C|\\uA76E|\\uA779|\\uA77B|\\uA77D|\\uA77E|\\uA780|\\uA782|\\uA784|\\uA786|\\uA78B|\\uFF21|\\uFF22|\\uFF23|\\uFF24|\\uFF25|\\uFF26|\\uFF27|\\uFF28|\\uFF29|\\uFF2A|\\uFF2B|\\uFF2C|\\uFF2D|\\uFF2E|\\uFF2F|\\uFF30|\\uFF31|\\uFF32|\\uFF33|\\uFF34|\\uFF35|\\uFF36|\\uFF37|\\uFF38|\\uFF39|\\uFF3A/;\r\n\r\n// lower case\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FLl%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Ll = /\\u0061|\\u0062|\\u0063|\\u0064|\\u0065|\\u0066|\\u0067|\\u0068|\\u0069|\\u006A|\\u006B|\\u006C|\\u006D|\\u006E|\\u006F|\\u0070|\\u0071|\\u0072|\\u0073|\\u0074|\\u0075|\\u0076|\\u0077|\\u0078|\\u0079|\\u007A|\\u00AA|\\u00B5|\\u00BA|\\u00DF|\\u00E0|\\u00E1|\\u00E2|\\u00E3|\\u00E4|\\u00E5|\\u00E6|\\u00E7|\\u00E8|\\u00E9|\\u00EA|\\u00EB|\\u00EC|\\u00ED|\\u00EE|\\u00EF|\\u00F0|\\u00F1|\\u00F2|\\u00F3|\\u00F4|\\u00F5|\\u00F6|\\u00F8|\\u00F9|\\u00FA|\\u00FB|\\u00FC|\\u00FD|\\u00FE|\\u00FF|\\u0101|\\u0103|\\u0105|\\u0107|\\u0109|\\u010B|\\u010D|\\u010F|\\u0111|\\u0113|\\u0115|\\u0117|\\u0119|\\u011B|\\u011D|\\u011F|\\u0121|\\u0123|\\u0125|\\u0127|\\u0129|\\u012B|\\u012D|\\u012F|\\u0131|\\u0133|\\u0135|\\u0137|\\u0138|\\u013A|\\u013C|\\u013E|\\u0140|\\u0142|\\u0144|\\u0146|\\u0148|\\u0149|\\u014B|\\u014D|\\u014F|\\u0151|\\u0153|\\u0155|\\u0157|\\u0159|\\u015B|\\u015D|\\u015F|\\u0161|\\u0163|\\u0165|\\u0167|\\u0169|\\u016B|\\u016D|\\u016F|\\u0171|\\u0173|\\u0175|\\u0177|\\u017A|\\u017C|\\u017E|\\u017F|\\u0180|\\u0183|\\u0185|\\u0188|\\u018C|\\u018D|\\u0192|\\u0195|\\u0199|\\u019A|\\u019B|\\u019E|\\u01A1|\\u01A3|\\u01A5|\\u01A8|\\u01AA|\\u01AB|\\u01AD|\\u01B0|\\u01B4|\\u01B6|\\u01B9|\\u01BA|\\u01BD|\\u01BE|\\u01BF|\\u01C6|\\u01C9|\\u01CC|\\u01CE|\\u01D0|\\u01D2|\\u01D4|\\u01D6|\\u01D8|\\u01DA|\\u01DC|\\u01DD|\\u01DF|\\u01E1|\\u01E3|\\u01E5|\\u01E7|\\u01E9|\\u01EB|\\u01ED|\\u01EF|\\u01F0|\\u01F3|\\u01F5|\\u01F9|\\u01FB|\\u01FD|\\u01FF|\\u0201|\\u0203|\\u0205|\\u0207|\\u0209|\\u020B|\\u020D|\\u020F|\\u0211|\\u0213|\\u0215|\\u0217|\\u0219|\\u021B|\\u021D|\\u021F|\\u0221|\\u0223|\\u0225|\\u0227|\\u0229|\\u022B|\\u022D|\\u022F|\\u0231|\\u0233|\\u0234|\\u0235|\\u0236|\\u0237|\\u0238|\\u0239|\\u023C|\\u023F|\\u0240|\\u0242|\\u0247|\\u0249|\\u024B|\\u024D|\\u024F|\\u0250|\\u0251|\\u0252|\\u0253|\\u0254|\\u0255|\\u0256|\\u0257|\\u0258|\\u0259|\\u025A|\\u025B|\\u025C|\\u025D|\\u025E|\\u025F|\\u0260|\\u0261|\\u0262|\\u0263|\\u0264|\\u0265|\\u0266|\\u0267|\\u0268|\\u0269|\\u026A|\\u026B|\\u026C|\\u026D|\\u026E|\\u026F|\\u0270|\\u0271|\\u0272|\\u0273|\\u0274|\\u0275|\\u0276|\\u0277|\\u0278|\\u0279|\\u027A|\\u027B|\\u027C|\\u027D|\\u027E|\\u027F|\\u0280|\\u0281|\\u0282|\\u0283|\\u0284|\\u0285|\\u0286|\\u0287|\\u0288|\\u0289|\\u028A|\\u028B|\\u028C|\\u028D|\\u028E|\\u028F|\\u0290|\\u0291|\\u0292|\\u0293|\\u0295|\\u0296|\\u0297|\\u0298|\\u0299|\\u029A|\\u029B|\\u029C|\\u029D|\\u029E|\\u029F|\\u02A0|\\u02A1|\\u02A2|\\u02A3|\\u02A4|\\u02A5|\\u02A6|\\u02A7|\\u02A8|\\u02A9|\\u02AA|\\u02AB|\\u02AC|\\u02AD|\\u02AE|\\u02AF|\\u0371|\\u0373|\\u0377|\\u037B|\\u037C|\\u037D|\\u0390|\\u03AC|\\u03AD|\\u03AE|\\u03AF|\\u03B0|\\u03B1|\\u03B2|\\u03B3|\\u03B4|\\u03B5|\\u03B6|\\u03B7|\\u03B8|\\u03B9|\\u03BA|\\u03BB|\\u03BC|\\u03BD|\\u03BE|\\u03BF|\\u03C0|\\u03C1|\\u03C2|\\u03C3|\\u03C4|\\u03C5|\\u03C6|\\u03C7|\\u03C8|\\u03C9|\\u03CA|\\u03CB|\\u03CC|\\u03CD|\\u03CE|\\u03D0|\\u03D1|\\u03D5|\\u03D6|\\u03D7|\\u03D9|\\u03DB|\\u03DD|\\u03DF|\\u03E1|\\u03E3|\\u03E5|\\u03E7|\\u03E9|\\u03EB|\\u03ED|\\u03EF|\\u03F0|\\u03F1|\\u03F2|\\u03F3|\\u03F5|\\u03F8|\\u03FB|\\u03FC|\\u0430|\\u0431|\\u0432|\\u0433|\\u0434|\\u0435|\\u0436|\\u0437|\\u0438|\\u0439|\\u043A|\\u043B|\\u043C|\\u043D|\\u043E|\\u043F|\\u0440|\\u0441|\\u0442|\\u0443|\\u0444|\\u0445|\\u0446|\\u0447|\\u0448|\\u0449|\\u044A|\\u044B|\\u044C|\\u044D|\\u044E|\\u044F|\\u0450|\\u0451|\\u0452|\\u0453|\\u0454|\\u0455|\\u0456|\\u0457|\\u0458|\\u0459|\\u045A|\\u045B|\\u045C|\\u045D|\\u045E|\\u045F|\\u0461|\\u0463|\\u0465|\\u0467|\\u0469|\\u046B|\\u046D|\\u046F|\\u0471|\\u0473|\\u0475|\\u0477|\\u0479|\\u047B|\\u047D|\\u047F|\\u0481|\\u048B|\\u048D|\\u048F|\\u0491|\\u0493|\\u0495|\\u0497|\\u0499|\\u049B|\\u049D|\\u049F|\\u04A1|\\u04A3|\\u04A5|\\u04A7|\\u04A9|\\u04AB|\\u04AD|\\u04AF|\\u04B1|\\u04B3|\\u04B5|\\u04B7|\\u04B9|\\u04BB|\\u04BD|\\u04BF|\\u04C2|\\u04C4|\\u04C6|\\u04C8|\\u04CA|\\u04CC|\\u04CE|\\u04CF|\\u04D1|\\u04D3|\\u04D5|\\u04D7|\\u04D9|\\u04DB|\\u04DD|\\u04DF|\\u04E1|\\u04E3|\\u04E5|\\u04E7|\\u04E9|\\u04EB|\\u04ED|\\u04EF|\\u04F1|\\u04F3|\\u04F5|\\u04F7|\\u04F9|\\u04FB|\\u04FD|\\u04FF|\\u0501|\\u0503|\\u0505|\\u0507|\\u0509|\\u050B|\\u050D|\\u050F|\\u0511|\\u0513|\\u0515|\\u0517|\\u0519|\\u051B|\\u051D|\\u051F|\\u0521|\\u0523|\\u0561|\\u0562|\\u0563|\\u0564|\\u0565|\\u0566|\\u0567|\\u0568|\\u0569|\\u056A|\\u056B|\\u056C|\\u056D|\\u056E|\\u056F|\\u0570|\\u0571|\\u0572|\\u0573|\\u0574|\\u0575|\\u0576|\\u0577|\\u0578|\\u0579|\\u057A|\\u057B|\\u057C|\\u057D|\\u057E|\\u057F|\\u0580|\\u0581|\\u0582|\\u0583|\\u0584|\\u0585|\\u0586|\\u0587|\\u1D00|\\u1D01|\\u1D02|\\u1D03|\\u1D04|\\u1D05|\\u1D06|\\u1D07|\\u1D08|\\u1D09|\\u1D0A|\\u1D0B|\\u1D0C|\\u1D0D|\\u1D0E|\\u1D0F|\\u1D10|\\u1D11|\\u1D12|\\u1D13|\\u1D14|\\u1D15|\\u1D16|\\u1D17|\\u1D18|\\u1D19|\\u1D1A|\\u1D1B|\\u1D1C|\\u1D1D|\\u1D1E|\\u1D1F|\\u1D20|\\u1D21|\\u1D22|\\u1D23|\\u1D24|\\u1D25|\\u1D26|\\u1D27|\\u1D28|\\u1D29|\\u1D2A|\\u1D2B|\\u1D62|\\u1D63|\\u1D64|\\u1D65|\\u1D66|\\u1D67|\\u1D68|\\u1D69|\\u1D6A|\\u1D6B|\\u1D6C|\\u1D6D|\\u1D6E|\\u1D6F|\\u1D70|\\u1D71|\\u1D72|\\u1D73|\\u1D74|\\u1D75|\\u1D76|\\u1D77|\\u1D79|\\u1D7A|\\u1D7B|\\u1D7C|\\u1D7D|\\u1D7E|\\u1D7F|\\u1D80|\\u1D81|\\u1D82|\\u1D83|\\u1D84|\\u1D85|\\u1D86|\\u1D87|\\u1D88|\\u1D89|\\u1D8A|\\u1D8B|\\u1D8C|\\u1D8D|\\u1D8E|\\u1D8F|\\u1D90|\\u1D91|\\u1D92|\\u1D93|\\u1D94|\\u1D95|\\u1D96|\\u1D97|\\u1D98|\\u1D99|\\u1D9A|\\u1E01|\\u1E03|\\u1E05|\\u1E07|\\u1E09|\\u1E0B|\\u1E0D|\\u1E0F|\\u1E11|\\u1E13|\\u1E15|\\u1E17|\\u1E19|\\u1E1B|\\u1E1D|\\u1E1F|\\u1E21|\\u1E23|\\u1E25|\\u1E27|\\u1E29|\\u1E2B|\\u1E2D|\\u1E2F|\\u1E31|\\u1E33|\\u1E35|\\u1E37|\\u1E39|\\u1E3B|\\u1E3D|\\u1E3F|\\u1E41|\\u1E43|\\u1E45|\\u1E47|\\u1E49|\\u1E4B|\\u1E4D|\\u1E4F|\\u1E51|\\u1E53|\\u1E55|\\u1E57|\\u1E59|\\u1E5B|\\u1E5D|\\u1E5F|\\u1E61|\\u1E63|\\u1E65|\\u1E67|\\u1E69|\\u1E6B|\\u1E6D|\\u1E6F|\\u1E71|\\u1E73|\\u1E75|\\u1E77|\\u1E79|\\u1E7B|\\u1E7D|\\u1E7F|\\u1E81|\\u1E83|\\u1E85|\\u1E87|\\u1E89|\\u1E8B|\\u1E8D|\\u1E8F|\\u1E91|\\u1E93|\\u1E95|\\u1E96|\\u1E97|\\u1E98|\\u1E99|\\u1E9A|\\u1E9B|\\u1E9C|\\u1E9D|\\u1E9F|\\u1EA1|\\u1EA3|\\u1EA5|\\u1EA7|\\u1EA9|\\u1EAB|\\u1EAD|\\u1EAF|\\u1EB1|\\u1EB3|\\u1EB5|\\u1EB7|\\u1EB9|\\u1EBB|\\u1EBD|\\u1EBF|\\u1EC1|\\u1EC3|\\u1EC5|\\u1EC7|\\u1EC9|\\u1ECB|\\u1ECD|\\u1ECF|\\u1ED1|\\u1ED3|\\u1ED5|\\u1ED7|\\u1ED9|\\u1EDB|\\u1EDD|\\u1EDF|\\u1EE1|\\u1EE3|\\u1EE5|\\u1EE7|\\u1EE9|\\u1EEB|\\u1EED|\\u1EEF|\\u1EF1|\\u1EF3|\\u1EF5|\\u1EF7|\\u1EF9|\\u1EFB|\\u1EFD|\\u1EFF|\\u1F00|\\u1F01|\\u1F02|\\u1F03|\\u1F04|\\u1F05|\\u1F06|\\u1F07|\\u1F10|\\u1F11|\\u1F12|\\u1F13|\\u1F14|\\u1F15|\\u1F20|\\u1F21|\\u1F22|\\u1F23|\\u1F24|\\u1F25|\\u1F26|\\u1F27|\\u1F30|\\u1F31|\\u1F32|\\u1F33|\\u1F34|\\u1F35|\\u1F36|\\u1F37|\\u1F40|\\u1F41|\\u1F42|\\u1F43|\\u1F44|\\u1F45|\\u1F50|\\u1F51|\\u1F52|\\u1F53|\\u1F54|\\u1F55|\\u1F56|\\u1F57|\\u1F60|\\u1F61|\\u1F62|\\u1F63|\\u1F64|\\u1F65|\\u1F66|\\u1F67|\\u1F70|\\u1F71|\\u1F72|\\u1F73|\\u1F74|\\u1F75|\\u1F76|\\u1F77|\\u1F78|\\u1F79|\\u1F7A|\\u1F7B|\\u1F7C|\\u1F7D|\\u1F80|\\u1F81|\\u1F82|\\u1F83|\\u1F84|\\u1F85|\\u1F86|\\u1F87|\\u1F90|\\u1F91|\\u1F92|\\u1F93|\\u1F94|\\u1F95|\\u1F96|\\u1F97|\\u1FA0|\\u1FA1|\\u1FA2|\\u1FA3|\\u1FA4|\\u1FA5|\\u1FA6|\\u1FA7|\\u1FB0|\\u1FB1|\\u1FB2|\\u1FB3|\\u1FB4|\\u1FB6|\\u1FB7|\\u1FBE|\\u1FC2|\\u1FC3|\\u1FC4|\\u1FC6|\\u1FC7|\\u1FD0|\\u1FD1|\\u1FD2|\\u1FD3|\\u1FD6|\\u1FD7|\\u1FE0|\\u1FE1|\\u1FE2|\\u1FE3|\\u1FE4|\\u1FE5|\\u1FE6|\\u1FE7|\\u1FF2|\\u1FF3|\\u1FF4|\\u1FF6|\\u1FF7|\\u2071|\\u207F|\\u210A|\\u210E|\\u210F|\\u2113|\\u212F|\\u2134|\\u2139|\\u213C|\\u213D|\\u2146|\\u2147|\\u2148|\\u2149|\\u214E|\\u2184|\\u2C30|\\u2C31|\\u2C32|\\u2C33|\\u2C34|\\u2C35|\\u2C36|\\u2C37|\\u2C38|\\u2C39|\\u2C3A|\\u2C3B|\\u2C3C|\\u2C3D|\\u2C3E|\\u2C3F|\\u2C40|\\u2C41|\\u2C42|\\u2C43|\\u2C44|\\u2C45|\\u2C46|\\u2C47|\\u2C48|\\u2C49|\\u2C4A|\\u2C4B|\\u2C4C|\\u2C4D|\\u2C4E|\\u2C4F|\\u2C50|\\u2C51|\\u2C52|\\u2C53|\\u2C54|\\u2C55|\\u2C56|\\u2C57|\\u2C58|\\u2C59|\\u2C5A|\\u2C5B|\\u2C5C|\\u2C5D|\\u2C5E|\\u2C61|\\u2C65|\\u2C66|\\u2C68|\\u2C6A|\\u2C6C|\\u2C71|\\u2C73|\\u2C74|\\u2C76|\\u2C77|\\u2C78|\\u2C79|\\u2C7A|\\u2C7B|\\u2C7C|\\u2C81|\\u2C83|\\u2C85|\\u2C87|\\u2C89|\\u2C8B|\\u2C8D|\\u2C8F|\\u2C91|\\u2C93|\\u2C95|\\u2C97|\\u2C99|\\u2C9B|\\u2C9D|\\u2C9F|\\u2CA1|\\u2CA3|\\u2CA5|\\u2CA7|\\u2CA9|\\u2CAB|\\u2CAD|\\u2CAF|\\u2CB1|\\u2CB3|\\u2CB5|\\u2CB7|\\u2CB9|\\u2CBB|\\u2CBD|\\u2CBF|\\u2CC1|\\u2CC3|\\u2CC5|\\u2CC7|\\u2CC9|\\u2CCB|\\u2CCD|\\u2CCF|\\u2CD1|\\u2CD3|\\u2CD5|\\u2CD7|\\u2CD9|\\u2CDB|\\u2CDD|\\u2CDF|\\u2CE1|\\u2CE3|\\u2CE4|\\u2D00|\\u2D01|\\u2D02|\\u2D03|\\u2D04|\\u2D05|\\u2D06|\\u2D07|\\u2D08|\\u2D09|\\u2D0A|\\u2D0B|\\u2D0C|\\u2D0D|\\u2D0E|\\u2D0F|\\u2D10|\\u2D11|\\u2D12|\\u2D13|\\u2D14|\\u2D15|\\u2D16|\\u2D17|\\u2D18|\\u2D19|\\u2D1A|\\u2D1B|\\u2D1C|\\u2D1D|\\u2D1E|\\u2D1F|\\u2D20|\\u2D21|\\u2D22|\\u2D23|\\u2D24|\\u2D25|\\uA641|\\uA643|\\uA645|\\uA647|\\uA649|\\uA64B|\\uA64D|\\uA64F|\\uA651|\\uA653|\\uA655|\\uA657|\\uA659|\\uA65B|\\uA65D|\\uA65F|\\uA663|\\uA665|\\uA667|\\uA669|\\uA66B|\\uA66D|\\uA681|\\uA683|\\uA685|\\uA687|\\uA689|\\uA68B|\\uA68D|\\uA68F|\\uA691|\\uA693|\\uA695|\\uA697|\\uA723|\\uA725|\\uA727|\\uA729|\\uA72B|\\uA72D|\\uA72F|\\uA730|\\uA731|\\uA733|\\uA735|\\uA737|\\uA739|\\uA73B|\\uA73D|\\uA73F|\\uA741|\\uA743|\\uA745|\\uA747|\\uA749|\\uA74B|\\uA74D|\\uA74F|\\uA751|\\uA753|\\uA755|\\uA757|\\uA759|\\uA75B|\\uA75D|\\uA75F|\\uA761|\\uA763|\\uA765|\\uA767|\\uA769|\\uA76B|\\uA76D|\\uA76F|\\uA771|\\uA772|\\uA773|\\uA774|\\uA775|\\uA776|\\uA777|\\uA778|\\uA77A|\\uA77C|\\uA77F|\\uA781|\\uA783|\\uA785|\\uA787|\\uA78C|\\uFB00|\\uFB01|\\uFB02|\\uFB03|\\uFB04|\\uFB05|\\uFB06|\\uFB13|\\uFB14|\\uFB15|\\uFB16|\\uFB17|\\uFF41|\\uFF42|\\uFF43|\\uFF44|\\uFF45|\\uFF46|\\uFF47|\\uFF48|\\uFF49|\\uFF4A|\\uFF4B|\\uFF4C|\\uFF4D|\\uFF4E|\\uFF4F|\\uFF50|\\uFF51|\\uFF52|\\uFF53|\\uFF54|\\uFF55|\\uFF56|\\uFF57|\\uFF58|\\uFF59|\\uFF5A/;\r\n\r\n// title case\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FLt%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Lt = /\\u01C5|\\u01C8|\\u01CB|\\u01F2|\\u1F88|\\u1F89|\\u1F8A|\\u1F8B|\\u1F8C|\\u1F8D|\\u1F8E|\\u1F8F|\\u1F98|\\u1F99|\\u1F9A|\\u1F9B|\\u1F9C|\\u1F9D|\\u1F9E|\\u1F9F|\\u1FA8|\\u1FA9|\\u1FAA|\\u1FAB|\\u1FAC|\\u1FAD|\\u1FAE|\\u1FAF|\\u1FBC|\\u1FCC/;\r\n\r\n// modifier letter\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FLm%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Lm = /\\u02B0|\\u02B1|\\u02B2|\\u02B3|\\u02B4|\\u02B5|\\u02B6|\\u02B7|\\u02B8|\\u02B9|\\u02BA|\\u02BB|\\u02BC|\\u02BD|\\u02BE|\\u02BF|\\u02C0|\\u02C1|\\u02C6|\\u02C7|\\u02C8|\\u02C9|\\u02CA|\\u02CB|\\u02CC|\\u02CD|\\u02CE|\\u02CF|\\u02D0|\\u02D1|\\u02E0|\\u02E1|\\u02E2|\\u02E3|\\u02E4|\\u02EC|\\u02EE|\\u0374|\\u037A|\\u0559|\\u0640|\\u06E5|\\u06E6|\\u07F4|\\u07F5|\\u07FA|\\u0971|\\u0E46|\\u0EC6|\\u10FC|\\u17D7|\\u1843|\\u1C78|\\u1C79|\\u1C7A|\\u1C7B|\\u1C7C|\\u1C7D|\\u1D2C|\\u1D2D|\\u1D2E|\\u1D2F|\\u1D30|\\u1D31|\\u1D32|\\u1D33|\\u1D34|\\u1D35|\\u1D36|\\u1D37|\\u1D38|\\u1D39|\\u1D3A|\\u1D3B|\\u1D3C|\\u1D3D|\\u1D3E|\\u1D3F|\\u1D40|\\u1D41|\\u1D42|\\u1D43|\\u1D44|\\u1D45|\\u1D46|\\u1D47|\\u1D48|\\u1D49|\\u1D4A|\\u1D4B|\\u1D4C|\\u1D4D|\\u1D4E|\\u1D4F|\\u1D50|\\u1D51|\\u1D52|\\u1D53|\\u1D54|\\u1D55|\\u1D56|\\u1D57|\\u1D58|\\u1D59|\\u1D5A|\\u1D5B|\\u1D5C|\\u1D5D|\\u1D5E|\\u1D5F|\\u1D60|\\u1D61|\\u1D78|\\u1D9B|\\u1D9C|\\u1D9D|\\u1D9E|\\u1D9F|\\u1DA0|\\u1DA1|\\u1DA2|\\u1DA3|\\u1DA4|\\u1DA5|\\u1DA6|\\u1DA7|\\u1DA8|\\u1DA9|\\u1DAA|\\u1DAB|\\u1DAC|\\u1DAD|\\u1DAE|\\u1DAF|\\u1DB0|\\u1DB1|\\u1DB2|\\u1DB3|\\u1DB4|\\u1DB5|\\u1DB6|\\u1DB7|\\u1DB8|\\u1DB9|\\u1DBA|\\u1DBB|\\u1DBC|\\u1DBD|\\u1DBE|\\u1DBF|\\u2090|\\u2091|\\u2092|\\u2093|\\u2094|\\u2C7D|\\u2D6F|\\u2E2F|\\u3005|\\u3031|\\u3032|\\u3033|\\u3034|\\u3035|\\u303B|\\u309D|\\u309E|\\u30FC|\\u30FD|\\u30FE|\\uA015|\\uA60C|\\uA67F|\\uA717|\\uA718|\\uA719|\\uA71A|\\uA71B|\\uA71C|\\uA71D|\\uA71E|\\uA71F|\\uA770|\\uA788|\\uFF70|\\uFF9E|\\uFF9F/;\r\n\r\n// other letter\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FLo%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Lo = /\\u01BB|\\u01C0|\\u01C1|\\u01C2|\\u01C3|\\u0294|\\u05D0|\\u05D1|\\u05D2|\\u05D3|\\u05D4|\\u05D5|\\u05D6|\\u05D7|\\u05D8|\\u05D9|\\u05DA|\\u05DB|\\u05DC|\\u05DD|\\u05DE|\\u05DF|\\u05E0|\\u05E1|\\u05E2|\\u05E3|\\u05E4|\\u05E5|\\u05E6|\\u05E7|\\u05E8|\\u05E9|\\u05EA|\\u05F0|\\u05F1|\\u05F2|\\u0621|\\u0622|\\u0623|\\u0624|\\u0625|\\u0626|\\u0627|\\u0628|\\u0629|\\u062A|\\u062B|\\u062C|\\u062D|\\u062E|\\u062F|\\u0630|\\u0631|\\u0632|\\u0633|\\u0634|\\u0635|\\u0636|\\u0637|\\u0638|\\u0639|\\u063A|\\u063B|\\u063C|\\u063D|\\u063E|\\u063F|\\u0641|\\u0642|\\u0643|\\u0644|\\u0645|\\u0646|\\u0647|\\u0648|\\u0649|\\u064A|\\u066E|\\u066F|\\u0671|\\u0672|\\u0673|\\u0674|\\u0675|\\u0676|\\u0677|\\u0678|\\u0679|\\u067A|\\u067B|\\u067C|\\u067D|\\u067E|\\u067F|\\u0680|\\u0681|\\u0682|\\u0683|\\u0684|\\u0685|\\u0686|\\u0687|\\u0688|\\u0689|\\u068A|\\u068B|\\u068C|\\u068D|\\u068E|\\u068F|\\u0690|\\u0691|\\u0692|\\u0693|\\u0694|\\u0695|\\u0696|\\u0697|\\u0698|\\u0699|\\u069A|\\u069B|\\u069C|\\u069D|\\u069E|\\u069F|\\u06A0|\\u06A1|\\u06A2|\\u06A3|\\u06A4|\\u06A5|\\u06A6|\\u06A7|\\u06A8|\\u06A9|\\u06AA|\\u06AB|\\u06AC|\\u06AD|\\u06AE|\\u06AF|\\u06B0|\\u06B1|\\u06B2|\\u06B3|\\u06B4|\\u06B5|\\u06B6|\\u06B7|\\u06B8|\\u06B9|\\u06BA|\\u06BB|\\u06BC|\\u06BD|\\u06BE|\\u06BF|\\u06C0|\\u06C1|\\u06C2|\\u06C3|\\u06C4|\\u06C5|\\u06C6|\\u06C7|\\u06C8|\\u06C9|\\u06CA|\\u06CB|\\u06CC|\\u06CD|\\u06CE|\\u06CF|\\u06D0|\\u06D1|\\u06D2|\\u06D3|\\u06D5|\\u06EE|\\u06EF|\\u06FA|\\u06FB|\\u06FC|\\u06FF|\\u0710|\\u0712|\\u0713|\\u0714|\\u0715|\\u0716|\\u0717|\\u0718|\\u0719|\\u071A|\\u071B|\\u071C|\\u071D|\\u071E|\\u071F|\\u0720|\\u0721|\\u0722|\\u0723|\\u0724|\\u0725|\\u0726|\\u0727|\\u0728|\\u0729|\\u072A|\\u072B|\\u072C|\\u072D|\\u072E|\\u072F|\\u074D|\\u074E|\\u074F|\\u0750|\\u0751|\\u0752|\\u0753|\\u0754|\\u0755|\\u0756|\\u0757|\\u0758|\\u0759|\\u075A|\\u075B|\\u075C|\\u075D|\\u075E|\\u075F|\\u0760|\\u0761|\\u0762|\\u0763|\\u0764|\\u0765|\\u0766|\\u0767|\\u0768|\\u0769|\\u076A|\\u076B|\\u076C|\\u076D|\\u076E|\\u076F|\\u0770|\\u0771|\\u0772|\\u0773|\\u0774|\\u0775|\\u0776|\\u0777|\\u0778|\\u0779|\\u077A|\\u077B|\\u077C|\\u077D|\\u077E|\\u077F|\\u0780|\\u0781|\\u0782|\\u0783|\\u0784|\\u0785|\\u0786|\\u0787|\\u0788|\\u0789|\\u078A|\\u078B|\\u078C|\\u078D|\\u078E|\\u078F|\\u0790|\\u0791|\\u0792|\\u0793|\\u0794|\\u0795|\\u0796|\\u0797|\\u0798|\\u0799|\\u079A|\\u079B|\\u079C|\\u079D|\\u079E|\\u079F|\\u07A0|\\u07A1|\\u07A2|\\u07A3|\\u07A4|\\u07A5|\\u07B1|\\u07CA|\\u07CB|\\u07CC|\\u07CD|\\u07CE|\\u07CF|\\u07D0|\\u07D1|\\u07D2|\\u07D3|\\u07D4|\\u07D5|\\u07D6|\\u07D7|\\u07D8|\\u07D9|\\u07DA|\\u07DB|\\u07DC|\\u07DD|\\u07DE|\\u07DF|\\u07E0|\\u07E1|\\u07E2|\\u07E3|\\u07E4|\\u07E5|\\u07E6|\\u07E7|\\u07E8|\\u07E9|\\u07EA|\\u0904|\\u0905|\\u0906|\\u0907|\\u0908|\\u0909|\\u090A|\\u090B|\\u090C|\\u090D|\\u090E|\\u090F|\\u0910|\\u0911|\\u0912|\\u0913|\\u0914|\\u0915|\\u0916|\\u0917|\\u0918|\\u0919|\\u091A|\\u091B|\\u091C|\\u091D|\\u091E|\\u091F|\\u0920|\\u0921|\\u0922|\\u0923|\\u0924|\\u0925|\\u0926|\\u0927|\\u0928|\\u0929|\\u092A|\\u092B|\\u092C|\\u092D|\\u092E|\\u092F|\\u0930|\\u0931|\\u0932|\\u0933|\\u0934|\\u0935|\\u0936|\\u0937|\\u0938|\\u0939|\\u093D|\\u0950|\\u0958|\\u0959|\\u095A|\\u095B|\\u095C|\\u095D|\\u095E|\\u095F|\\u0960|\\u0961|\\u0972|\\u097B|\\u097C|\\u097D|\\u097E|\\u097F|\\u0985|\\u0986|\\u0987|\\u0988|\\u0989|\\u098A|\\u098B|\\u098C|\\u098F|\\u0990|\\u0993|\\u0994|\\u0995|\\u0996|\\u0997|\\u0998|\\u0999|\\u099A|\\u099B|\\u099C|\\u099D|\\u099E|\\u099F|\\u09A0|\\u09A1|\\u09A2|\\u09A3|\\u09A4|\\u09A5|\\u09A6|\\u09A7|\\u09A8|\\u09AA|\\u09AB|\\u09AC|\\u09AD|\\u09AE|\\u09AF|\\u09B0|\\u09B2|\\u09B6|\\u09B7|\\u09B8|\\u09B9|\\u09BD|\\u09CE|\\u09DC|\\u09DD|\\u09DF|\\u09E0|\\u09E1|\\u09F0|\\u09F1|\\u0A05|\\u0A06|\\u0A07|\\u0A08|\\u0A09|\\u0A0A|\\u0A0F|\\u0A10|\\u0A13|\\u0A14|\\u0A15|\\u0A16|\\u0A17|\\u0A18|\\u0A19|\\u0A1A|\\u0A1B|\\u0A1C|\\u0A1D|\\u0A1E|\\u0A1F|\\u0A20|\\u0A21|\\u0A22|\\u0A23|\\u0A24|\\u0A25|\\u0A26|\\u0A27|\\u0A28|\\u0A2A|\\u0A2B|\\u0A2C|\\u0A2D|\\u0A2E|\\u0A2F|\\u0A30|\\u0A32|\\u0A33|\\u0A35|\\u0A36|\\u0A38|\\u0A39|\\u0A59|\\u0A5A|\\u0A5B|\\u0A5C|\\u0A5E|\\u0A72|\\u0A73|\\u0A74|\\u0A85|\\u0A86|\\u0A87|\\u0A88|\\u0A89|\\u0A8A|\\u0A8B|\\u0A8C|\\u0A8D|\\u0A8F|\\u0A90|\\u0A91|\\u0A93|\\u0A94|\\u0A95|\\u0A96|\\u0A97|\\u0A98|\\u0A99|\\u0A9A|\\u0A9B|\\u0A9C|\\u0A9D|\\u0A9E|\\u0A9F|\\u0AA0|\\u0AA1|\\u0AA2|\\u0AA3|\\u0AA4|\\u0AA5|\\u0AA6|\\u0AA7|\\u0AA8|\\u0AAA|\\u0AAB|\\u0AAC|\\u0AAD|\\u0AAE|\\u0AAF|\\u0AB0|\\u0AB2|\\u0AB3|\\u0AB5|\\u0AB6|\\u0AB7|\\u0AB8|\\u0AB9|\\u0ABD|\\u0AD0|\\u0AE0|\\u0AE1|\\u0B05|\\u0B06|\\u0B07|\\u0B08|\\u0B09|\\u0B0A|\\u0B0B|\\u0B0C|\\u0B0F|\\u0B10|\\u0B13|\\u0B14|\\u0B15|\\u0B16|\\u0B17|\\u0B18|\\u0B19|\\u0B1A|\\u0B1B|\\u0B1C|\\u0B1D|\\u0B1E|\\u0B1F|\\u0B20|\\u0B21|\\u0B22|\\u0B23|\\u0B24|\\u0B25|\\u0B26|\\u0B27|\\u0B28|\\u0B2A|\\u0B2B|\\u0B2C|\\u0B2D|\\u0B2E|\\u0B2F|\\u0B30|\\u0B32|\\u0B33|\\u0B35|\\u0B36|\\u0B37|\\u0B38|\\u0B39|\\u0B3D|\\u0B5C|\\u0B5D|\\u0B5F|\\u0B60|\\u0B61|\\u0B71|\\u0B83|\\u0B85|\\u0B86|\\u0B87|\\u0B88|\\u0B89|\\u0B8A|\\u0B8E|\\u0B8F|\\u0B90|\\u0B92|\\u0B93|\\u0B94|\\u0B95|\\u0B99|\\u0B9A|\\u0B9C|\\u0B9E|\\u0B9F|\\u0BA3|\\u0BA4|\\u0BA8|\\u0BA9|\\u0BAA|\\u0BAE|\\u0BAF|\\u0BB0|\\u0BB1|\\u0BB2|\\u0BB3|\\u0BB4|\\u0BB5|\\u0BB6|\\u0BB7|\\u0BB8|\\u0BB9|\\u0BD0|\\u0C05|\\u0C06|\\u0C07|\\u0C08|\\u0C09|\\u0C0A|\\u0C0B|\\u0C0C|\\u0C0E|\\u0C0F|\\u0C10|\\u0C12|\\u0C13|\\u0C14|\\u0C15|\\u0C16|\\u0C17|\\u0C18|\\u0C19|\\u0C1A|\\u0C1B|\\u0C1C|\\u0C1D|\\u0C1E|\\u0C1F|\\u0C20|\\u0C21|\\u0C22|\\u0C23|\\u0C24|\\u0C25|\\u0C26|\\u0C27|\\u0C28|\\u0C2A|\\u0C2B|\\u0C2C|\\u0C2D|\\u0C2E|\\u0C2F|\\u0C30|\\u0C31|\\u0C32|\\u0C33|\\u0C35|\\u0C36|\\u0C37|\\u0C38|\\u0C39|\\u0C3D|\\u0C58|\\u0C59|\\u0C60|\\u0C61|\\u0C85|\\u0C86|\\u0C87|\\u0C88|\\u0C89|\\u0C8A|\\u0C8B|\\u0C8C|\\u0C8E|\\u0C8F|\\u0C90|\\u0C92|\\u0C93|\\u0C94|\\u0C95|\\u0C96|\\u0C97|\\u0C98|\\u0C99|\\u0C9A|\\u0C9B|\\u0C9C|\\u0C9D|\\u0C9E|\\u0C9F|\\u0CA0|\\u0CA1|\\u0CA2|\\u0CA3|\\u0CA4|\\u0CA5|\\u0CA6|\\u0CA7|\\u0CA8|\\u0CAA|\\u0CAB|\\u0CAC|\\u0CAD|\\u0CAE|\\u0CAF|\\u0CB0|\\u0CB1|\\u0CB2|\\u0CB3|\\u0CB5|\\u0CB6|\\u0CB7|\\u0CB8|\\u0CB9|\\u0CBD|\\u0CDE|\\u0CE0|\\u0CE1|\\u0D05|\\u0D06|\\u0D07|\\u0D08|\\u0D09|\\u0D0A|\\u0D0B|\\u0D0C|\\u0D0E|\\u0D0F|\\u0D10|\\u0D12|\\u0D13|\\u0D14|\\u0D15|\\u0D16|\\u0D17|\\u0D18|\\u0D19|\\u0D1A|\\u0D1B|\\u0D1C|\\u0D1D|\\u0D1E|\\u0D1F|\\u0D20|\\u0D21|\\u0D22|\\u0D23|\\u0D24|\\u0D25|\\u0D26|\\u0D27|\\u0D28|\\u0D2A|\\u0D2B|\\u0D2C|\\u0D2D|\\u0D2E|\\u0D2F|\\u0D30|\\u0D31|\\u0D32|\\u0D33|\\u0D34|\\u0D35|\\u0D36|\\u0D37|\\u0D38|\\u0D39|\\u0D3D|\\u0D60|\\u0D61|\\u0D7A|\\u0D7B|\\u0D7C|\\u0D7D|\\u0D7E|\\u0D7F|\\u0D85|\\u0D86|\\u0D87|\\u0D88|\\u0D89|\\u0D8A|\\u0D8B|\\u0D8C|\\u0D8D|\\u0D8E|\\u0D8F|\\u0D90|\\u0D91|\\u0D92|\\u0D93|\\u0D94|\\u0D95|\\u0D96|\\u0D9A|\\u0D9B|\\u0D9C|\\u0D9D|\\u0D9E|\\u0D9F|\\u0DA0|\\u0DA1|\\u0DA2|\\u0DA3|\\u0DA4|\\u0DA5|\\u0DA6|\\u0DA7|\\u0DA8|\\u0DA9|\\u0DAA|\\u0DAB|\\u0DAC|\\u0DAD|\\u0DAE|\\u0DAF|\\u0DB0|\\u0DB1|\\u0DB3|\\u0DB4|\\u0DB5|\\u0DB6|\\u0DB7|\\u0DB8|\\u0DB9|\\u0DBA|\\u0DBB|\\u0DBD|\\u0DC0|\\u0DC1|\\u0DC2|\\u0DC3|\\u0DC4|\\u0DC5|\\u0DC6|\\u0E01|\\u0E02|\\u0E03|\\u0E04|\\u0E05|\\u0E06|\\u0E07|\\u0E08|\\u0E09|\\u0E0A|\\u0E0B|\\u0E0C|\\u0E0D|\\u0E0E|\\u0E0F|\\u0E10|\\u0E11|\\u0E12|\\u0E13|\\u0E14|\\u0E15|\\u0E16|\\u0E17|\\u0E18|\\u0E19|\\u0E1A|\\u0E1B|\\u0E1C|\\u0E1D|\\u0E1E|\\u0E1F|\\u0E20|\\u0E21|\\u0E22|\\u0E23|\\u0E24|\\u0E25|\\u0E26|\\u0E27|\\u0E28|\\u0E29|\\u0E2A|\\u0E2B|\\u0E2C|\\u0E2D|\\u0E2E|\\u0E2F|\\u0E30|\\u0E32|\\u0E33|\\u0E40|\\u0E41|\\u0E42|\\u0E43|\\u0E44|\\u0E45|\\u0E81|\\u0E82|\\u0E84|\\u0E87|\\u0E88|\\u0E8A|\\u0E8D|\\u0E94|\\u0E95|\\u0E96|\\u0E97|\\u0E99|\\u0E9A|\\u0E9B|\\u0E9C|\\u0E9D|\\u0E9E|\\u0E9F|\\u0EA1|\\u0EA2|\\u0EA3|\\u0EA5|\\u0EA7|\\u0EAA|\\u0EAB|\\u0EAD|\\u0EAE|\\u0EAF|\\u0EB0|\\u0EB2|\\u0EB3|\\u0EBD|\\u0EC0|\\u0EC1|\\u0EC2|\\u0EC3|\\u0EC4|\\u0EDC|\\u0EDD|\\u0F00|\\u0F40|\\u0F41|\\u0F42|\\u0F43|\\u0F44|\\u0F45|\\u0F46|\\u0F47|\\u0F49|\\u0F4A|\\u0F4B|\\u0F4C|\\u0F4D|\\u0F4E|\\u0F4F|\\u0F50|\\u0F51|\\u0F52|\\u0F53|\\u0F54|\\u0F55|\\u0F56|\\u0F57|\\u0F58|\\u0F59|\\u0F5A|\\u0F5B|\\u0F5C|\\u0F5D|\\u0F5E|\\u0F5F|\\u0F60|\\u0F61|\\u0F62|\\u0F63|\\u0F64|\\u0F65|\\u0F66|\\u0F67|\\u0F68|\\u0F69|\\u0F6A|\\u0F6B|\\u0F6C|\\u0F88|\\u0F89|\\u0F8A|\\u0F8B|\\u1000|\\u1001|\\u1002|\\u1003|\\u1004|\\u1005|\\u1006|\\u1007|\\u1008|\\u1009|\\u100A|\\u100B|\\u100C|\\u100D|\\u100E|\\u100F|\\u1010|\\u1011|\\u1012|\\u1013|\\u1014|\\u1015|\\u1016|\\u1017|\\u1018|\\u1019|\\u101A|\\u101B|\\u101C|\\u101D|\\u101E|\\u101F|\\u1020|\\u1021|\\u1022|\\u1023|\\u1024|\\u1025|\\u1026|\\u1027|\\u1028|\\u1029|\\u102A|\\u103F|\\u1050|\\u1051|\\u1052|\\u1053|\\u1054|\\u1055|\\u105A|\\u105B|\\u105C|\\u105D|\\u1061|\\u1065|\\u1066|\\u106E|\\u106F|\\u1070|\\u1075|\\u1076|\\u1077|\\u1078|\\u1079|\\u107A|\\u107B|\\u107C|\\u107D|\\u107E|\\u107F|\\u1080|\\u1081|\\u108E|\\u10D0|\\u10D1|\\u10D2|\\u10D3|\\u10D4|\\u10D5|\\u10D6|\\u10D7|\\u10D8|\\u10D9|\\u10DA|\\u10DB|\\u10DC|\\u10DD|\\u10DE|\\u10DF|\\u10E0|\\u10E1|\\u10E2|\\u10E3|\\u10E4|\\u10E5|\\u10E6|\\u10E7|\\u10E8|\\u10E9|\\u10EA|\\u10EB|\\u10EC|\\u10ED|\\u10EE|\\u10EF|\\u10F0|\\u10F1|\\u10F2|\\u10F3|\\u10F4|\\u10F5|\\u10F6|\\u10F7|\\u10F8|\\u10F9|\\u10FA|\\u1100|\\u1101|\\u1102|\\u1103|\\u1104|\\u1105|\\u1106|\\u1107|\\u1108|\\u1109|\\u110A|\\u110B|\\u110C|\\u110D|\\u110E|\\u110F|\\u1110|\\u1111|\\u1112|\\u1113|\\u1114|\\u1115|\\u1116|\\u1117|\\u1118|\\u1119|\\u111A|\\u111B|\\u111C|\\u111D|\\u111E|\\u111F|\\u1120|\\u1121|\\u1122|\\u1123|\\u1124|\\u1125|\\u1126|\\u1127|\\u1128|\\u1129|\\u112A|\\u112B|\\u112C|\\u112D|\\u112E|\\u112F|\\u1130|\\u1131|\\u1132|\\u1133|\\u1134|\\u1135|\\u1136|\\u1137|\\u1138|\\u1139|\\u113A|\\u113B|\\u113C|\\u113D|\\u113E|\\u113F|\\u1140|\\u1141|\\u1142|\\u1143|\\u1144|\\u1145|\\u1146|\\u1147|\\u1148|\\u1149|\\u114A|\\u114B|\\u114C|\\u114D|\\u114E|\\u114F|\\u1150|\\u1151|\\u1152|\\u1153|\\u1154|\\u1155|\\u1156|\\u1157|\\u1158|\\u1159|\\u115F|\\u1160|\\u1161|\\u1162|\\u1163|\\u1164|\\u1165|\\u1166|\\u1167|\\u1168|\\u1169|\\u116A|\\u116B|\\u116C|\\u116D|\\u116E|\\u116F|\\u1170|\\u1171|\\u1172|\\u1173|\\u1174|\\u1175|\\u1176|\\u1177|\\u1178|\\u1179|\\u117A|\\u117B|\\u117C|\\u117D|\\u117E|\\u117F|\\u1180|\\u1181|\\u1182|\\u1183|\\u1184|\\u1185|\\u1186|\\u1187|\\u1188|\\u1189|\\u118A|\\u118B|\\u118C|\\u118D|\\u118E|\\u118F|\\u1190|\\u1191|\\u1192|\\u1193|\\u1194|\\u1195|\\u1196|\\u1197|\\u1198|\\u1199|\\u119A|\\u119B|\\u119C|\\u119D|\\u119E|\\u119F|\\u11A0|\\u11A1|\\u11A2|\\u11A8|\\u11A9|\\u11AA|\\u11AB|\\u11AC|\\u11AD|\\u11AE|\\u11AF|\\u11B0|\\u11B1|\\u11B2|\\u11B3|\\u11B4|\\u11B5|\\u11B6|\\u11B7|\\u11B8|\\u11B9|\\u11BA|\\u11BB|\\u11BC|\\u11BD|\\u11BE|\\u11BF|\\u11C0|\\u11C1|\\u11C2|\\u11C3|\\u11C4|\\u11C5|\\u11C6|\\u11C7|\\u11C8|\\u11C9|\\u11CA|\\u11CB|\\u11CC|\\u11CD|\\u11CE|\\u11CF|\\u11D0|\\u11D1|\\u11D2|\\u11D3|\\u11D4|\\u11D5|\\u11D6|\\u11D7|\\u11D8|\\u11D9|\\u11DA|\\u11DB|\\u11DC|\\u11DD|\\u11DE|\\u11DF|\\u11E0|\\u11E1|\\u11E2|\\u11E3|\\u11E4|\\u11E5|\\u11E6|\\u11E7|\\u11E8|\\u11E9|\\u11EA|\\u11EB|\\u11EC|\\u11ED|\\u11EE|\\u11EF|\\u11F0|\\u11F1|\\u11F2|\\u11F3|\\u11F4|\\u11F5|\\u11F6|\\u11F7|\\u11F8|\\u11F9|\\u1200|\\u1201|\\u1202|\\u1203|\\u1204|\\u1205|\\u1206|\\u1207|\\u1208|\\u1209|\\u120A|\\u120B|\\u120C|\\u120D|\\u120E|\\u120F|\\u1210|\\u1211|\\u1212|\\u1213|\\u1214|\\u1215|\\u1216|\\u1217|\\u1218|\\u1219|\\u121A|\\u121B|\\u121C|\\u121D|\\u121E|\\u121F|\\u1220|\\u1221|\\u1222|\\u1223|\\u1224|\\u1225|\\u1226|\\u1227|\\u1228|\\u1229|\\u122A|\\u122B|\\u122C|\\u122D|\\u122E|\\u122F|\\u1230|\\u1231|\\u1232|\\u1233|\\u1234|\\u1235|\\u1236|\\u1237|\\u1238|\\u1239|\\u123A|\\u123B|\\u123C|\\u123D|\\u123E|\\u123F|\\u1240|\\u1241|\\u1242|\\u1243|\\u1244|\\u1245|\\u1246|\\u1247|\\u1248|\\u124A|\\u124B|\\u124C|\\u124D|\\u1250|\\u1251|\\u1252|\\u1253|\\u1254|\\u1255|\\u1256|\\u1258|\\u125A|\\u125B|\\u125C|\\u125D|\\u1260|\\u1261|\\u1262|\\u1263|\\u1264|\\u1265|\\u1266|\\u1267|\\u1268|\\u1269|\\u126A|\\u126B|\\u126C|\\u126D|\\u126E|\\u126F|\\u1270|\\u1271|\\u1272|\\u1273|\\u1274|\\u1275|\\u1276|\\u1277|\\u1278|\\u1279|\\u127A|\\u127B|\\u127C|\\u127D|\\u127E|\\u127F|\\u1280|\\u1281|\\u1282|\\u1283|\\u1284|\\u1285|\\u1286|\\u1287|\\u1288|\\u128A|\\u128B|\\u128C|\\u128D|\\u1290|\\u1291|\\u1292|\\u1293|\\u1294|\\u1295|\\u1296|\\u1297|\\u1298|\\u1299|\\u129A|\\u129B|\\u129C|\\u129D|\\u129E|\\u129F|\\u12A0|\\u12A1|\\u12A2|\\u12A3|\\u12A4|\\u12A5|\\u12A6|\\u12A7|\\u12A8|\\u12A9|\\u12AA|\\u12AB|\\u12AC|\\u12AD|\\u12AE|\\u12AF|\\u12B0|\\u12B2|\\u12B3|\\u12B4|\\u12B5|\\u12B8|\\u12B9|\\u12BA|\\u12BB|\\u12BC|\\u12BD|\\u12BE|\\u12C0|\\u12C2|\\u12C3|\\u12C4|\\u12C5|\\u12C8|\\u12C9|\\u12CA|\\u12CB|\\u12CC|\\u12CD|\\u12CE|\\u12CF|\\u12D0|\\u12D1|\\u12D2|\\u12D3|\\u12D4|\\u12D5|\\u12D6|\\u12D8|\\u12D9|\\u12DA|\\u12DB|\\u12DC|\\u12DD|\\u12DE|\\u12DF|\\u12E0|\\u12E1|\\u12E2|\\u12E3|\\u12E4|\\u12E5|\\u12E6|\\u12E7|\\u12E8|\\u12E9|\\u12EA|\\u12EB|\\u12EC|\\u12ED|\\u12EE|\\u12EF|\\u12F0|\\u12F1|\\u12F2|\\u12F3|\\u12F4|\\u12F5|\\u12F6|\\u12F7|\\u12F8|\\u12F9|\\u12FA|\\u12FB|\\u12FC|\\u12FD|\\u12FE|\\u12FF|\\u1300|\\u1301|\\u1302|\\u1303|\\u1304|\\u1305|\\u1306|\\u1307|\\u1308|\\u1309|\\u130A|\\u130B|\\u130C|\\u130D|\\u130E|\\u130F|\\u1310|\\u1312|\\u1313|\\u1314|\\u1315|\\u1318|\\u1319|\\u131A|\\u131B|\\u131C|\\u131D|\\u131E|\\u131F|\\u1320|\\u1321|\\u1322|\\u1323|\\u1324|\\u1325|\\u1326|\\u1327|\\u1328|\\u1329|\\u132A|\\u132B|\\u132C|\\u132D|\\u132E|\\u132F|\\u1330|\\u1331|\\u1332|\\u1333|\\u1334|\\u1335|\\u1336|\\u1337|\\u1338|\\u1339|\\u133A|\\u133B|\\u133C|\\u133D|\\u133E|\\u133F|\\u1340|\\u1341|\\u1342|\\u1343|\\u1344|\\u1345|\\u1346|\\u1347|\\u1348|\\u1349|\\u134A|\\u134B|\\u134C|\\u134D|\\u134E|\\u134F|\\u1350|\\u1351|\\u1352|\\u1353|\\u1354|\\u1355|\\u1356|\\u1357|\\u1358|\\u1359|\\u135A|\\u1380|\\u1381|\\u1382|\\u1383|\\u1384|\\u1385|\\u1386|\\u1387|\\u1388|\\u1389|\\u138A|\\u138B|\\u138C|\\u138D|\\u138E|\\u138F|\\u13A0|\\u13A1|\\u13A2|\\u13A3|\\u13A4|\\u13A5|\\u13A6|\\u13A7|\\u13A8|\\u13A9|\\u13AA|\\u13AB|\\u13AC|\\u13AD|\\u13AE|\\u13AF|\\u13B0|\\u13B1|\\u13B2|\\u13B3|\\u13B4|\\u13B5|\\u13B6|\\u13B7|\\u13B8|\\u13B9|\\u13BA|\\u13BB|\\u13BC|\\u13BD|\\u13BE|\\u13BF|\\u13C0|\\u13C1|\\u13C2|\\u13C3|\\u13C4|\\u13C5|\\u13C6|\\u13C7|\\u13C8|\\u13C9|\\u13CA|\\u13CB|\\u13CC|\\u13CD|\\u13CE|\\u13CF|\\u13D0|\\u13D1|\\u13D2|\\u13D3|\\u13D4|\\u13D5|\\u13D6|\\u13D7|\\u13D8|\\u13D9|\\u13DA|\\u13DB|\\u13DC|\\u13DD|\\u13DE|\\u13DF|\\u13E0|\\u13E1|\\u13E2|\\u13E3|\\u13E4|\\u13E5|\\u13E6|\\u13E7|\\u13E8|\\u13E9|\\u13EA|\\u13EB|\\u13EC|\\u13ED|\\u13EE|\\u13EF|\\u13F0|\\u13F1|\\u13F2|\\u13F3|\\u13F4|\\u1401|\\u1402|\\u1403|\\u1404|\\u1405|\\u1406|\\u1407|\\u1408|\\u1409|\\u140A|\\u140B|\\u140C|\\u140D|\\u140E|\\u140F|\\u1410|\\u1411|\\u1412|\\u1413|\\u1414|\\u1415|\\u1416|\\u1417|\\u1418|\\u1419|\\u141A|\\u141B|\\u141C|\\u141D|\\u141E|\\u141F|\\u1420|\\u1421|\\u1422|\\u1423|\\u1424|\\u1425|\\u1426|\\u1427|\\u1428|\\u1429|\\u142A|\\u142B|\\u142C|\\u142D|\\u142E|\\u142F|\\u1430|\\u1431|\\u1432|\\u1433|\\u1434|\\u1435|\\u1436|\\u1437|\\u1438|\\u1439|\\u143A|\\u143B|\\u143C|\\u143D|\\u143E|\\u143F|\\u1440|\\u1441|\\u1442|\\u1443|\\u1444|\\u1445|\\u1446|\\u1447|\\u1448|\\u1449|\\u144A|\\u144B|\\u144C|\\u144D|\\u144E|\\u144F|\\u1450|\\u1451|\\u1452|\\u1453|\\u1454|\\u1455|\\u1456|\\u1457|\\u1458|\\u1459|\\u145A|\\u145B|\\u145C|\\u145D|\\u145E|\\u145F|\\u1460|\\u1461|\\u1462|\\u1463|\\u1464|\\u1465|\\u1466|\\u1467|\\u1468|\\u1469|\\u146A|\\u146B|\\u146C|\\u146D|\\u146E|\\u146F|\\u1470|\\u1471|\\u1472|\\u1473|\\u1474|\\u1475|\\u1476|\\u1477|\\u1478|\\u1479|\\u147A|\\u147B|\\u147C|\\u147D|\\u147E|\\u147F|\\u1480|\\u1481|\\u1482|\\u1483|\\u1484|\\u1485|\\u1486|\\u1487|\\u1488|\\u1489|\\u148A|\\u148B|\\u148C|\\u148D|\\u148E|\\u148F|\\u1490|\\u1491|\\u1492|\\u1493|\\u1494|\\u1495|\\u1496|\\u1497|\\u1498|\\u1499|\\u149A|\\u149B|\\u149C|\\u149D|\\u149E|\\u149F|\\u14A0|\\u14A1|\\u14A2|\\u14A3|\\u14A4|\\u14A5|\\u14A6|\\u14A7|\\u14A8|\\u14A9|\\u14AA|\\u14AB|\\u14AC|\\u14AD|\\u14AE|\\u14AF|\\u14B0|\\u14B1|\\u14B2|\\u14B3|\\u14B4|\\u14B5|\\u14B6|\\u14B7|\\u14B8|\\u14B9|\\u14BA|\\u14BB|\\u14BC|\\u14BD|\\u14BE|\\u14BF|\\u14C0|\\u14C1|\\u14C2|\\u14C3|\\u14C4|\\u14C5|\\u14C6|\\u14C7|\\u14C8|\\u14C9|\\u14CA|\\u14CB|\\u14CC|\\u14CD|\\u14CE|\\u14CF|\\u14D0|\\u14D1|\\u14D2|\\u14D3|\\u14D4|\\u14D5|\\u14D6|\\u14D7|\\u14D8|\\u14D9|\\u14DA|\\u14DB|\\u14DC|\\u14DD|\\u14DE|\\u14DF|\\u14E0|\\u14E1|\\u14E2|\\u14E3|\\u14E4|\\u14E5|\\u14E6|\\u14E7|\\u14E8|\\u14E9|\\u14EA|\\u14EB|\\u14EC|\\u14ED|\\u14EE|\\u14EF|\\u14F0|\\u14F1|\\u14F2|\\u14F3|\\u14F4|\\u14F5|\\u14F6|\\u14F7|\\u14F8|\\u14F9|\\u14FA|\\u14FB|\\u14FC|\\u14FD|\\u14FE|\\u14FF|\\u1500|\\u1501|\\u1502|\\u1503|\\u1504|\\u1505|\\u1506|\\u1507|\\u1508|\\u1509|\\u150A|\\u150B|\\u150C|\\u150D|\\u150E|\\u150F|\\u1510|\\u1511|\\u1512|\\u1513|\\u1514|\\u1515|\\u1516|\\u1517|\\u1518|\\u1519|\\u151A|\\u151B|\\u151C|\\u151D|\\u151E|\\u151F|\\u1520|\\u1521|\\u1522|\\u1523|\\u1524|\\u1525|\\u1526|\\u1527|\\u1528|\\u1529|\\u152A|\\u152B|\\u152C|\\u152D|\\u152E|\\u152F|\\u1530|\\u1531|\\u1532|\\u1533|\\u1534|\\u1535|\\u1536|\\u1537|\\u1538|\\u1539|\\u153A|\\u153B|\\u153C|\\u153D|\\u153E|\\u153F|\\u1540|\\u1541|\\u1542|\\u1543|\\u1544|\\u1545|\\u1546|\\u1547|\\u1548|\\u1549|\\u154A|\\u154B|\\u154C|\\u154D|\\u154E|\\u154F|\\u1550|\\u1551|\\u1552|\\u1553|\\u1554|\\u1555|\\u1556|\\u1557|\\u1558|\\u1559|\\u155A|\\u155B|\\u155C|\\u155D|\\u155E|\\u155F|\\u1560|\\u1561|\\u1562|\\u1563|\\u1564|\\u1565|\\u1566|\\u1567|\\u1568|\\u1569|\\u156A|\\u156B|\\u156C|\\u156D|\\u156E|\\u156F|\\u1570|\\u1571|\\u1572|\\u1573|\\u1574|\\u1575|\\u1576|\\u1577|\\u1578|\\u1579|\\u157A|\\u157B|\\u157C|\\u157D|\\u157E|\\u157F|\\u1580|\\u1581|\\u1582|\\u1583|\\u1584|\\u1585|\\u1586|\\u1587|\\u1588|\\u1589|\\u158A|\\u158B|\\u158C|\\u158D|\\u158E|\\u158F|\\u1590|\\u1591|\\u1592|\\u1593|\\u1594|\\u1595|\\u1596|\\u1597|\\u1598|\\u1599|\\u159A|\\u159B|\\u159C|\\u159D|\\u159E|\\u159F|\\u15A0|\\u15A1|\\u15A2|\\u15A3|\\u15A4|\\u15A5|\\u15A6|\\u15A7|\\u15A8|\\u15A9|\\u15AA|\\u15AB|\\u15AC|\\u15AD|\\u15AE|\\u15AF|\\u15B0|\\u15B1|\\u15B2|\\u15B3|\\u15B4|\\u15B5|\\u15B6|\\u15B7|\\u15B8|\\u15B9|\\u15BA|\\u15BB|\\u15BC|\\u15BD|\\u15BE|\\u15BF|\\u15C0|\\u15C1|\\u15C2|\\u15C3|\\u15C4|\\u15C5|\\u15C6|\\u15C7|\\u15C8|\\u15C9|\\u15CA|\\u15CB|\\u15CC|\\u15CD|\\u15CE|\\u15CF|\\u15D0|\\u15D1|\\u15D2|\\u15D3|\\u15D4|\\u15D5|\\u15D6|\\u15D7|\\u15D8|\\u15D9|\\u15DA|\\u15DB|\\u15DC|\\u15DD|\\u15DE|\\u15DF|\\u15E0|\\u15E1|\\u15E2|\\u15E3|\\u15E4|\\u15E5|\\u15E6|\\u15E7|\\u15E8|\\u15E9|\\u15EA|\\u15EB|\\u15EC|\\u15ED|\\u15EE|\\u15EF|\\u15F0|\\u15F1|\\u15F2|\\u15F3|\\u15F4|\\u15F5|\\u15F6|\\u15F7|\\u15F8|\\u15F9|\\u15FA|\\u15FB|\\u15FC|\\u15FD|\\u15FE|\\u15FF|\\u1600|\\u1601|\\u1602|\\u1603|\\u1604|\\u1605|\\u1606|\\u1607|\\u1608|\\u1609|\\u160A|\\u160B|\\u160C|\\u160D|\\u160E|\\u160F|\\u1610|\\u1611|\\u1612|\\u1613|\\u1614|\\u1615|\\u1616|\\u1617|\\u1618|\\u1619|\\u161A|\\u161B|\\u161C|\\u161D|\\u161E|\\u161F|\\u1620|\\u1621|\\u1622|\\u1623|\\u1624|\\u1625|\\u1626|\\u1627|\\u1628|\\u1629|\\u162A|\\u162B|\\u162C|\\u162D|\\u162E|\\u162F|\\u1630|\\u1631|\\u1632|\\u1633|\\u1634|\\u1635|\\u1636|\\u1637|\\u1638|\\u1639|\\u163A|\\u163B|\\u163C|\\u163D|\\u163E|\\u163F|\\u1640|\\u1641|\\u1642|\\u1643|\\u1644|\\u1645|\\u1646|\\u1647|\\u1648|\\u1649|\\u164A|\\u164B|\\u164C|\\u164D|\\u164E|\\u164F|\\u1650|\\u1651|\\u1652|\\u1653|\\u1654|\\u1655|\\u1656|\\u1657|\\u1658|\\u1659|\\u165A|\\u165B|\\u165C|\\u165D|\\u165E|\\u165F|\\u1660|\\u1661|\\u1662|\\u1663|\\u1664|\\u1665|\\u1666|\\u1667|\\u1668|\\u1669|\\u166A|\\u166B|\\u166C|\\u166F|\\u1670|\\u1671|\\u1672|\\u1673|\\u1674|\\u1675|\\u1676|\\u1681|\\u1682|\\u1683|\\u1684|\\u1685|\\u1686|\\u1687|\\u1688|\\u1689|\\u168A|\\u168B|\\u168C|\\u168D|\\u168E|\\u168F|\\u1690|\\u1691|\\u1692|\\u1693|\\u1694|\\u1695|\\u1696|\\u1697|\\u1698|\\u1699|\\u169A|\\u16A0|\\u16A1|\\u16A2|\\u16A3|\\u16A4|\\u16A5|\\u16A6|\\u16A7|\\u16A8|\\u16A9|\\u16AA|\\u16AB|\\u16AC|\\u16AD|\\u16AE|\\u16AF|\\u16B0|\\u16B1|\\u16B2|\\u16B3|\\u16B4|\\u16B5|\\u16B6|\\u16B7|\\u16B8|\\u16B9|\\u16BA|\\u16BB|\\u16BC|\\u16BD|\\u16BE|\\u16BF|\\u16C0|\\u16C1|\\u16C2|\\u16C3|\\u16C4|\\u16C5|\\u16C6|\\u16C7|\\u16C8|\\u16C9|\\u16CA|\\u16CB|\\u16CC|\\u16CD|\\u16CE|\\u16CF|\\u16D0|\\u16D1|\\u16D2|\\u16D3|\\u16D4|\\u16D5|\\u16D6|\\u16D7|\\u16D8|\\u16D9|\\u16DA|\\u16DB|\\u16DC|\\u16DD|\\u16DE|\\u16DF|\\u16E0|\\u16E1|\\u16E2|\\u16E3|\\u16E4|\\u16E5|\\u16E6|\\u16E7|\\u16E8|\\u16E9|\\u16EA|\\u1700|\\u1701|\\u1702|\\u1703|\\u1704|\\u1705|\\u1706|\\u1707|\\u1708|\\u1709|\\u170A|\\u170B|\\u170C|\\u170E|\\u170F|\\u1710|\\u1711|\\u1720|\\u1721|\\u1722|\\u1723|\\u1724|\\u1725|\\u1726|\\u1727|\\u1728|\\u1729|\\u172A|\\u172B|\\u172C|\\u172D|\\u172E|\\u172F|\\u1730|\\u1731|\\u1740|\\u1741|\\u1742|\\u1743|\\u1744|\\u1745|\\u1746|\\u1747|\\u1748|\\u1749|\\u174A|\\u174B|\\u174C|\\u174D|\\u174E|\\u174F|\\u1750|\\u1751|\\u1760|\\u1761|\\u1762|\\u1763|\\u1764|\\u1765|\\u1766|\\u1767|\\u1768|\\u1769|\\u176A|\\u176B|\\u176C|\\u176E|\\u176F|\\u1770|\\u1780|\\u1781|\\u1782|\\u1783|\\u1784|\\u1785|\\u1786|\\u1787|\\u1788|\\u1789|\\u178A|\\u178B|\\u178C|\\u178D|\\u178E|\\u178F|\\u1790|\\u1791|\\u1792|\\u1793|\\u1794|\\u1795|\\u1796|\\u1797|\\u1798|\\u1799|\\u179A|\\u179B|\\u179C|\\u179D|\\u179E|\\u179F|\\u17A0|\\u17A1|\\u17A2|\\u17A3|\\u17A4|\\u17A5|\\u17A6|\\u17A7|\\u17A8|\\u17A9|\\u17AA|\\u17AB|\\u17AC|\\u17AD|\\u17AE|\\u17AF|\\u17B0|\\u17B1|\\u17B2|\\u17B3|\\u17DC|\\u1820|\\u1821|\\u1822|\\u1823|\\u1824|\\u1825|\\u1826|\\u1827|\\u1828|\\u1829|\\u182A|\\u182B|\\u182C|\\u182D|\\u182E|\\u182F|\\u1830|\\u1831|\\u1832|\\u1833|\\u1834|\\u1835|\\u1836|\\u1837|\\u1838|\\u1839|\\u183A|\\u183B|\\u183C|\\u183D|\\u183E|\\u183F|\\u1840|\\u1841|\\u1842|\\u1844|\\u1845|\\u1846|\\u1847|\\u1848|\\u1849|\\u184A|\\u184B|\\u184C|\\u184D|\\u184E|\\u184F|\\u1850|\\u1851|\\u1852|\\u1853|\\u1854|\\u1855|\\u1856|\\u1857|\\u1858|\\u1859|\\u185A|\\u185B|\\u185C|\\u185D|\\u185E|\\u185F|\\u1860|\\u1861|\\u1862|\\u1863|\\u1864|\\u1865|\\u1866|\\u1867|\\u1868|\\u1869|\\u186A|\\u186B|\\u186C|\\u186D|\\u186E|\\u186F|\\u1870|\\u1871|\\u1872|\\u1873|\\u1874|\\u1875|\\u1876|\\u1877|\\u1880|\\u1881|\\u1882|\\u1883|\\u1884|\\u1885|\\u1886|\\u1887|\\u1888|\\u1889|\\u188A|\\u188B|\\u188C|\\u188D|\\u188E|\\u188F|\\u1890|\\u1891|\\u1892|\\u1893|\\u1894|\\u1895|\\u1896|\\u1897|\\u1898|\\u1899|\\u189A|\\u189B|\\u189C|\\u189D|\\u189E|\\u189F|\\u18A0|\\u18A1|\\u18A2|\\u18A3|\\u18A4|\\u18A5|\\u18A6|\\u18A7|\\u18A8|\\u18AA|\\u1900|\\u1901|\\u1902|\\u1903|\\u1904|\\u1905|\\u1906|\\u1907|\\u1908|\\u1909|\\u190A|\\u190B|\\u190C|\\u190D|\\u190E|\\u190F|\\u1910|\\u1911|\\u1912|\\u1913|\\u1914|\\u1915|\\u1916|\\u1917|\\u1918|\\u1919|\\u191A|\\u191B|\\u191C|\\u1950|\\u1951|\\u1952|\\u1953|\\u1954|\\u1955|\\u1956|\\u1957|\\u1958|\\u1959|\\u195A|\\u195B|\\u195C|\\u195D|\\u195E|\\u195F|\\u1960|\\u1961|\\u1962|\\u1963|\\u1964|\\u1965|\\u1966|\\u1967|\\u1968|\\u1969|\\u196A|\\u196B|\\u196C|\\u196D|\\u1970|\\u1971|\\u1972|\\u1973|\\u1974|\\u1980|\\u1981|\\u1982|\\u1983|\\u1984|\\u1985|\\u1986|\\u1987|\\u1988|\\u1989|\\u198A|\\u198B|\\u198C|\\u198D|\\u198E|\\u198F|\\u1990|\\u1991|\\u1992|\\u1993|\\u1994|\\u1995|\\u1996|\\u1997|\\u1998|\\u1999|\\u199A|\\u199B|\\u199C|\\u199D|\\u199E|\\u199F|\\u19A0|\\u19A1|\\u19A2|\\u19A3|\\u19A4|\\u19A5|\\u19A6|\\u19A7|\\u19A8|\\u19A9|\\u19C1|\\u19C2|\\u19C3|\\u19C4|\\u19C5|\\u19C6|\\u19C7|\\u1A00|\\u1A01|\\u1A02|\\u1A03|\\u1A04|\\u1A05|\\u1A06|\\u1A07|\\u1A08|\\u1A09|\\u1A0A|\\u1A0B|\\u1A0C|\\u1A0D|\\u1A0E|\\u1A0F|\\u1A10|\\u1A11|\\u1A12|\\u1A13|\\u1A14|\\u1A15|\\u1A16|\\u1B05|\\u1B06|\\u1B07|\\u1B08|\\u1B09|\\u1B0A|\\u1B0B|\\u1B0C|\\u1B0D|\\u1B0E|\\u1B0F|\\u1B10|\\u1B11|\\u1B12|\\u1B13|\\u1B14|\\u1B15|\\u1B16|\\u1B17|\\u1B18|\\u1B19|\\u1B1A|\\u1B1B|\\u1B1C|\\u1B1D|\\u1B1E|\\u1B1F|\\u1B20|\\u1B21|\\u1B22|\\u1B23|\\u1B24|\\u1B25|\\u1B26|\\u1B27|\\u1B28|\\u1B29|\\u1B2A|\\u1B2B|\\u1B2C|\\u1B2D|\\u1B2E|\\u1B2F|\\u1B30|\\u1B31|\\u1B32|\\u1B33|\\u1B45|\\u1B46|\\u1B47|\\u1B48|\\u1B49|\\u1B4A|\\u1B4B|\\u1B83|\\u1B84|\\u1B85|\\u1B86|\\u1B87|\\u1B88|\\u1B89|\\u1B8A|\\u1B8B|\\u1B8C|\\u1B8D|\\u1B8E|\\u1B8F|\\u1B90|\\u1B91|\\u1B92|\\u1B93|\\u1B94|\\u1B95|\\u1B96|\\u1B97|\\u1B98|\\u1B99|\\u1B9A|\\u1B9B|\\u1B9C|\\u1B9D|\\u1B9E|\\u1B9F|\\u1BA0|\\u1BAE|\\u1BAF|\\u1C00|\\u1C01|\\u1C02|\\u1C03|\\u1C04|\\u1C05|\\u1C06|\\u1C07|\\u1C08|\\u1C09|\\u1C0A|\\u1C0B|\\u1C0C|\\u1C0D|\\u1C0E|\\u1C0F|\\u1C10|\\u1C11|\\u1C12|\\u1C13|\\u1C14|\\u1C15|\\u1C16|\\u1C17|\\u1C18|\\u1C19|\\u1C1A|\\u1C1B|\\u1C1C|\\u1C1D|\\u1C1E|\\u1C1F|\\u1C20|\\u1C21|\\u1C22|\\u1C23|\\u1C4D|\\u1C4E|\\u1C4F|\\u1C5A|\\u1C5B|\\u1C5C|\\u1C5D|\\u1C5E|\\u1C5F|\\u1C60|\\u1C61|\\u1C62|\\u1C63|\\u1C64|\\u1C65|\\u1C66|\\u1C67|\\u1C68|\\u1C69|\\u1C6A|\\u1C6B|\\u1C6C|\\u1C6D|\\u1C6E|\\u1C6F|\\u1C70|\\u1C71|\\u1C72|\\u1C73|\\u1C74|\\u1C75|\\u1C76|\\u1C77|\\u2135|\\u2136|\\u2137|\\u2138|\\u2D30|\\u2D31|\\u2D32|\\u2D33|\\u2D34|\\u2D35|\\u2D36|\\u2D37|\\u2D38|\\u2D39|\\u2D3A|\\u2D3B|\\u2D3C|\\u2D3D|\\u2D3E|\\u2D3F|\\u2D40|\\u2D41|\\u2D42|\\u2D43|\\u2D44|\\u2D45|\\u2D46|\\u2D47|\\u2D48|\\u2D49|\\u2D4A|\\u2D4B|\\u2D4C|\\u2D4D|\\u2D4E|\\u2D4F|\\u2D50|\\u2D51|\\u2D52|\\u2D53|\\u2D54|\\u2D55|\\u2D56|\\u2D57|\\u2D58|\\u2D59|\\u2D5A|\\u2D5B|\\u2D5C|\\u2D5D|\\u2D5E|\\u2D5F|\\u2D60|\\u2D61|\\u2D62|\\u2D63|\\u2D64|\\u2D65|\\u2D80|\\u2D81|\\u2D82|\\u2D83|\\u2D84|\\u2D85|\\u2D86|\\u2D87|\\u2D88|\\u2D89|\\u2D8A|\\u2D8B|\\u2D8C|\\u2D8D|\\u2D8E|\\u2D8F|\\u2D90|\\u2D91|\\u2D92|\\u2D93|\\u2D94|\\u2D95|\\u2D96|\\u2DA0|\\u2DA1|\\u2DA2|\\u2DA3|\\u2DA4|\\u2DA5|\\u2DA6|\\u2DA8|\\u2DA9|\\u2DAA|\\u2DAB|\\u2DAC|\\u2DAD|\\u2DAE|\\u2DB0|\\u2DB1|\\u2DB2|\\u2DB3|\\u2DB4|\\u2DB5|\\u2DB6|\\u2DB8|\\u2DB9|\\u2DBA|\\u2DBB|\\u2DBC|\\u2DBD|\\u2DBE|\\u2DC0|\\u2DC1|\\u2DC2|\\u2DC3|\\u2DC4|\\u2DC5|\\u2DC6|\\u2DC8|\\u2DC9|\\u2DCA|\\u2DCB|\\u2DCC|\\u2DCD|\\u2DCE|\\u2DD0|\\u2DD1|\\u2DD2|\\u2DD3|\\u2DD4|\\u2DD5|\\u2DD6|\\u2DD8|\\u2DD9|\\u2DDA|\\u2DDB|\\u2DDC|\\u2DDD|\\u2DDE|\\u3006|\\u303C|\\u3041|\\u3042|\\u3043|\\u3044|\\u3045|\\u3046|\\u3047|\\u3048|\\u3049|\\u304A|\\u304B|\\u304C|\\u304D|\\u304E|\\u304F|\\u3050|\\u3051|\\u3052|\\u3053|\\u3054|\\u3055|\\u3056|\\u3057|\\u3058|\\u3059|\\u305A|\\u305B|\\u305C|\\u305D|\\u305E|\\u305F|\\u3060|\\u3061|\\u3062|\\u3063|\\u3064|\\u3065|\\u3066|\\u3067|\\u3068|\\u3069|\\u306A|\\u306B|\\u306C|\\u306D|\\u306E|\\u306F|\\u3070|\\u3071|\\u3072|\\u3073|\\u3074|\\u3075|\\u3076|\\u3077|\\u3078|\\u3079|\\u307A|\\u307B|\\u307C|\\u307D|\\u307E|\\u307F|\\u3080|\\u3081|\\u3082|\\u3083|\\u3084|\\u3085|\\u3086|\\u3087|\\u3088|\\u3089|\\u308A|\\u308B|\\u308C|\\u308D|\\u308E|\\u308F|\\u3090|\\u3091|\\u3092|\\u3093|\\u3094|\\u3095|\\u3096|\\u309F|\\u30A1|\\u30A2|\\u30A3|\\u30A4|\\u30A5|\\u30A6|\\u30A7|\\u30A8|\\u30A9|\\u30AA|\\u30AB|\\u30AC|\\u30AD|\\u30AE|\\u30AF|\\u30B0|\\u30B1|\\u30B2|\\u30B3|\\u30B4|\\u30B5|\\u30B6|\\u30B7|\\u30B8|\\u30B9|\\u30BA|\\u30BB|\\u30BC|\\u30BD|\\u30BE|\\u30BF|\\u30C0|\\u30C1|\\u30C2|\\u30C3|\\u30C4|\\u30C5|\\u30C6|\\u30C7|\\u30C8|\\u30C9|\\u30CA|\\u30CB|\\u30CC|\\u30CD|\\u30CE|\\u30CF|\\u30D0|\\u30D1|\\u30D2|\\u30D3|\\u30D4|\\u30D5|\\u30D6|\\u30D7|\\u30D8|\\u30D9|\\u30DA|\\u30DB|\\u30DC|\\u30DD|\\u30DE|\\u30DF|\\u30E0|\\u30E1|\\u30E2|\\u30E3|\\u30E4|\\u30E5|\\u30E6|\\u30E7|\\u30E8|\\u30E9|\\u30EA|\\u30EB|\\u30EC|\\u30ED|\\u30EE|\\u30EF|\\u30F0|\\u30F1|\\u30F2|\\u30F3|\\u30F4|\\u30F5|\\u30F6|\\u30F7|\\u30F8|\\u30F9|\\u30FA|\\u30FF|\\u3105|\\u3106|\\u3107|\\u3108|\\u3109|\\u310A|\\u310B|\\u310C|\\u310D|\\u310E|\\u310F|\\u3110|\\u3111|\\u3112|\\u3113|\\u3114|\\u3115|\\u3116|\\u3117|\\u3118|\\u3119|\\u311A|\\u311B|\\u311C|\\u311D|\\u311E|\\u311F|\\u3120|\\u3121|\\u3122|\\u3123|\\u3124|\\u3125|\\u3126|\\u3127|\\u3128|\\u3129|\\u312A|\\u312B|\\u312C|\\u312D|\\u3131|\\u3132|\\u3133|\\u3134|\\u3135|\\u3136|\\u3137|\\u3138|\\u3139|\\u313A|\\u313B|\\u313C|\\u313D|\\u313E|\\u313F|\\u3140|\\u3141|\\u3142|\\u3143|\\u3144|\\u3145|\\u3146|\\u3147|\\u3148|\\u3149|\\u314A|\\u314B|\\u314C|\\u314D|\\u314E|\\u314F|\\u3150|\\u3151|\\u3152|\\u3153|\\u3154|\\u3155|\\u3156|\\u3157|\\u3158|\\u3159|\\u315A|\\u315B|\\u315C|\\u315D|\\u315E|\\u315F|\\u3160|\\u3161|\\u3162|\\u3163|\\u3164|\\u3165|\\u3166|\\u3167|\\u3168|\\u3169|\\u316A|\\u316B|\\u316C|\\u316D|\\u316E|\\u316F|\\u3170|\\u3171|\\u3172|\\u3173|\\u3174|\\u3175|\\u3176|\\u3177|\\u3178|\\u3179|\\u317A|\\u317B|\\u317C|\\u317D|\\u317E|\\u317F|\\u3180|\\u3181|\\u3182|\\u3183|\\u3184|\\u3185|\\u3186|\\u3187|\\u3188|\\u3189|\\u318A|\\u318B|\\u318C|\\u318D|\\u318E|\\u31A0|\\u31A1|\\u31A2|\\u31A3|\\u31A4|\\u31A5|\\u31A6|\\u31A7|\\u31A8|\\u31A9|\\u31AA|\\u31AB|\\u31AC|\\u31AD|\\u31AE|\\u31AF|\\u31B0|\\u31B1|\\u31B2|\\u31B3|\\u31B4|\\u31B5|\\u31B6|\\u31B7|\\u31F0|\\u31F1|\\u31F2|\\u31F3|\\u31F4|\\u31F5|\\u31F6|\\u31F7|\\u31F8|\\u31F9|\\u31FA|\\u31FB|\\u31FC|\\u31FD|\\u31FE|\\u31FF|\\u3400|\\u4DB5|\\u4E00|\\u9FC3|\\uA000|\\uA001|\\uA002|\\uA003|\\uA004|\\uA005|\\uA006|\\uA007|\\uA008|\\uA009|\\uA00A|\\uA00B|\\uA00C|\\uA00D|\\uA00E|\\uA00F|\\uA010|\\uA011|\\uA012|\\uA013|\\uA014|\\uA016|\\uA017|\\uA018|\\uA019|\\uA01A|\\uA01B|\\uA01C|\\uA01D|\\uA01E|\\uA01F|\\uA020|\\uA021|\\uA022|\\uA023|\\uA024|\\uA025|\\uA026|\\uA027|\\uA028|\\uA029|\\uA02A|\\uA02B|\\uA02C|\\uA02D|\\uA02E|\\uA02F|\\uA030|\\uA031|\\uA032|\\uA033|\\uA034|\\uA035|\\uA036|\\uA037|\\uA038|\\uA039|\\uA03A|\\uA03B|\\uA03C|\\uA03D|\\uA03E|\\uA03F|\\uA040|\\uA041|\\uA042|\\uA043|\\uA044|\\uA045|\\uA046|\\uA047|\\uA048|\\uA049|\\uA04A|\\uA04B|\\uA04C|\\uA04D|\\uA04E|\\uA04F|\\uA050|\\uA051|\\uA052|\\uA053|\\uA054|\\uA055|\\uA056|\\uA057|\\uA058|\\uA059|\\uA05A|\\uA05B|\\uA05C|\\uA05D|\\uA05E|\\uA05F|\\uA060|\\uA061|\\uA062|\\uA063|\\uA064|\\uA065|\\uA066|\\uA067|\\uA068|\\uA069|\\uA06A|\\uA06B|\\uA06C|\\uA06D|\\uA06E|\\uA06F|\\uA070|\\uA071|\\uA072|\\uA073|\\uA074|\\uA075|\\uA076|\\uA077|\\uA078|\\uA079|\\uA07A|\\uA07B|\\uA07C|\\uA07D|\\uA07E|\\uA07F|\\uA080|\\uA081|\\uA082|\\uA083|\\uA084|\\uA085|\\uA086|\\uA087|\\uA088|\\uA089|\\uA08A|\\uA08B|\\uA08C|\\uA08D|\\uA08E|\\uA08F|\\uA090|\\uA091|\\uA092|\\uA093|\\uA094|\\uA095|\\uA096|\\uA097|\\uA098|\\uA099|\\uA09A|\\uA09B|\\uA09C|\\uA09D|\\uA09E|\\uA09F|\\uA0A0|\\uA0A1|\\uA0A2|\\uA0A3|\\uA0A4|\\uA0A5|\\uA0A6|\\uA0A7|\\uA0A8|\\uA0A9|\\uA0AA|\\uA0AB|\\uA0AC|\\uA0AD|\\uA0AE|\\uA0AF|\\uA0B0|\\uA0B1|\\uA0B2|\\uA0B3|\\uA0B4|\\uA0B5|\\uA0B6|\\uA0B7|\\uA0B8|\\uA0B9|\\uA0BA|\\uA0BB|\\uA0BC|\\uA0BD|\\uA0BE|\\uA0BF|\\uA0C0|\\uA0C1|\\uA0C2|\\uA0C3|\\uA0C4|\\uA0C5|\\uA0C6|\\uA0C7|\\uA0C8|\\uA0C9|\\uA0CA|\\uA0CB|\\uA0CC|\\uA0CD|\\uA0CE|\\uA0CF|\\uA0D0|\\uA0D1|\\uA0D2|\\uA0D3|\\uA0D4|\\uA0D5|\\uA0D6|\\uA0D7|\\uA0D8|\\uA0D9|\\uA0DA|\\uA0DB|\\uA0DC|\\uA0DD|\\uA0DE|\\uA0DF|\\uA0E0|\\uA0E1|\\uA0E2|\\uA0E3|\\uA0E4|\\uA0E5|\\uA0E6|\\uA0E7|\\uA0E8|\\uA0E9|\\uA0EA|\\uA0EB|\\uA0EC|\\uA0ED|\\uA0EE|\\uA0EF|\\uA0F0|\\uA0F1|\\uA0F2|\\uA0F3|\\uA0F4|\\uA0F5|\\uA0F6|\\uA0F7|\\uA0F8|\\uA0F9|\\uA0FA|\\uA0FB|\\uA0FC|\\uA0FD|\\uA0FE|\\uA0FF|\\uA100|\\uA101|\\uA102|\\uA103|\\uA104|\\uA105|\\uA106|\\uA107|\\uA108|\\uA109|\\uA10A|\\uA10B|\\uA10C|\\uA10D|\\uA10E|\\uA10F|\\uA110|\\uA111|\\uA112|\\uA113|\\uA114|\\uA115|\\uA116|\\uA117|\\uA118|\\uA119|\\uA11A|\\uA11B|\\uA11C|\\uA11D|\\uA11E|\\uA11F|\\uA120|\\uA121|\\uA122|\\uA123|\\uA124|\\uA125|\\uA126|\\uA127|\\uA128|\\uA129|\\uA12A|\\uA12B|\\uA12C|\\uA12D|\\uA12E|\\uA12F|\\uA130|\\uA131|\\uA132|\\uA133|\\uA134|\\uA135|\\uA136|\\uA137|\\uA138|\\uA139|\\uA13A|\\uA13B|\\uA13C|\\uA13D|\\uA13E|\\uA13F|\\uA140|\\uA141|\\uA142|\\uA143|\\uA144|\\uA145|\\uA146|\\uA147|\\uA148|\\uA149|\\uA14A|\\uA14B|\\uA14C|\\uA14D|\\uA14E|\\uA14F|\\uA150|\\uA151|\\uA152|\\uA153|\\uA154|\\uA155|\\uA156|\\uA157|\\uA158|\\uA159|\\uA15A|\\uA15B|\\uA15C|\\uA15D|\\uA15E|\\uA15F|\\uA160|\\uA161|\\uA162|\\uA163|\\uA164|\\uA165|\\uA166|\\uA167|\\uA168|\\uA169|\\uA16A|\\uA16B|\\uA16C|\\uA16D|\\uA16E|\\uA16F|\\uA170|\\uA171|\\uA172|\\uA173|\\uA174|\\uA175|\\uA176|\\uA177|\\uA178|\\uA179|\\uA17A|\\uA17B|\\uA17C|\\uA17D|\\uA17E|\\uA17F|\\uA180|\\uA181|\\uA182|\\uA183|\\uA184|\\uA185|\\uA186|\\uA187|\\uA188|\\uA189|\\uA18A|\\uA18B|\\uA18C|\\uA18D|\\uA18E|\\uA18F|\\uA190|\\uA191|\\uA192|\\uA193|\\uA194|\\uA195|\\uA196|\\uA197|\\uA198|\\uA199|\\uA19A|\\uA19B|\\uA19C|\\uA19D|\\uA19E|\\uA19F|\\uA1A0|\\uA1A1|\\uA1A2|\\uA1A3|\\uA1A4|\\uA1A5|\\uA1A6|\\uA1A7|\\uA1A8|\\uA1A9|\\uA1AA|\\uA1AB|\\uA1AC|\\uA1AD|\\uA1AE|\\uA1AF/;\r\n\r\n// letter number\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FNl%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Nl = /\\u16EE|\\u16EF|\\u16F0|\\u2160|\\u2161|\\u2162|\\u2163|\\u2164|\\u2165|\\u2166|\\u2167|\\u2168|\\u2169|\\u216A|\\u216B|\\u216C|\\u216D|\\u216E|\\u216F|\\u2170|\\u2171|\\u2172|\\u2173|\\u2174|\\u2175|\\u2176|\\u2177|\\u2178|\\u2179|\\u217A|\\u217B|\\u217C|\\u217D|\\u217E|\\u217F|\\u2180|\\u2181|\\u2182|\\u2185|\\u2186|\\u2187|\\u2188|\\u3007|\\u3021|\\u3022|\\u3023|\\u3024|\\u3025|\\u3026|\\u3027|\\u3028|\\u3029|\\u3038|\\u3039|\\u303A/;\r\n\r\n// non-spacing mark\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FMn%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Mn = /\\u0300|\\u0301|\\u0302|\\u0303|\\u0304|\\u0305|\\u0306|\\u0307|\\u0308|\\u0309|\\u030A|\\u030B|\\u030C|\\u030D|\\u030E|\\u030F|\\u0310|\\u0311|\\u0312|\\u0313|\\u0314|\\u0315|\\u0316|\\u0317|\\u0318|\\u0319|\\u031A|\\u031B|\\u031C|\\u031D|\\u031E|\\u031F|\\u0320|\\u0321|\\u0322|\\u0323|\\u0324|\\u0325|\\u0326|\\u0327|\\u0328|\\u0329|\\u032A|\\u032B|\\u032C|\\u032D|\\u032E|\\u032F|\\u0330|\\u0331|\\u0332|\\u0333|\\u0334|\\u0335|\\u0336|\\u0337|\\u0338|\\u0339|\\u033A|\\u033B|\\u033C|\\u033D|\\u033E|\\u033F|\\u0340|\\u0341|\\u0342|\\u0343|\\u0344|\\u0345|\\u0346|\\u0347|\\u0348|\\u0349|\\u034A|\\u034B|\\u034C|\\u034D|\\u034E|\\u034F|\\u0350|\\u0351|\\u0352|\\u0353|\\u0354|\\u0355|\\u0356|\\u0357|\\u0358|\\u0359|\\u035A|\\u035B|\\u035C|\\u035D|\\u035E|\\u035F|\\u0360|\\u0361|\\u0362|\\u0363|\\u0364|\\u0365|\\u0366|\\u0367|\\u0368|\\u0369|\\u036A|\\u036B|\\u036C|\\u036D|\\u036E|\\u036F|\\u0483|\\u0484|\\u0485|\\u0486|\\u0487|\\u0591|\\u0592|\\u0593|\\u0594|\\u0595|\\u0596|\\u0597|\\u0598|\\u0599|\\u059A|\\u059B|\\u059C|\\u059D|\\u059E|\\u059F|\\u05A0|\\u05A1|\\u05A2|\\u05A3|\\u05A4|\\u05A5|\\u05A6|\\u05A7|\\u05A8|\\u05A9|\\u05AA|\\u05AB|\\u05AC|\\u05AD|\\u05AE|\\u05AF|\\u05B0|\\u05B1|\\u05B2|\\u05B3|\\u05B4|\\u05B5|\\u05B6|\\u05B7|\\u05B8|\\u05B9|\\u05BA|\\u05BB|\\u05BC|\\u05BD|\\u05BF|\\u05C1|\\u05C2|\\u05C4|\\u05C5|\\u05C7|\\u0610|\\u0611|\\u0612|\\u0613|\\u0614|\\u0615|\\u0616|\\u0617|\\u0618|\\u0619|\\u061A|\\u064B|\\u064C|\\u064D|\\u064E|\\u064F|\\u0650|\\u0651|\\u0652|\\u0653|\\u0654|\\u0655|\\u0656|\\u0657|\\u0658|\\u0659|\\u065A|\\u065B|\\u065C|\\u065D|\\u065E|\\u0670|\\u06D6|\\u06D7|\\u06D8|\\u06D9|\\u06DA|\\u06DB|\\u06DC|\\u06DF|\\u06E0|\\u06E1|\\u06E2|\\u06E3|\\u06E4|\\u06E7|\\u06E8|\\u06EA|\\u06EB|\\u06EC|\\u06ED|\\u0711|\\u0730|\\u0731|\\u0732|\\u0733|\\u0734|\\u0735|\\u0736|\\u0737|\\u0738|\\u0739|\\u073A|\\u073B|\\u073C|\\u073D|\\u073E|\\u073F|\\u0740|\\u0741|\\u0742|\\u0743|\\u0744|\\u0745|\\u0746|\\u0747|\\u0748|\\u0749|\\u074A|\\u07A6|\\u07A7|\\u07A8|\\u07A9|\\u07AA|\\u07AB|\\u07AC|\\u07AD|\\u07AE|\\u07AF|\\u07B0|\\u07EB|\\u07EC|\\u07ED|\\u07EE|\\u07EF|\\u07F0|\\u07F1|\\u07F2|\\u07F3|\\u0901|\\u0902|\\u093C|\\u0941|\\u0942|\\u0943|\\u0944|\\u0945|\\u0946|\\u0947|\\u0948|\\u094D|\\u0951|\\u0952|\\u0953|\\u0954|\\u0962|\\u0963|\\u0981|\\u09BC|\\u09C1|\\u09C2|\\u09C3|\\u09C4|\\u09CD|\\u09E2|\\u09E3|\\u0A01|\\u0A02|\\u0A3C|\\u0A41|\\u0A42|\\u0A47|\\u0A48|\\u0A4B|\\u0A4C|\\u0A4D|\\u0A51|\\u0A70|\\u0A71|\\u0A75|\\u0A81|\\u0A82|\\u0ABC|\\u0AC1|\\u0AC2|\\u0AC3|\\u0AC4|\\u0AC5|\\u0AC7|\\u0AC8|\\u0ACD|\\u0AE2|\\u0AE3|\\u0B01|\\u0B3C|\\u0B3F|\\u0B41|\\u0B42|\\u0B43|\\u0B44|\\u0B4D|\\u0B56|\\u0B62|\\u0B63|\\u0B82|\\u0BC0|\\u0BCD|\\u0C3E|\\u0C3F|\\u0C40|\\u0C46|\\u0C47|\\u0C48|\\u0C4A|\\u0C4B|\\u0C4C|\\u0C4D|\\u0C55|\\u0C56|\\u0C62|\\u0C63|\\u0CBC|\\u0CBF|\\u0CC6|\\u0CCC|\\u0CCD|\\u0CE2|\\u0CE3|\\u0D41|\\u0D42|\\u0D43|\\u0D44|\\u0D4D|\\u0D62|\\u0D63|\\u0DCA|\\u0DD2|\\u0DD3|\\u0DD4|\\u0DD6|\\u0E31|\\u0E34|\\u0E35|\\u0E36|\\u0E37|\\u0E38|\\u0E39|\\u0E3A|\\u0E47|\\u0E48|\\u0E49|\\u0E4A|\\u0E4B|\\u0E4C|\\u0E4D|\\u0E4E|\\u0EB1|\\u0EB4|\\u0EB5|\\u0EB6|\\u0EB7|\\u0EB8|\\u0EB9|\\u0EBB|\\u0EBC|\\u0EC8|\\u0EC9|\\u0ECA|\\u0ECB|\\u0ECC|\\u0ECD|\\u0F18|\\u0F19|\\u0F35|\\u0F37|\\u0F39|\\u0F71|\\u0F72|\\u0F73|\\u0F74|\\u0F75|\\u0F76|\\u0F77|\\u0F78|\\u0F79|\\u0F7A|\\u0F7B|\\u0F7C|\\u0F7D|\\u0F7E|\\u0F80|\\u0F81|\\u0F82|\\u0F83|\\u0F84|\\u0F86|\\u0F87|\\u0F90|\\u0F91|\\u0F92|\\u0F93|\\u0F94|\\u0F95|\\u0F96|\\u0F97|\\u0F99|\\u0F9A|\\u0F9B|\\u0F9C|\\u0F9D|\\u0F9E|\\u0F9F|\\u0FA0|\\u0FA1|\\u0FA2|\\u0FA3|\\u0FA4|\\u0FA5|\\u0FA6|\\u0FA7|\\u0FA8|\\u0FA9|\\u0FAA|\\u0FAB|\\u0FAC|\\u0FAD|\\u0FAE|\\u0FAF|\\u0FB0|\\u0FB1|\\u0FB2|\\u0FB3|\\u0FB4|\\u0FB5|\\u0FB6|\\u0FB7|\\u0FB8|\\u0FB9|\\u0FBA|\\u0FBB|\\u0FBC|\\u0FC6|\\u102D|\\u102E|\\u102F|\\u1030|\\u1032|\\u1033|\\u1034|\\u1035|\\u1036|\\u1037|\\u1039|\\u103A|\\u103D|\\u103E|\\u1058|\\u1059|\\u105E|\\u105F|\\u1060|\\u1071|\\u1072|\\u1073|\\u1074|\\u1082|\\u1085|\\u1086|\\u108D|\\u135F|\\u1712|\\u1713|\\u1714|\\u1732|\\u1733|\\u1734|\\u1752|\\u1753|\\u1772|\\u1773|\\u17B7|\\u17B8|\\u17B9|\\u17BA|\\u17BB|\\u17BC|\\u17BD|\\u17C6|\\u17C9|\\u17CA|\\u17CB|\\u17CC|\\u17CD|\\u17CE|\\u17CF|\\u17D0|\\u17D1|\\u17D2|\\u17D3|\\u17DD|\\u180B|\\u180C|\\u180D|\\u18A9|\\u1920|\\u1921|\\u1922|\\u1927|\\u1928|\\u1932|\\u1939|\\u193A|\\u193B|\\u1A17|\\u1A18|\\u1B00|\\u1B01|\\u1B02|\\u1B03|\\u1B34|\\u1B36|\\u1B37|\\u1B38|\\u1B39|\\u1B3A|\\u1B3C|\\u1B42|\\u1B6B|\\u1B6C|\\u1B6D|\\u1B6E|\\u1B6F|\\u1B70|\\u1B71|\\u1B72|\\u1B73|\\u1B80|\\u1B81|\\u1BA2|\\u1BA3|\\u1BA4|\\u1BA5|\\u1BA8|\\u1BA9|\\u1C2C|\\u1C2D|\\u1C2E|\\u1C2F|\\u1C30|\\u1C31|\\u1C32|\\u1C33|\\u1C36|\\u1C37|\\u1DC0|\\u1DC1|\\u1DC2|\\u1DC3|\\u1DC4|\\u1DC5|\\u1DC6|\\u1DC7|\\u1DC8|\\u1DC9|\\u1DCA|\\u1DCB|\\u1DCC|\\u1DCD|\\u1DCE|\\u1DCF|\\u1DD0|\\u1DD1|\\u1DD2|\\u1DD3|\\u1DD4|\\u1DD5|\\u1DD6|\\u1DD7|\\u1DD8|\\u1DD9|\\u1DDA|\\u1DDB|\\u1DDC|\\u1DDD|\\u1DDE|\\u1DDF|\\u1DE0|\\u1DE1|\\u1DE2|\\u1DE3|\\u1DE4|\\u1DE5|\\u1DE6|\\u1DFE|\\u1DFF|\\u20D0|\\u20D1|\\u20D2|\\u20D3|\\u20D4|\\u20D5|\\u20D6|\\u20D7|\\u20D8|\\u20D9|\\u20DA|\\u20DB|\\u20DC|\\u20E1|\\u20E5|\\u20E6|\\u20E7|\\u20E8|\\u20E9|\\u20EA|\\u20EB|\\u20EC|\\u20ED|\\u20EE|\\u20EF|\\u20F0|\\u2DE0|\\u2DE1|\\u2DE2|\\u2DE3|\\u2DE4|\\u2DE5|\\u2DE6|\\u2DE7|\\u2DE8|\\u2DE9|\\u2DEA|\\u2DEB|\\u2DEC|\\u2DED|\\u2DEE|\\u2DEF|\\u2DF0|\\u2DF1|\\u2DF2|\\u2DF3|\\u2DF4|\\u2DF5|\\u2DF6|\\u2DF7|\\u2DF8|\\u2DF9|\\u2DFA|\\u2DFB|\\u2DFC|\\u2DFD|\\u2DFE|\\u2DFF|\\u302A|\\u302B|\\u302C|\\u302D|\\u302E|\\u302F|\\u3099|\\u309A|\\uA66F|\\uA67C|\\uA67D|\\uA802|\\uA806|\\uA80B|\\uA825|\\uA826|\\uA8C4|\\uA926|\\uA927|\\uA928|\\uA929|\\uA92A|\\uA92B|\\uA92C|\\uA92D|\\uA947|\\uA948|\\uA949|\\uA94A|\\uA94B|\\uA94C|\\uA94D|\\uA94E|\\uA94F|\\uA950|\\uA951|\\uAA29|\\uAA2A|\\uAA2B|\\uAA2C|\\uAA2D|\\uAA2E|\\uAA31|\\uAA32|\\uAA35|\\uAA36|\\uAA43|\\uAA4C|\\uFB1E|\\uFE00|\\uFE01|\\uFE02|\\uFE03|\\uFE04|\\uFE05|\\uFE06|\\uFE07|\\uFE08|\\uFE09|\\uFE0A|\\uFE0B|\\uFE0C|\\uFE0D|\\uFE0E|\\uFE0F|\\uFE20|\\uFE21|\\uFE22|\\uFE23|\\uFE24|\\uFE25|\\uFE26/;\r\n\r\n// combining space mark\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FMc%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Mc = /\\u0903|\\u093E|\\u093F|\\u0940|\\u0949|\\u094A|\\u094B|\\u094C|\\u0982|\\u0983|\\u09BE|\\u09BF|\\u09C0|\\u09C7|\\u09C8|\\u09CB|\\u09CC|\\u09D7|\\u0A03|\\u0A3E|\\u0A3F|\\u0A40|\\u0A83|\\u0ABE|\\u0ABF|\\u0AC0|\\u0AC9|\\u0ACB|\\u0ACC|\\u0B02|\\u0B03|\\u0B3E|\\u0B40|\\u0B47|\\u0B48|\\u0B4B|\\u0B4C|\\u0B57|\\u0BBE|\\u0BBF|\\u0BC1|\\u0BC2|\\u0BC6|\\u0BC7|\\u0BC8|\\u0BCA|\\u0BCB|\\u0BCC|\\u0BD7|\\u0C01|\\u0C02|\\u0C03|\\u0C41|\\u0C42|\\u0C43|\\u0C44|\\u0C82|\\u0C83|\\u0CBE|\\u0CC0|\\u0CC1|\\u0CC2|\\u0CC3|\\u0CC4|\\u0CC7|\\u0CC8|\\u0CCA|\\u0CCB|\\u0CD5|\\u0CD6|\\u0D02|\\u0D03|\\u0D3E|\\u0D3F|\\u0D40|\\u0D46|\\u0D47|\\u0D48|\\u0D4A|\\u0D4B|\\u0D4C|\\u0D57|\\u0D82|\\u0D83|\\u0DCF|\\u0DD0|\\u0DD1|\\u0DD8|\\u0DD9|\\u0DDA|\\u0DDB|\\u0DDC|\\u0DDD|\\u0DDE|\\u0DDF|\\u0DF2|\\u0DF3|\\u0F3E|\\u0F3F|\\u0F7F|\\u102B|\\u102C|\\u1031|\\u1038|\\u103B|\\u103C|\\u1056|\\u1057|\\u1062|\\u1063|\\u1064|\\u1067|\\u1068|\\u1069|\\u106A|\\u106B|\\u106C|\\u106D|\\u1083|\\u1084|\\u1087|\\u1088|\\u1089|\\u108A|\\u108B|\\u108C|\\u108F|\\u17B6|\\u17BE|\\u17BF|\\u17C0|\\u17C1|\\u17C2|\\u17C3|\\u17C4|\\u17C5|\\u17C7|\\u17C8|\\u1923|\\u1924|\\u1925|\\u1926|\\u1929|\\u192A|\\u192B|\\u1930|\\u1931|\\u1933|\\u1934|\\u1935|\\u1936|\\u1937|\\u1938|\\u19B0|\\u19B1|\\u19B2|\\u19B3|\\u19B4|\\u19B5|\\u19B6|\\u19B7|\\u19B8|\\u19B9|\\u19BA|\\u19BB|\\u19BC|\\u19BD|\\u19BE|\\u19BF|\\u19C0|\\u19C8|\\u19C9|\\u1A19|\\u1A1A|\\u1A1B|\\u1B04|\\u1B35|\\u1B3B|\\u1B3D|\\u1B3E|\\u1B3F|\\u1B40|\\u1B41|\\u1B43|\\u1B44|\\u1B82|\\u1BA1|\\u1BA6|\\u1BA7|\\u1BAA|\\u1C24|\\u1C25|\\u1C26|\\u1C27|\\u1C28|\\u1C29|\\u1C2A|\\u1C2B|\\u1C34|\\u1C35|\\uA823|\\uA824|\\uA827|\\uA880|\\uA881|\\uA8B4|\\uA8B5|\\uA8B6|\\uA8B7|\\uA8B8|\\uA8B9|\\uA8BA|\\uA8BB|\\uA8BC|\\uA8BD|\\uA8BE|\\uA8BF|\\uA8C0|\\uA8C1|\\uA8C2|\\uA8C3|\\uA952|\\uA953|\\uAA2F|\\uAA30|\\uAA33|\\uAA34|\\uAA4D/;\r\n\r\n// decimal number\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FNd%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Nd = /\\u0030|\\u0031|\\u0032|\\u0033|\\u0034|\\u0035|\\u0036|\\u0037|\\u0038|\\u0039|\\u0660|\\u0661|\\u0662|\\u0663|\\u0664|\\u0665|\\u0666|\\u0667|\\u0668|\\u0669|\\u06F0|\\u06F1|\\u06F2|\\u06F3|\\u06F4|\\u06F5|\\u06F6|\\u06F7|\\u06F8|\\u06F9|\\u07C0|\\u07C1|\\u07C2|\\u07C3|\\u07C4|\\u07C5|\\u07C6|\\u07C7|\\u07C8|\\u07C9|\\u0966|\\u0967|\\u0968|\\u0969|\\u096A|\\u096B|\\u096C|\\u096D|\\u096E|\\u096F|\\u09E6|\\u09E7|\\u09E8|\\u09E9|\\u09EA|\\u09EB|\\u09EC|\\u09ED|\\u09EE|\\u09EF|\\u0A66|\\u0A67|\\u0A68|\\u0A69|\\u0A6A|\\u0A6B|\\u0A6C|\\u0A6D|\\u0A6E|\\u0A6F|\\u0AE6|\\u0AE7|\\u0AE8|\\u0AE9|\\u0AEA|\\u0AEB|\\u0AEC|\\u0AED|\\u0AEE|\\u0AEF|\\u0B66|\\u0B67|\\u0B68|\\u0B69|\\u0B6A|\\u0B6B|\\u0B6C|\\u0B6D|\\u0B6E|\\u0B6F|\\u0BE6|\\u0BE7|\\u0BE8|\\u0BE9|\\u0BEA|\\u0BEB|\\u0BEC|\\u0BED|\\u0BEE|\\u0BEF|\\u0C66|\\u0C67|\\u0C68|\\u0C69|\\u0C6A|\\u0C6B|\\u0C6C|\\u0C6D|\\u0C6E|\\u0C6F|\\u0CE6|\\u0CE7|\\u0CE8|\\u0CE9|\\u0CEA|\\u0CEB|\\u0CEC|\\u0CED|\\u0CEE|\\u0CEF|\\u0D66|\\u0D67|\\u0D68|\\u0D69|\\u0D6A|\\u0D6B|\\u0D6C|\\u0D6D|\\u0D6E|\\u0D6F|\\u0E50|\\u0E51|\\u0E52|\\u0E53|\\u0E54|\\u0E55|\\u0E56|\\u0E57|\\u0E58|\\u0E59|\\u0ED0|\\u0ED1|\\u0ED2|\\u0ED3|\\u0ED4|\\u0ED5|\\u0ED6|\\u0ED7|\\u0ED8|\\u0ED9|\\u0F20|\\u0F21|\\u0F22|\\u0F23|\\u0F24|\\u0F25|\\u0F26|\\u0F27|\\u0F28|\\u0F29|\\u1040|\\u1041|\\u1042|\\u1043|\\u1044|\\u1045|\\u1046|\\u1047|\\u1048|\\u1049|\\u1090|\\u1091|\\u1092|\\u1093|\\u1094|\\u1095|\\u1096|\\u1097|\\u1098|\\u1099|\\u17E0|\\u17E1|\\u17E2|\\u17E3|\\u17E4|\\u17E5|\\u17E6|\\u17E7|\\u17E8|\\u17E9|\\u1810|\\u1811|\\u1812|\\u1813|\\u1814|\\u1815|\\u1816|\\u1817|\\u1818|\\u1819|\\u1946|\\u1947|\\u1948|\\u1949|\\u194A|\\u194B|\\u194C|\\u194D|\\u194E|\\u194F|\\u19D0|\\u19D1|\\u19D2|\\u19D3|\\u19D4|\\u19D5|\\u19D6|\\u19D7|\\u19D8|\\u19D9|\\u1B50|\\u1B51|\\u1B52|\\u1B53|\\u1B54|\\u1B55|\\u1B56|\\u1B57|\\u1B58|\\u1B59|\\u1BB0|\\u1BB1|\\u1BB2|\\u1BB3|\\u1BB4|\\u1BB5|\\u1BB6|\\u1BB7|\\u1BB8|\\u1BB9|\\u1C40|\\u1C41|\\u1C42|\\u1C43|\\u1C44|\\u1C45|\\u1C46|\\u1C47|\\u1C48|\\u1C49|\\u1C50|\\u1C51|\\u1C52|\\u1C53|\\u1C54|\\u1C55|\\u1C56|\\u1C57|\\u1C58|\\u1C59|\\uA620|\\uA621|\\uA622|\\uA623|\\uA624|\\uA625|\\uA626|\\uA627|\\uA628|\\uA629|\\uA8D0|\\uA8D1|\\uA8D2|\\uA8D3|\\uA8D4|\\uA8D5|\\uA8D6|\\uA8D7|\\uA8D8|\\uA8D9|\\uA900|\\uA901|\\uA902|\\uA903|\\uA904|\\uA905|\\uA906|\\uA907|\\uA908|\\uA909|\\uAA50|\\uAA51|\\uAA52|\\uAA53|\\uAA54|\\uAA55|\\uAA56|\\uAA57|\\uAA58|\\uAA59|\\uFF10|\\uFF11|\\uFF12|\\uFF13|\\uFF14|\\uFF15|\\uFF16|\\uFF17|\\uFF18|\\uFF19/;\r\n\r\n// connector punctuation\r\n// http://query.yahooapis.com/v1/public/yql?q=select%20content%20from%20html%20where%20url%3D%22http%3A%2F%2Fwww.fileformat.info%2Finfo%2Funicode%2Fcategory%2FPc%2Flist.htm%22%20and%20xpath%3D'%2F%2Fa'%20and%20href%20like%20'%2Finfo%2Funicode%2Fchar%2F%25'%20and%20href%20like%20'%25%2Findex.htm'&format=json&diagnostics=false&callback=cbfunc\r\nUnicode.Pc = /\\u005F|\\u203F|\\u2040|\\u2054|\\uFE33|\\uFE34|\\uFE4D|\\uFE4E|\\uFE4F|\\uFF3F/;\r\n\r\n// unicode spaces\r\n// http://www.cs.tut.fi/~jkorpela/chars/spaces.html (this is all except for the zero width no-break space, because that's a seperate mention in the ecmascript spec)\r\nUnicode.sp = /\\u0020|\\u2000|\\u2001|\\u2002|\\u2003|\\u2004|\\u2005|\\u2006|\\u2007|\\u2008|\\u2009|\\u200A|\\u200B|\\u202F|\\u205F|\\u3000/; \r\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/zeparser/unicodecategories.js?");

/***/ }),

/***/ "?4f7e":
/*!********************************!*\
  !*** ./util.inspect (ignored) ***!
  \********************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/./util.inspect_(ignored)?");

/***/ }),

/***/ "?067d":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/fs_(ignored)?");

/***/ }),

/***/ "?0cc0":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/util_(ignored)?");

/***/ }),

/***/ "?aeb7":
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/util_(ignored)?");

/***/ }),

/***/ "?2c1b":
/*!*******************************!*\
  !*** child_process (ignored) ***!
  \*******************************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/child_process_(ignored)?");

/***/ }),

/***/ "?f4f5":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://multicast-device-discovery/fs_(ignored)?");

/***/ }),

/***/ "./node_modules/available-typed-arrays/index.js":
/*!******************************************************!*\
  !*** ./node_modules/available-typed-arrays/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar /** @type {ReturnType<import('.')>} */ possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n\n\n//# sourceURL=webpack://multicast-device-discovery/./node_modules/available-typed-arrays/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;